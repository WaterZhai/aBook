第7章   网络安全

随着计算机网络的发展，网络中的安全问题也日趋严重。当网络的用户来自社会各个阶层与部门时，大量在网络中的存储和传输的数据就需要保护。由于计算机网络安全是另一门专业学科，所以本章只对计算机网络安全问题的基本内容进行初步的介绍。

7.1网络安全问题概述
    本节讨论计算机网络面临的安全性威胁、安全的内容和一般的数据加密模型。
    7.1.1计算机网络面临的安全性威胁
    计算机网络上的通信面临以下的四种威胁：
    （1）截获（interception）   攻击者从网络上窃听他人的通信内容。
    （2）中断（interruption）   攻击者有意中断他人在网络上的通信。
    （3）篡改（modification）   攻击者故意篡改网络上传送的报文。
    （4）伪造（fabrication）    攻击者伪造信息在网络上传送。
    上述四种威胁可划分为两大类，即被动攻击和主动攻击。在上述情况中，截获信息的攻击称为被动攻击，而中断、篡改和伪造信息的攻击称为主动攻击。
    在被动攻击中，攻击者只是观察和分析某一个协议数据单元PDU（这里使用PDU这一名词时考虑到所涉及到的可能是不同的层次）而不干扰信息流。即使这些数据对攻击者来说是不易理解的，他也可通过观察PDU的协议控制信息部分，了解正在通信的协议实体的地址和身份，研究PDU的长度和传输的频度，以便了解所交换的数据的某种性质。这种被动攻击又称为流量分析（traffic analysis）。
    主动攻击是指攻击者对某个连接中通过的PDU进行各种处理。如有选择地更改、删除、延迟这些PDU（当然也包括记录和复制它们），还可在稍后的时间将以前录下的PDU插入这个连接（即重放攻击）。甚至还可将合成的或伪造的PDU送入到一个连接中去。
    所有主动攻击都是上述几种方法的某种组合。但从类型上看，主动攻击又可进一步划分为三种，即：
    （1）更改报文流    包括对通过连接的PDU的真实性、完整性和有序性的攻击。
    （2）拒绝服务   指攻击者向因特网上的服务器不停地发送大量分组，使因特网或服务器无法提供正常服务。在2000年2月7日至9日美国几个著名网站遭黑客袭击，使这些网站的服务器一直处于“忙”的状态，因而无法向发出请求的客户提供服务。这种攻击被称为拒绝服务DoS（Denial of Service）。若从因特网上的成百上千的网站集中攻击一个网站，则称为分布式拒绝服务DDoS（Distributed Denial of Service）。有时也把这种攻击称为网络带宽攻击或连通性攻击。
    （3）伪造连接初始化    攻击者重放以前已被记录的合法连接初始化序列，或者伪造身份而企图建立连接。
    对于主动攻击，可以采取适当措施加以检测。但对于被动攻击，通常却是检测不出来的。根据这些特点，可得出计算机网络通信安全的五个目标如下：
    （1）防止析出报文内容。
    （2）防止流量分析。
    （3）检测更改报文流。
    （4）检测拒绝报文服务。
    （5）检测伪造初始化连接。
    对付被动攻击可采用各种数据加密技术，而对付主动攻击，则需将加密技术与适当的鉴别技术相结合。
    还有一种特殊的主动攻击就是恶意程序（rogue program）的攻击。恶意程序种类繁多，对网络安全威胁较大的主要有以下几种：
    （1）计算机病毒（computer virus），一种会“传染”其他程序的程序，“传染”是通过修改其他程序来把自身或其变种复制进去完成的。
    （2）计算机蠕虫（computer worm），一种通过网络的通信功能将自身从一个结点发送到另一个节点并自动启动运行的程序。
    （3）特洛伊木马（Trojan house），一种程序，它执行的功能并非所声称的功能而是某种恶意的功能。如一个编译程序除了执行编译任务以外，还把用户的源程序偷偷地拷贝下来，则这种编译程序就是一种特洛伊木马。计算机病毒有时也以特洛伊木马的形式出现。
    （4）逻辑炸弹（logic bombo），一种当运行环境满足某种特定条件时执行其他特殊功能的程序。如一个编辑程序，平时运行得很好，但当系统时间为13日又为星期五时，它删去系统中所有的文件，这种程序就是一种逻辑炸弹。
    这里讨论的计算机病毒是狭义的，也有人把所有的恶意程序泛指为计算机病毒。例如1998年10月的“Morris病毒”入侵美国因特网。舆论说它是“计算机病毒入侵美国计算机网”，而计算机安全专家却称之为“因特网蠕虫事件”。
    7.1.2计算机网络安全的内容
    计算机网络安全主要有以下一些内容：
    1.保密性
    为用户提供安全可靠的保密通信是计算机网络安全最为重要的内容。尽管计算机网络安全不仅仅局限于保密性，但不能提供保密性的网络肯定是不安全的。网络的保密性机制除为用户提供保密通信以外，也是许多其他安全机制的基础。例如，访问控制中登录口令的设计、安全通信协议的设计以及数字签名的设计等，都离不开密码机制。
    2.安全协议的设计
    人们一直希望能设计出一种安全的计算机网络，但不幸的是，网络的安全性是不可判定的。目前在安全协议的设计方面，主要是针对具体的攻击（如假冒）设计安全的通信协议。但如何保证所设计出的协议是安全的？这可以使用两种方法。一种是用形式化的方法来证明，另一种是用经验来分析协议的安全性。形式化证明的方法是人们所希望的，但一般意义上的协议安全性也是不可判定的，只能针对某种特定类型的攻击来谈论起安全性。对复杂的通信协议的安全性，形式化证明比较困难，所以主要采用人工分析的方法来找漏洞。对于简单的协议，可通过限制敌手的操作（即假定敌手不会进行某种攻击）来对一些特定情况进行形式化的证明，当然，这种方法有很大的局限性。
    3.访问控制
    访问控制（access control）也叫做存取控制或接入控制。必须对接入网络的权限加以控制，并规定每个用户的接入权限。由于网络是个非常复杂的系统，其访问控制机制比操作系统的访问控制机制更复杂（尽管网络的访问控制机制是建立在操作系统的访问控制机制之上），尤其在更高级别安全的多级安全（multilevel security）情况下更是如此。
    所有上述计算机网络安全的内容都与密码技术紧密相关。如在保密通信中，要用加密算法来对消息进行加密，以对抗可能的窃听；安全协议中的一个重要内容就是要论证协议所采用的加密算法的强度：在访问控制系统的设计中，也要用到加密技术。
    7.1.3一般的数据加密模型
    一般的数据加密模型如图所示。用户A向B发送明文X，但通过加密算法E运算后，就得出密文Y。
    图中所示的加密和解密用的密钥K（key）是一串秘密的字符串（或比特串）。公式就是明文通过加密算法变成密文的一般表示方法。Y=Ek（X）。
    在传送过程中可能出现密文的截取者（或攻击者、入侵者）。公式表示接收端利用解密算法D运算和解密密钥K，解出明文X。解密算法是加密算法的逆运算。在进行解密运算时如果不使用事先约定好的密钥就无法解出明文。Dk（Y）=Dk（Ek（X））=X。
    这里我们假定加密密钥和解密密钥都是一样的。但实际上它们可以是不一样的（即使不一样，这两个密钥也必然有某种相关性）。密钥通常是由密钥中心提供。当密钥需要向远地传送时，一定要通过另一个安全通道。
    密码编码学（cryptography）是密码体制的设计学，而密码分析学（cryptanalysis）则是在未知密钥的情况下从密文推演出明文或密钥的技术。密码编码学与密码分析学合起来即为密码学（cryptology）。
    如果不论截取者获得了多少密文，但在密文中都没有足够的信息来唯一地确定出对应的明文，则这一密码体制称为无条件安全的，或称为理论上是不可破的。在无任何限制的条件下，目前几乎所有使用的密码体制均是可破的。因此，人们关心的是要研制出在计算上（而不是在理论上）是不可破的密码体制。如果一个密码体制中的密码不能在一定时间内被可以使用的计算资源破译，则这一密码体制称为在计算上是安全的。
    早在几千年前人美就已经有了通信保密的思想和方法。但直到1949奶奶，信息论创始人香农（C.E.Shannon）发表注明文章，论证了一般经典加密方法得到的密文几乎都是可破的。密码学的研究曾面临着严重的危机。但从20世纪60年代起，随着电子技术、计算技术的迅速发展以及结构代数、可计算性和计算复杂性理论等学科的研究，密码学又进入了一个新的发展时期。在20世纪70年代后期，美国的数据加密标准DES（Data Encryption Standard）和公钥密码体制（public key crypto-system，又称为公开密钥密码体制）的出现，成为近代密码学发展史上的两个重要里程碑。
7.2两类密码体制
    7.2.1对称密钥密码体制
    所谓对称密钥密码体制，即加密密钥与解密密钥是相同的密码体制。
    数据加密标准DES属于对称密钥密码体制。它由IBM公司研制出，于1977年被美国定位联邦信息标准后，在国际上引起了极大的重视。ISO曾DES作为数据加密标准。
    DES是一种分组密码。在加密前，先对整个的明文进行分组。没一个组为64位长的二进制数据。然后对每一个64位二进制数据进行加密处理，产生一组64位密文数据。最后将各组密文串联起来，即得出整个的密文。使用的密钥为64位（实际密钥长度为56位，有8位用于奇偶校验）。
    DES的保密性仅取决于对密钥的保密，而算法是公开的。目前较为严重的问题是DES的密钥长度。56位长的密钥意味着共有2^56种可能的密钥，也就是说，共约有7.6x10^16种密钥。假设一台计算机1μs可执行一次DES加密，同时假定平均只需搜索密钥空间的一半即可找到密钥，那么破译DES要超过1000年。
    但现在已经设计出来搜索DES密钥的专用芯片。例如在1999年有一批在因特网上合作的人借助于一台不到25万美元的专用计算机，在略大于22小时的时间就破译了56位密钥的DES。若用价格为100万美元或1000万美元的机器，则预期的搜索时间分别为3.5小时或21分钟。
    在DES之后出现了国际数据加密算法IDEA（International Data Encryption Algorithm）。IDEA使用128位密钥，因而更不容易被攻破。计算指出，当密钥长度为128位时，若每微秒可搜索一百万次，则破译IDEA密码需要花费5.4x10^18年。这显然是比较安全的。
    7.2.2公钥密码体制
    公钥密码体制（又称为公开密钥密码体制）的概念是由Stanford大学的研究人员Diffie与Hellman于1976年提出的。公钥密码体制使用不同的加密密钥与解密密钥。
    公钥密码体制的产生主要是两个方面的原因，一是由于对称密钥密码体制的密钥分配问题，二是由于对数字签名的需求。
    在对称密钥密码体制中，加解密的双方使用的是相同的密钥。但怎样才能做到这一点呢？一种是事先约定，另一种是用信使来传送。在高度自动化的大型计算机网络中，用信使来传送密钥显然是不合适的。如果事先约定密钥，就会给密钥的管理和更换都带来了极大的不便。若使用高度安全的密钥分配中心KDC（Key Distribution Center），也会使得网络成本增加。
    对数字签名的强烈需要也是产生公钥密码体制的一个原因。在许多应用中，人们需要对纯数字的电子信息进行签名，表明该信息确实是某个特定的人产生的。
    公钥密码体制提出不久，人们就找到了三种公钥密码体制。目前最著名的是由美国三维科学家Rivest，Shamir和Adleman于1976年提出并在1978年正式发表的RSA体制，它是基于数论中的大数分解问题的体制。
    在公钥密码体制中，加密密钥PK（public key，即公钥）是向公众公开的，而解密密钥SK（secret key，即私钥或秘钥）则是需要保密的。加密算法E和解密算法D也都是公开的。
    公钥密码体制的加密和解密过程有如下特点：
    （1）密钥对产生器产生出接收者B的一对密钥：加密密钥PKb和解密密钥SKb。发送者A所用的加密密钥PKb就是接收者B的公钥，它向公众公开。而B所用的解密密钥SKb就是接收者B的私钥，对其他人都保密。
    （2）发送者A用B的公钥PKb通过E运算对明文X加密，得出密文Y，发送给B。Y=Epkb（X）。B用自己的私钥SKb通过D运算进行解密，恢复出明文，即Dskb（Y）=Dskb（Epkb（X））=X。
    （3）虽在计算机上可以容易地产生成对的PKb和SKb。但从已知的PKb实际上不可能推导出SKb，即从PKb到SKb是“计算上不可能的”。
    （4）虽然公钥可用来加密，但却不能用来解密，即Dpkb（Epkb（X））！=X
    （5）先后对X进行D运算和E运算或进行E运算和D运算，结果都是一样的：Epkb（Dskb（X））=Dskb（Epkb（X））=X。
    图给出了用公钥密码体制进行加密的过程。
    请注意，任何加密方法的安全性取决于密钥的长度，以及攻破密文所需的计算量，而不是简单地取决于加密的体制（公钥密码体制或传送加密体制）。我们还要指出，公钥密码体制并没有使传统密码体制成为陈旧的，因为目前公钥加密算法的开销较大，在可见的将来还看不出来要放弃传送的加密方法。
7.3数字签名
    书信或文件是根据亲笔签名或印章来证明其真实性。但在计算机网络中传送的文电又如何盖章呢？这就要使用数字签名。数字签名必须保证能够实现以下三点功能：
    （1）接收者能够核实发送者对报文的签名。也就是说，接收者能够确信该报文的确是发送者发送的。其他人无法伪造对报文的签名。这就叫做报文鉴别。
    （2）接收者确信所受到的数据和发送者发送的完全一样而没有被篡改过。这就叫做报文的完整性。
    （3）发送者事后不能抵赖对报文的签名。这就叫做不可否认。
    现在已有多种实现数字签名的方法。但采用公钥算法要比采用对称密钥算法更容易实现。下面就来介绍这种数字签名。
    为了进行签名，A用其私钥SKa对报文X进行D运算。D运算本来叫做解密运算。还没有加密怎么就进行解密呢？这并没有关系。因为D运算只是得到了某种不可读的密文。在图中我们协商的是“D运算”而不写上“解密运算”就是为了避免产生这种误解。A把进过D运算得到的密文转送给B。B为了核实签名，用A的公钥进行E运算，还原出明文X。请注意，任何人用A的公钥PKa进行E运算都可以得出A发送的明文。可见图中的D运算和E运算都不是为了解密和加密，而是为了进行签名和核实签名。
    下面讨论一下数字签名为什么具有上述的三点功能。
    因为除A外没有别人持有A的私钥SKa，所以除A外没有别人能产生密文Dska（X）。这样，B就相信报文X是A签名发送的。这就是报文鉴别的功能。同理，其他人如果篡改过报文，但并无法得到A的私钥SKa来对X进行加密。B对篡改过的报文进行解密后，将会得出不可读的明文，就知道收到的报文被篡改过。这样就保证报文完整性的功能。若A要抵赖曾发送报文给B，B可把X及Dska（X）出示给进行公证的第三者。第三者很容易用PKa去证实A确实发送X给B。这就是不可否认的功能。这里的关键都是没有其他人能够持有A的私钥SKa。
    但上述过程仅对报文进行了签名。对报文X本身却位保密。因为截获到密文Dska（X）并知道发送者身份的任何人，通过查阅手册即可获得发送者的公钥PKa，因而能知道报文的内容。若采用图所示的方法，则可同时实现秘密通信和数字签名。图中SKa和SKb分别为A和B的私钥，而PKa和PKb分别为A和B的公钥。
7.4鉴别
    在网络的应用中，鉴别（authentication）是网络安全中的一个很重要的问题。鉴别和加密并不相同。鉴别是要验证通信的对方的确是自己所要通信的对象，而不是其他的冒充者。鉴别可分为两种。一种是报文鉴别，即所受到的报文的确是报文的发送者所发送的，而不是其他人伪造的或篡改的。另一种则是实体鉴别。实体可以是一个人，也可以是一个进程（客户或服务器）。
    请注意，鉴别与授权（authorization）是不同的概念。授权涉及到的问题是：所进行的过程是否被允许（如是否可以对某文件进行读或写）。下面分别讨论报文鉴别与实体鉴别的特点。
    7.4.1报文鉴别
    许多报文并不需要加密但却需要数字签名，以便让报文的接收者能够鉴别报文的真伪。然而对很长的报文进行数字签名会使计算机增加很大的负担（需要进行很长时间的运算），例如图所示的D运算和E运算都需要花费很多的CPU时间。因此，当我们传送不需要加密的报文时，应当使接收者能用很简单的方法鉴别报文的真伪。
    报文摘要MD（Message Digest）是进行报文鉴别的简单方法。如图所示，A把较长的报文X经过报文摘要算法后得出很短的报文摘要H。然后用自己的私钥对H进行D运算，即进行数字签名。得出已签名的报文摘要D（H）后，并将其追加在报文X后面发送给B。B收到报文后首次把已签名的D（H）和报文X分离。然后再做两件事。第一，用A的公钥对D（H）进行E运算，得出报文摘要H。如一样，就能以极高的概率断定收到的报文是A产生的。否则就不是。报文摘要的优点就是：仅对短得多的定长报文摘要H进行数字签名要比对整个长报文进行数字签名要简单得多，所耗费的计算资源也小得多，但对鉴别报文X来说，效果是一样的。也就是说，报文X和已签名的报文摘要D（H）合在一起是不可伪造的，是可检验的和不可否认的。
    报文摘要算法就是一种散列函数。这种散列函数也叫做密码编码的检验和，因为它的性质和前面我们多次提到的检验和十分相似。我们知道，检验和时用来防止通信时偶然出现的差错。但报文摘要算法确是防止报文被人恶意篡改。
    报文摘要算法是精心选择的一种单向（one-way）函数。我们知道，检验和算法也是单向的。这就是说，给出一个很长的报文，我们可以非常容易地计算出它的检验和。检验和的长度固定，而且很短。但我们不可能进行逆计算，由检验和把原始的报文计算出来。报文摘要也有类似的性质。我们可以很容易地计算出一个长报文X的报文摘要H，可是要想从报文摘要H反过来找到原始的报文X，则实际上是不可能的。此外，若想找到任意另个报文，使得它们具有相同的报文摘要，那么实际上䦹不可能的。
    上述的概念表明：若（M，H）是发送者产生的“报文和报文摘要对”，则攻击者不可能伪造出另一个报文，使得该报文与M具有同样的报文摘要H。发送者还可以对报文摘要H进行数字签名，使报文成为可检验的及不可否认的。
    RFC 1321提出的报文摘要算法MD5已获得了广泛的应用。它可对任意长的报文进行运算，然后得出128位的MD5报文摘要代码。MD5的算法大致的过程如下：
    （1）先把任意长的报文按模2^64计算其余数（64位），追加在报文的后面。
    （2）在报文和余数之间填充1~512位，使得填充后的总长度是512的整数倍。填充的首位是1，后面都是0.
    （3）把追加和填充后的报文分割为一个个512位的数据块，每个512位的报文数据再分成4个128位的数据块一次送到不同的散列函数进行4轮计算。每一轮又都按32位的小数据块进行复杂的运算。一直到最后计算出MD5报文摘要代码（128位）。
    这样得出的MD5报文摘要代码中的每一位都与原来报文中的每一位有关。Rivest提出一个猜想，即根据给定的MD5报文摘要代码找出原来报文的难度，其所需的操作量级为2^128。到目前为止，还没有任何分析可以证明这种猜想是错误的。
    MD5算法目前已在因特网上大量使用。另一种标准叫做安全散列算法SHA（Secure Hash Algorithm），它和MD5相似，但码长为160位。SHA也是用512位长的数据块经过复杂运算得出的。SHA比MD5更安全，但计算起来却比MD5要慢些。新的一个版本SHA-1也已制定出来。
    7.4.2实体鉴别
    实体鉴别和报文鉴别不同。报文鉴别是对每一个收到的报文都要鉴别报文的发送者，而实体鉴别是在系统接入的全部持续时间内对和自己通信的对方实体只需验证一次。
    最简单的实体鉴别过程如图所示。在图中的A向远端的B发送有自己的身份A（例如，A的姓名）和口令的报文，并且使用双方约定好的共享对称密钥Kab进行加密。图中A发送给B的报文的左上方的小锁表示报文已被加密，而加密用的对称密钥Kab就标注在小锁的左边。B收到此报文后，用共享对称密钥Kab进行解密，因而鉴别了实体A的身份。
    然而这种简单的鉴别方法具有明显的漏洞。例如，入侵者C可以从网络上截获A发送给B的报文。C并不需要破译这个报文（因为这可能话很多时间）而可以直接把这个由A加密的报文发送给B，使B误认为C就是A。然后B就向伪装是A的C发送许多本来应当发给A的报文。这就叫做重放攻击（replay attack）。C甚至还可以截获A的IP地址，然后把A的IP地址冒充为自己的IP地址（这叫作IP欺骗），是B更加容易受骗。
    为了对付重放攻击，可以使用不重数（nonce）。不重数就是一个不重复使用的大随机数，即“一次一数”。在鉴别过程中不重数可以使B能够把重复的鉴别请求和新的鉴别请求区分开。图给出了这个过程。
    在图中，A首先用明文发送其身份A和一个不重数Ra给B。接着，B响应A的查问，用共享的密钥Kab对Ra加密后发回给A，同时也给出了自己的不重数Rb。最后，A再响应B的查问，用共享的密钥Kab对Rb加密后发回给B。这里很重要的一点是A和B对不同的会话必须使用不同的不重数集。由于不重数不能重复使用，所以C在进行重放攻击时无法重复使用所截获的不重数。
    在使用公钥密码体制时，可以对不重数进行签名鉴别。例如在图中，B用其私钥对不重数Ra进行签名后发回给A。A用B的公钥核实签名。如能得出自己原来发送的不重数Ra，就核实了和自己通信的对方的确是B。同样，A也用自己的私钥对不重数Rb进行签名后发送给B。B用A的公钥核实签名，鉴别了A的身份。
    公钥密码体制虽然不必再互相通信的用户之间秘密地分配共享密钥，但仍有受到攻击的可能。让我们看下面的例子。
    C冒充是A，发送报文给B说：“我是A”。
    B选择一个不重数Rb，发送给A，但被C截获了。
    C用自己的私钥SKc冒充是A的私钥，对Rb加密，并发送给B。
    B向A发送报文，要求对方把解密用的公钥发送过来，但这报文也被C截获了。
    C把自己的公钥Pkc冒充是A的公钥发送给B。
    B用收到的公钥PKc对收到的加密的Rb进行解密，其结果当然正确。于是B相信通信的对方是A，接着就向A发送许多敏感数据，但都被C截获了。
    然而上述这种欺骗手段不够高明，因为B只要打电话询问一下A就能戳穿骗局，因为A根本没有和B进行通信。但下面的“中间人攻击”（man-in-the-middle attack）就更加具有欺骗性。图是“中间人攻击”的示意图。
    从图可看出，A想和B通信，向B发送“我是A”的报文，并给出了自己的身份。这个报文被“中间人”C截获，C把这个报文原封不动地转发给B。B选择一个不重数Rb发送给A，但同样被C截获后也照样转发给A。
    中间人C用自己的私钥SKc对Rb加密后发回给B，使B误以为是A发来的。A收到Rb后也用自己的私钥SKa对Rb加密后发回给B，但中途被C截获并丢弃。B向A索取其公钥，这个报文被C截获后转发给A。
    C把自己额公钥PKc冒充是A的发送给B，而C也截获到A发送给B的公钥PKa。
    B用收到的公钥PKc（以为是A的）对数据DATA加密，并发送给A。C截获后用自己的siyueSKc解密，复制一份留下，然后再用A的公钥PKa对数据DATA加密后发送给A。A收到数据后，用自己的私钥SKa解密，以为和B进行了保密通信。其实，B发送给A的加密数据已被中间人C截获并解密了一份。但A和B却都不知道。
    由此可见，公钥的分配也是一个非常重要的问题。关于这点我们在后面还要讨论。
7.5密钥分配
    由于密码算法是公开的，网络的安全性就完全基于密钥的安全保护上。因此在密码学中出现了一个重要的分支--密钥管理。密钥管理包括：密钥的产生、分配、注入、验证和使用。本节只讨论密钥的分配。
    密钥分配（或密钥分发）是密钥管理中的最大的问题。密钥必须通过最安全的通路进行分配。例如，可以拍非常可靠的信使携带密钥分配给互相通信额各用户。这种方法称为网外分配方式。但随着用户的增多和网络流量的增大，密钥更换频繁（密钥必须定期更换才能做到可靠），拍信使的办法已不再适用，而应采用网内分配方式，即对密钥自动分配。
    7.5.1对称密钥的分配
    对称密钥分配存在以下两个问题。
    第一，如果n个人中的每一个需要和其他n-1个人通信，就需要n（n-1）个密钥。但每两个人共享一个密钥，因此密钥数是n（n-1）/2.这常称为n^2问题。如果n是个很大的数，所需要额密钥数量就非常大。
    第二，通信的双方怎样才能安全地得到共享的密钥呢？正是因为网络不安全，所以才需要使用加密技术。但密钥又需要怎样传送呢？
    目前常用的密钥分配方式是设立密钥分配中心KDC（Key Distribution Center）。KDC是大家都信任的机构，其任务就是给需要进行秘密通信额用户临时分配一个会话密钥（仅使用一次）。在图中假定用户A和B都是KDC的登记用户。A和B在KDC登记时就已经在KDC的服务器上安装了各自和KDC进行通信的主密钥（master key）Ka和Kb。为简单起见，下面在叙述中把“主密钥”简称为“密钥”。密钥分配分为三个步骤。
        1.用户A向密钥分配中心KDC发送用明文，说明想和用户B通信。在明文中给出A和B在KDC登记的身份。
        2.KDC用随机数产生“一次一密”的会话密钥Kab供A和B的这次会话使用，然后向A发送回答报文。这个回答报文用A的密钥Ka加密。这个报文中包含有这次会话使用的密钥Kab和请A转给B的一个票据（ticket），它包含A和B在KDC登记的身份，以及这次会话将要使用的密钥Kab。这个票据用B的密钥Kb加密，因此A无法知道此票据的内容，因为A没有B的密钥Kb。当然A也不需要知道此票据的内容。
        3.当B收到A转来的票据并使用自己的密钥Kb解密后，就知道A要和他通信，同时也知道KDC为这次和A的通信所分配的会话密钥Kab。
    此后，A和B就可使用会话密钥Kab进行这次通信了。
    请注意，在网络上传送密钥时，都是经过加密的。解密用的密钥都不在网上传送。
    KDC还可在报文中加入时间戳，以防止报文的截取者利用以前已记录下的报文进行重放攻击。会话密钥Kab是一次性的，因此保密性较高。而KDC分配给用户的密钥Ka和Kb，都应定期更换以减少攻击者破译密钥的机会。
    目前最出名的密钥分配协议是Kerberos V5，是美国麻省理工学院MIT开发出的。Kerberos既是鉴别协议，同时也是KDC，它已经变得很普及。Kerberos使用比DEC更加安全的先进的加密标准AES（Advanced Encryption Standard）进行加密。下面用图介绍KerberosV5的大致工作过程（其原理和V5大体一样，但稍简单些）。
    Kerberos使用两个服务器：鉴别服务器AS（Authentication Server）、票据授予服务器TGS（Ticket-Granting Server）。Kerberos只用于客户与服务器之间的鉴别，而不用于人对人的鉴别。在图中，A是请求服务的客户，而B是被请求的服务器。A通过Kerberos向B提出请求服务。Kerberos需要通过以下六个步骤鉴别的确是A（而不是其他别人冒充A）向B请求服务后，才向A和B分配会话使用的密钥。下面简单解释各步骤。
        1.A用明文（包括登记的身份）向鉴别服务器AS表明自己的身份。AS就是KDC，它掌握各实体登记的身份和相应的口令。AS对A的身份进行验证。只有验证结果正确才允许A和票据授予服务器TGS进行联系。
        2.AS向A发送用A的对称密钥Ka加密的报文，这个报文包括A和TGS通信的会话密钥Ks以及AS要发送给TGS的票据（这个票据是用TGS的对称密钥Ktg加密的）。A并不保存密钥Ka，但当这个报文到达A时，A就键入其口令。若口令正确，则该口令和适当的算法一起就能生成出密钥Ka。这个口令随即被销毁。密钥Ka用来对AS发送过来的报文进行解密。这样就提取出会话密钥Ks（这是A和TGS通信要使用的）以及要转发给TGS的票据（这是用密钥Ktg加密的）。
        3.A向TGS发送三个项目：
            ·转发AS发来的票据。
            ·服务器B的名字。这表明A请求B的服务。请注意：现在A向TGS证明自己的身份并非通过键入口令（因为入侵者能够从网上截获明文口令），而是听过转发AS发出的票据（只有A才能提取出）。票据是加密的，入侵者为早不了。
            ·用Ks加密的时间戳T，它用来防止入侵者的重放攻击。
        4.TGS发送两个票据，每一个都包含A和B通信的会话密钥Kab。给A的票据用Ks加密；给B的票据用B的密钥Kb加密。请注意，现在入侵者不能提取Kab，因为不知道Ka和Kb。入侵者也不能重放步骤3，因为入侵者不能把时间戳更换为一个新的（因为不知道Ks）。如果入侵者在时间戳到期之前，非常迅速地发送步骤3的报文，那么对TGS发送过来的两个票据仍然不能解密。
        5.A向B转发TGS发来的票据，同时发送用Kab加密的时间戳T。
        6.B把时间戳T加1来证实收到了票据。B向A发送的报文用密钥Kab加密。
    以后，A和B就使用TGS给出的会话密钥Kab进行通信。
    顺便指出，Kerberos要求所有使用Kerberos的主机必须在时钟上进行“松散的”同步。所谓“松散的”同步是要求所有主机的时钟误差不能太大，例如，不能超过5分钟的数量级。这个要求是为了防止重放攻击。TGS发出的票据都设置较短的有效期。超过有效期的票据就作废了。因此入侵者即使截获了某个票据，也不能长期保留用来进行以后的重放攻击。
    7.5.2公钥的分配
    在公钥密码体制中，如果每个用户都具有其他用户的公钥，就可实现安全通信。看来好像可以随意公布用户的公钥。其实不然。设想用户A要欺骗用户B。A可以向B发送一份伪造是C发送的报文。A用自己的秘密密钥进行数字签名，并附上A自己的公钥，谎称这公钥是C的。B如何知道这个公钥不是C的呢？显然，这需要有一个值得信赖的机构来将公钥与其对应的实体（人或机器）进行绑定（binding）。这样的机构就叫做认证中心CA（Certification Authority），它一般由政府出资建立。每个实体都有CA发来的证书（certificate），里面有公钥及其拥有者的标识信息（人名或IP地址）。此证书被CA进行了数字签名。任何用户都可从可信的地方（如代表政府的报纸）获得认证中心的CA的公钥，此公钥用来验证某个公钥是否某个实体所拥有（通过向CA查询）。有的大公司，如Netscape，也提供认证中心服务。
    在IE浏览器中，选择“工具/Internet选项/内容/证书”就可以查看有关证书发送机构的信息。用户可以从证书颁发机构获得自己的安全证书。
    为了使CA具有统一的格式，ITU-T制订了X.509协议标准，用来描述证书额结构。在X.509中规定要使用ASN.1。IETF接受了X.509（仅有少量的改动），并在RFC 3280中给出了因特网X.509公钥基础结构PKI（Public Key Infrastructure）。
7.6因特网使用的安全协议
    前面几节所讨论的网络安全原理都可用在因特网中，目前在网络层、运输层和应用层都有相应的网络安全协议。下面分别介绍这些协议的要点。
    7.6.1网络层安全协议
    1.IPsec与安全关联SA
    1998年11月公布了因特网网络层安全的系列RFC。其中最重要的就是描述IP安全体系结构的RFC 2401和提供IPsec协议族的概述的RFC 2411.IPsec就是“IP安全（Security）协议”的缩写。
    网络层保密是指所有在IP数据报中的数据都是加密的。此外，网络层还应提供源点鉴别（source authentication）即当目的站收到IP数据报时，能确信这是从该数据报的源IP地址的主机发来的。在IPsec中最主要额两个协议就是鉴别首部AH（Authentication Header）协议和封装安全有效载荷ESP（Encapsulation Security Payload）协议。AH提供源点鉴别和数据完整性，但不能保密。而ESP比AH复杂得多，它提供源点鉴别、数据完整性和保密。IPsec支持IPv4和IPv6。但在IPv6中，AH和ESP都是扩展首部的一部分。
    虽然AH协议的功能都已包含在ESP协议中，但AH协议早已使用在一些商品中，因此AH协议还不能废弃。
    在使用AH或ESP之前，先要从源主机到目的主机建立一条网络层的逻辑连接。此逻辑连接叫做安全关联SA（Security Association）。这样，IPsec就把传统的因特网无连接的网络层转换为具有逻辑连接的层。安全关联是一个单向连接。如进行双向的安全通信则需要建立两个安全关联。一个安全关联SA由一个三元组唯一地确定，它包括：
    （1）安全协议（使用AS或ESP协议）的标识符。
    （2）此单向连接的目的IP地址。
    （3）一个32位的连接标识符，称为安全参数索引SPI（Security Parameter Index）。
    对于一个给定的安全关联SA，每一个IPsec数据报都有一个存放SPI的字段。通过此SA的所有数据报都使用同样的SPI值。
    2.鉴别首部协议AH
    在使用鉴别首部协议AH时，把AH首部插在原数据报数据部分的前面，同时将IP的首部中的协议字段置为51.此字段原来是为了区分在数据部分时何种协议（如TCP，UDP或ICMP）。当目的主机检查到协议字段是51时，就知道在IP首部后面紧接着的是AH首部。在传输过程中，中间的路由器都不查看AH首部。当数据报到达终点时，目的主机才处理AH字段，以鉴别源点和检查数据报的完整性。
    AH首部具有如下的一些字段：
    （1）下一个首部（8位）。标志紧接着本首部的下一个首部的类型（如TCP或UDP）。
    （2）有效载荷长度（8位）。即鉴别数据字段的长度，以32位字为单位。
    （3）安全参数索引SPI（32位）。标志一个安全关联。
    （4）序号（32位）。鉴别数据字段的长度，以32位字为单位。
    （5）保留（16位）。为今后用。
    （6）鉴别数据（可变）。为32位字的整数倍，它包含了经数字签名的报文摘要（对原来的数据报进行报文摘要运算）。因此可用来鉴别源主机和检查IP数据报的完整性。
    3.封装安全有效载荷协议ESP
    使用ESP时，IP数据报首部的协议字段置为50.当目的主机检查到协议字段是50时，就知道在IP首部后面紧接着的是ESP首部，同时在原IP数据报后面增加了两个字段，即ESP尾部和ESP数据。在ESP首部中，有标志一个安全关联的安全参数索引SPI（32位）和序号（32位）。在ESP尾部中有下一个首部（8位，作用和AH首部的一样）。ESP尾部和原来数据报的数据部分一起进行加密，因此攻击者无法得知所使用的运输层协议（它在IP数据报的数据部分中）。ESP的鉴别数据和AH中的鉴别数据的作用是一样的。因此，用ESP封装的数据报既有鉴别源点和检查数据报完整性的功能，又能提供保密。
    7.6.2运输层安全协议
    本节介绍在运输层使用的安全套接层SSL（Secure Socket Layer）协议。SSL是Netscape公司在1994年开发出在万维网上使用的安全协议。现在最新的版本是1996年的SSL 3.0。虽然它还没有成为正式标准，但已经是保护万维网的HTTP通信量公认的事实上的标准。微软的浏览器IE目前也使用SSL。后来IETF在SSL的基础上设计了运输层安全协议TLS（Transport Layer Security），它是SSL的非专有版本。
    用户通过浏览器在进行网上购物时，需要以下的一些安全措施。
    （1）顾客需要确知，所浏览的服务器属于真正的厂商而不是假冒的厂商。例如，顾客不愿意假冒的厂商在他的信用卡上把钱取走。换言之，服务器必须被鉴别。
    （2）顾客需要确知，购物报文在传输过程中没有被篡改。100元的账单一定不能被篡改为100元。报文的完整性必须保留。
    （3）顾客需要确知，因特网的入侵者不能截获如信用卡这样的敏感信息。这就需要对购物的报文进行保密。
    可能还有一些安全措施。例如，厂商需要鉴别顾客。
    下面介绍安全套接层SSL。
    1.安全套接层SSL
    SSL可对万维网用户与服务器之间传送的数据进行加密和鉴别。它在双方的联络阶段（也就是握手阶段）对将要使用的加密算法（如用DES或RSA）和双方共享的会话密钥进行协商，完成客户与服务器之间的鉴别。在联络阶段完成之后，所有传送的数据都使用在联络阶段商定的会话密钥。SSL不仅被所有常用的浏览器和万维网服务器所支持，而且也是运输层安全协议TLS的基础。
    SSL并不仅限于万维网的应用，它们还可用于IMAP邮件存取的鉴别和数据加密。SSL的位置在应用层和运输层（TCP）之间。在发送方，SSL接收应用层的数据（如HTTP或IMAP报文），对数据进行加密，然后把加了密的数据送往TCP套接字。在接收方，SSL从TCP套接字读取数据，解密后把数据交给应用层。
    SSL提供以下三个功能：
    （1）SSL服务器鉴别   允许用户证实服务器的身份。具有SSL功能的浏览器维持一个表，上面有一些可以信的认证中心CA及其公钥。当浏览器要和一个具有SSL功能的服务器进行商务活动时，浏览器就从服务器得到含有服务器的公钥的证书。此证书是由某个认证中心CA发出的（此CA在客户的表中）。这就使得客户在提交其信用卡之前能够鉴别服务器的身份。
    （2）加密的SSL会话   客户和服务器交互的所有数据都在发送方加密，在接收方解密。SSL还提供了一种检测信息是否被攻击者篡改的机制。
    （3）SSL客户鉴别    允许服务器证实客户的身份。这个信息对服务器是重要的。例如，当银行把有关财务的保密信息发送给客户时，就必须检验接收者的身份。
    下面通过一个简单的例子说明SSL的工作原理。
    假定A有一个使用SSL的安全网页。B上网时用鼠标点击到这个安全网页的链接（这种安全网页的URL的协议部分不是http而是https）。接着，服务器合浏览器就进行握手协议，其主要过程如下：
    （1）浏览器向服务器发送浏览器的SSL版本号和密码编码的参数选择（preference）（因为浏览器和服务器要协商使用哪一种对称密钥算法）。
    （2）服务器向浏览器发送服务器的SSL版本号、密码编码的参数选择及服务器的证书。证书包括服务器的RSA公钥。此证书是由某个认证中心用自己的密钥加密，然后发送给该服务器。
    （3）浏览器有一个可信的CA表，表中有每一个CA的公钥。当浏览器收到服务器发来的证书时，就检查此证书的发行者是否在自己的可信的CA表中。如不在，则后面的加密和鉴别连接就不能进行下去。如在，浏览器就使用CA相应的公钥对证书解密，这样就得到了服务器的公钥。
    （4）浏览器岁基地产生一个对称会话密钥，并用服务器的公钥加密，然后将加密的会话密钥发送给服务器。
    （5）浏览器向服务器发送一个报文，说明以后浏览器将使用此会话密钥进行加密。然后浏览器再向服务器发送一个单独的加密报文，指出浏览器端的握手过程已经完成。
    （6）服务器也向浏览器发送一个报文，说明以后服务器将使用此会话密钥进行加密，然后服务器再向浏览器发送一个单独的加密报文，指出服务器端的握手过程已经完成。
    （7）SSL的握手过程至此已经完成，下面就可开始SSL的会话过程。浏览器和服务器都使用这个会话密钥对所发送的报文进行加密。
    由于SSL简单且开发得较早，因此目前在因特网商务中使用得比较广泛。但SSL并非专门为信用卡交易而设计的，它只是在客户与服务器之间提供了一般的安全通信。SSL还缺少一些措施来防止在因特网商务中出现各种可能的欺骗行为。
    2.安全电子交易SET
    运输层原来还有一个安全电子交易协议SET（Secure Electronic Transaction），是专为在因特网上进行安全信用卡交易的协议。它最初是由两个著名信用卡公司Visa和MasterCard于1996年开发的，世界上许多具有领先技术也参与了。SET的主要特点是：
    （1）SET是专为与支付有关的报文进行加密的，它不能像SSL那样对任意的数据（如正文或图像）进行加密。
    （2）SET协议涉及到三方，即客户、商家和商业银行。所有在这三方之间交互的敏感信息都被加密。
    （3）SET要求这三方都有证书。在SET交易中，商家看不见客户传送商业银行的信用卡号码。这是SET的一个最关键的特性。
    由于在SET交易中客户端要使用专门的软件（浏览器钱包），同时商家要支付的费用要比使用SSL更加昂贵，因此SET在市场的竞争中失败了。
    7.6.3应用层的安全协议
    在应用层实现安全比较简单，特别是当因特网的通信只涉及到两方，例如电子邮件和TELNET的情况。下面我们介绍两种用于电子邮件的安全协议。
    1.PGP协议
    电子邮件在传送过程中可能要经过许多路由器，其中的任何一个路由器都有可能对转发的邮件进行阅读。从这个意义上讲，电子邮件是没有什么隐私可言的。
    PGP（Pretty Good Privacy）是Zimmermann于1995年开发出的。它是一个完整的电子邮件安全软件包，包括加密、鉴别、电子签名和压缩等技术。PGP并没有使用什么新的概念，它只是把现有的一些加密算法（如RSA公钥加密算法或MD5报文摘要算法）综合在一起而已。由于包括源程序的整个软件包可以从因特网免费下载，因此PGP在MS-DOS/Windows以及UNIX等平台上得到了广泛的应用。但是如果要将PGP用于商业，那么还需要到指定网站http://www.pgpinternational.com/获得商用许可证才行。
    值得注意的是，虽然PGP已被广泛使用，但PGP并不是因特网的正式标准。
    PGP的工作原理并不复杂。它提供电子邮件的安全性、发送方鉴别和保温完整性。
    假定A向B发送电子邮件明文X，下载乃用PGP进行加密。A有三个密钥：自己的私钥、B的公钥和自己生成的一次性密钥。B有两个密钥：自己的私钥和A的公钥。
    A需要做以下几件事：
    （1）对明文X进行MD5报文摘要运算，得出报文摘要H。用自己的私钥对H进行数字签名，得出签了名的报文摘要D（H），把它拼接在明文X后面，得到报文（X+D（H））。
    （2）使用自己生成的一次性密钥对报文（X+D（H））进行加密。
    （3）用B的公钥对自己生成的一次性密钥进行加密。
    （4）把加了密的一次性密钥和加了密的报文（X+D（H））发送给B。请注意，以上这两个项目的加密密钥是不一样的。A的一次性密钥是用B的公钥加密的，而报文（X+D（H））是用A的一次性密钥加密的。
    B收到加密的报文后要做以下几件事：
    （1）把被加密的一次性密钥和被加密的报文（X+D（H））分离开。
    （2）用自己的私钥解出A的一次性密钥。
    （3）用解出的一次性密钥对报文（X+D（H））进行解密，然后分离出明文X和D（H）。
    （4）用A的公钥对D（H）进行签名核实，得出报文摘要H。
    （5）对X进行报文摘要运算，得出报文摘要，看是否和H一样。如一样，则电子邮件的发送方鉴别就通过了，报文的完整性也得到肯定。
    PGP很难被攻破。因此在目前可以认为PGP是足够安全的。
    密钥管理是PGP系统的一个关键。每个用户在其所在地要维持两个数据结构：秘钥环（private key ring）和公钥环（public key ring）。秘钥环包括一个或几个用户自己的秘钥-公钥对。这样做是为了使用户可经常更换自己的密钥。每一对密钥有对应的标识符。发信人将此标识符通知收信人，使收信人知道应当用哪一个公钥进行解密。公钥环包括用户的一些经常同新对象的公钥。
    2.PEM协议
    PEM（Privacy Enhanced Mail）是因特网的邮件加密建议标准，由四个RFC文档来描述：
    （1）RFC 1421：报文加密与鉴别过程
    （2）RFC 1422：基于证书的密钥管理
    （3）RFC 1423：PEM的算法、工作方式和标识符。
    （4）RFC 1424：密钥证书和相关的服务。
    PEM的功能和PGP的差不多，都是对基于[RFC 822]的电子邮件进行加密和鉴别。
    PEM有比PGP更加完善的密钥管理机制。由认证中心发布证书，上面有用户姓名、公钥以及密钥的使用期限。每个证书有一个唯一的序号。证书还包括用认证中心秘钥签了名的MD5散列函数。这种证书与ITU-T X.509关于公钥证书的建议书以及X.400的名字体系相符合。
    PGP也有类似的密钥管理机制（但PGP没有使用X.509），但用户是否信任这种认证中心呢？PEM对这个问题解决的方法是设立一些政策认证中心PCA（Policy Certification Authority）来证明这些证书，然后由因特网政策登记管理机构IPRA（Internet Policy Registration Authority）对这些PCA进行认证。
7.7链路加密与端到端加密
    从网络传输的角度看，通常有两种不同的加密策略，即链路加密与端到端加密。现分别讨论如下：
    7.7.1链路加密
    在采用链路加密的网络中，每条通信链路上的加密是独立实现的。通常对每条链路使用不同的加密密钥。当某条链路受到破坏时不会导致其他链路上传送的信息被析出。由于协议数据单元PDU中的协议控制信息和数据都被加密，这就掩盖了源点和终点的地址。若在结点间保持连续的密文序列，则PDU的频度和长度也能得到掩盖。这样就能防止各种形式的流量分析。由于不需要传送额外的数据，采用这种技术不会减少网络的有效带宽。由于只要求相邻结点之间具有相同的密钥，因而密钥管理易于实现。链路加密对用户来说是透明的。
    由于报文是以明文形式在各结点内加密的，所以结点本身必须是安全的。一般认为网络的源点和终点在物理上都是安全的，但所有的中间结点（包括可能经过的路由器）则未必都是安全的。因此必须采取有效措施。对于采用动态自适应路由的网络，一个被攻击者掌握的结点可以设法更改路由使有意义的PDU经过此结点，这样将导致大量信息的泄露，因而对整个网络的安全造成威胁。
    链路加密的最大缺点是在中间结点暴露了信息的内容。在网络互连的情况下，仅采用链路加密是不能实现通信安全的。此外，链路加密也不适用于广播网络，因为它的通信子网没有明确的链路存在。若将整个PDU加密将造成无法确定接收者和发送者。由于上述原因，除非采取其他措施，否侧在网络环境中链路加密将受到很大的限制，可能只适用于局部数据的保护。
    7.7.2端到端加密
    端到端加密是在源点和终点中对传送的PDU进行加密和解密，其过程如图所示。可以看出，报文的安全性不会因中间结点的不可靠而受到影响。
    端到端加密应在运输层或其以上各层来实现。若选择在运输层进行加密，可以使安全措施对用户来说是透明的。这样可不必为每一个用户提供单独的安全保护，但容易遭受运输层以上的攻击。当选择在应用层实现加密时，用户可根据自己的特殊要求来选择不同的加密算法，而不会影响其他用户。这样，端到端加密更容易适合不同用户的要求。端到端加密不仅适用于互联网环境，而且同样也适用于广播网。
    在端到端加密的情况下，PDU的控制信息部分（如源点地址、终点地址、路由信息等）不能被加密，否则中间结点就不能正确选择路由。这就使得这种方法易于受到流量分析的攻击。虽然也可以通过发送一些假的PDU来掩盖有意义的报文流动（这称为报文填充），但这要以降低网络性能为代价。若个结点都使用对称密钥体制，则各结点必须持有与其他结点相同的密钥，这就需要在全网范围内进行密钥管理和分配。
    为了获得更好的安全性，可将链路加密与端到端加密结合在一起使用。链路加密用来对PDU的目的地址进行加密，而端到端加密则提供了对端到端的数据进行保护。
7.8防火墙
    防火墙（firewal）是一种特殊编程的路由器，安装在一个网点和网络的其余部分之间，目的是实施访问控制策略。这个访问控制策略是由使用防火墙的单位自行制定的。这种安全策略应当最适合本单位的需要。图指出防火墙位于因特网和内部网络之间。因特网这边是防火墙的外面，而内部网络这边是防火墙的里面。一般都把防火墙里面的网络称为“可信的网络”（trusted network），而把防火墙外面的网络称为“不可信的网络”（untrusted network）。
    防火墙的功能有两个：一个是阻止，另一个是允许。“阻止”就是阻止某种类型的流量通过防火墙（从外部网络到内部网络，或反过来）。“允许”的功能与“阻止”恰好相反。可见防火墙必须能够识别流量的各种类型。不过再大多数情况下防火墙的主要功能是“阻止”。
    但是，“绝对阻止所不希望的通信”和“绝对防止信息泄露”一样，是很难做到的。直接使用一个商用的防火墙往往不能得到所需要的保护，但适当地配置防火墙则可将安全风险降低到可接受的水平。
    防火墙技术一般分为两类，即：
    （1）网络级防火墙   主要是用来防止整个网络出现外来非法的入侵。属于这类的有分组过滤（packet filtering）和授权服务器（authorization server）。前者检查所有流入本网络的信息，然后拒绝不符合事先制定好的一套准则的数据，而后者则是检查用户的登录是否合法。
    （2）应用级防火墙   从应用程序来进行访问控制。通常是用应用网关或代理服务器（proxy server）来区分各种应用。例如，可以只允许通过访问万维网的应用，而阻止FTP应用的通过。
    图所画的防火墙就同时具有这两种技术。它包括两个分组过滤路由器和一个应用网关，它们通过两个局域网连接在一起。
    这两个分组过滤路由器都是标准的路由器，但增加了一些功能，这就是对每一个通过的分组进行检查。这两个路由器中的一个专门检查进入内联网的分组，而另一个则检查出去的。符合条件的分组就能通过，否则就丢弃。使用两个局域网的原因就是使穿过防火墙的各种分组必须经过分组过滤路由器和应用网关的检查，而没有任何其他的路径。
    分组过滤是靠查找系统管理员所设置的表格来实现的。表格列出了可接受的、或必须进行阻挡的目的站和源站，以及其他的一些通过防火墙的规则。
    我们知道，TCP的端口号指出了在TCP上面的应用层服务。例如，端口号23是TELNET，端口号119是USENET，等等。所以如果在因特网进入防火墙的分组过滤路由器中将所有目的端口号为23的入分组（incoming packet）都进行阻拦，那么所有外单位用户就不能使用TELNET登录到本单位的主机上。同理，如果某公司不愿意其雇员在上班时花费大量时间去看因特网的USENET新闻，就可将目的端口号为119的出分组（outgoing packet）组拦住，使其无法发送到因特网。
    阻拦出分组要麻烦些，因为有时他们不使用标准的端口号。例如FTP常常是动态地分配端口号。阻拦UDP更困难，因为事先不容易知道UDP想做什么。许多分组过滤路由器干脆将所有的UDP全部阻拦。
    应用网关是从应用层的角度来检查每一个分组。例如，一个邮件网关在检查每一个邮件时，要根据邮件的首部或报文的大小，甚至是报文的内容（例如，有没有某些像“导弹”“核弹头”等关键词）来确定该邮件能否通过防火墙。

习题
7-01    计算机网络都面临哪几种威胁？主动攻击和被动攻击的区别是什么？对于计算机网络的安全措施都有哪些？
7-02    试解释以下名词：（1）重放攻击；（2）拒绝服务；（3）访问控制；（4）流量分析；（5）恶意程序。
7-03    为什么说，计算机网络的安全不仅仅局限于保密性？试举例说明，仅具有保密性的计算机网络不一定是安全的。
7-04    密码编码学、密码分析学和密码学都有哪些区别？
7-05    “无条件安全的密码体制”和“在计算上是安全的密码体制”有什么区别？
7-06    试破译下面的密文诗。加密采用替代密码。这种密码是把26个字母（从a到z）中的每一个用其他某个字母替代（注意，不是按序替代）。密文中无标点符号。空格未加密。
        kfd ktbd fzm eubd kfd pzyiom mztx ku kzyg ur bzha kfthcm ur mfudm zhx mftnm zhx mdzythc pzq ur ezsszcdm zhx gthcm zhx pfa kfd mdz tm sutythc fuk zhx pfdkfdi ntcm fzld pthcm sok pztk z stk kfd uamkdim eitdx sdruid pd fzld uoi efzk rui mubd ur om zid uok ur sidzkf zhx zyy ur om zid rzk hu foiia mztx kfd ezindhkdi kfda kfzhgdx ftb boef rui kfzk
7-07    对称密钥体制与公钥密码体制的特点各如何？各有何优缺点？
7-08    为什么密钥分配是一个非常重要但又十分复杂的问题？试举出一种密钥分配的方法。
7-09    公钥密码体制下的加密和解密过程是怎样的？为什么公钥可以公开？如果不公开是否可以提高安全性？
7-10    试述数字签名的原理。
7-11    为什么需要进行报文鉴别？鉴别和保密、授权有什么不同？报文鉴别和实体鉴别有什么区别？
7-12    试述实现报文鉴别和实体鉴别的方法。
7-13    报文的保密性与完整性有何区别？什么是MD5？
7-14    什么是重放攻击？怎样防止重放攻击？
7-15    什么是“中间人攻击”？怎样防止这种攻击？
7-16    试讨论Kerberos协议的优缺点。
7-17    因特网的网络层安全协议族IPsec都包含哪些主要协议？
7-18    试简述SSL和SET的工作过程。
7-19    电子邮件的安全协议PGP主要都包含哪些措施？
7-20    链路加密与端到端加密各有何特点？各用在什么场合？
7-21    试述防火墙的工作原理和所提供的功能。什么叫做网络级防火墙和应用级防火墙？

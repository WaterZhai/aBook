第8章   因特网上的音频/视频服务

本章首先对因特网提供音频/视频服务进行概述。然后介绍流式音频/视频中的媒体服务器合实时流式协议RTSP，并比IP电话为例介绍交互式音频/视频所使用的一些协议，如实时传送协议RTP、实时传送控制协议RTCP、H.323以及会话发起协议SIP。接着讨论改进“尽最大努力交付”的服务的一些措施，包括怎样使因特网能够提供服务质量，并介绍综合服务IntServ、资源预留协议RSVP和区分服务DiffServ的要点。

8.1概述
    计算机网络最初是为传送数据设计的。因特网IP层提供的“尽最大努力交付”服务以及每一个分组独立交付的策略，对传送数据信息十分合适。因特网使用的TCP协议可以很好地解决IP层不能提供可靠交付这一问题。
    然而技术的进步使许多用户开始利用因特网转送音频/视频信息。在许多情况下，这种音频/视频长称为对媒体信息。本来电路交换的公用电话网传送多媒体信息已是相当成熟的技术。例如视频会议（又称为电视会议）原先是使用电路交换的公用电话网。使用电路交换的好处是：一旦连接建立了（也就是只要拨通了电话），经过压缩处理的多媒体信息在电话线路上传输质量有保证。美中不足的是向电信公司租用电话线路的价格太高。
    多媒体信息（包括声音和图像信息）与不包括声音和图像的数据信息有很大的区别，其中最主要的两个特点如下。
    第一，多媒体信息的信息量往往很大。
    含有音频或视频的多媒体信息的信息量一般都很大，下面是简单的说明。
    对于电话的声音信息，如采用标准的PCM编码（8kHz速率采样），而每一个采样脉冲用8位编码，则得出的声音信号的数据率就是64kb/s。对于高质量的立体声音乐CD信息，虽然它也使用PCM编码，但其采样速率为44.1kHz，而每一个采样脉冲用16位编码，因此这种双声道立体声音乐信号的数据率超过了1.4Mb/s。
    再看一下数码照片。假定分辨率为1280x960（中等质量）。若每个像素用24位进行编码，则一张未经压缩的照片的照片的字节数约合3.52MB（这里1B=8bit，1M=2^20）。
    活动图像的信息量就更大。如不压缩的彩色电视信号的数据率超过250Mb/s。
    因此在网上传送多媒体信息都无例外地采用各种信息压缩技术。例如在话音压缩方面的标准有：移动通信的GSM（13kb/s），IP电话使用的G.729（8kb/s）和G.723.1（6.4kb/s和5.3kb/s）。在立体声音乐的压缩技术有MP3（128kb/s或122kb/s）。在视频信号方面有VCD质量的MPEG 1 （1.5Mb/s）和DVD质量的MPEG 2 （3~6Mb/s）。由于多媒体信息压缩技术本身不是计算机网络技术范畴。本书将不讨论有关数据压缩方面的内容。
    第二，在传输多媒体数据时，对时延和时延抖动均有较高的要求
    我们知道，模拟的多媒体信号只有经过数字化后才能在因特网上传送。就是对模拟信号要经过采样和模数转换变为数字信号，然后将一定数量的比特组装成分组进行传送。这些分组在发送时的时间间隔都是恒定的，通常称这样的分组为等时的（isochronous）。这种等时分组进入因特网的速率也是恒定的。但传统的因特网本身是非等时的。这是因为在使用IP协议的因特网中，每一个分组是独立地传送，因而这些分组在到达接收端时变成为非等时的。如果我们在接收端对这些以非恒定速率到达的分组边接收边还原，那么就一定会产生很大的失真。
    要解决这一问题，可以在接收端设置适当大小的缓存，当缓存中的分组数达到一定的数量后再以恒定速率按顺序将这些分组读出进行还原播放。
    从图可看出，缓存实际上就是一个先进先出的队列。图中标明的T叫做播放时延，这就是从最初的分组开始到达缓存算起，经过使所有到达的分组都经受了延迟。由于分组以非恒定速率到达，因此早到达的分组在缓存中停留的时间较长，而晚到达的分组在缓存中停留的时间就较短。从缓存中取出分组是按照固定的时钟节拍进行的，因此，到达的非等时的分组，经过缓存后再以恒定速率读出，就变成了等时的分组（但请注意，时延太大的分组就丢弃了），这就在很大程度上消除了时延的抖动。但我们付出的代价是增加了时延。以上所述的概念可以用图来说明。
    图画出了发送端一连发送6个等时的分组。如果网络没有时延，那么到达的分组数岁时间的变化就如图中最左边的阶梯状的曲线所示。这就是说，只要发送方一发出一个分组，在接收方到达的分组数就立即加1.但实际的网络使每一个分组经受的时延不同，因此这一串分组在到达接收端时就变成了非等时的。这就使得分组到达的阶梯状曲线向右移动，并且变成不均匀的。图标注出了分组1的时延。图中给出了两个不同的开始播放时刻。黑色小圆点表示在播放时刻对应的分组已经在缓存中，而空心小圆圈表示在播放时刻对应的分组尚未到达。我们可以看出，即使推迟了播放时间，也还有可能有某个迟到分组赶不上播放。如果再推迟播放时间，则所有的6个分组都不会错过播放，但这样做的时延会较大。
    然而我们还有一些问题没有讨论。
    首先，播放时延T应当选为多大？把T选择得越大，就可以消除更大的时延抖动，但所有分组经受的平均时延也增大了，而这对某些实时应用（如视频会议）是很不利的。当然这对单向传输的视频节目问题并不太大（如从网上下载一段视频节目，只要耐心多等待一段时间用来将分组放入缓存即可）。如果T选择得太小，那么消除时延抖动的效果就较差。因此播放时延T的选择必须折中考虑。在传送时延敏感（delay sensitive）的实时数据时，不仅传输时延不能太大，而且时延抖动也必须受到限制。
    其次，在因特网上传输实时数据的分组时有可能会出现差错甚至丢失。如果利用TCP协议对这些出错或丢失的分组进行重传，那么时延就会大大增加。因此实时数据的传输在运输层就应采用用户数据报协议UDP而不使用TCP协议。这就是说，对于传送实时数据，我们宁可丢失少量分组（当然不能丢失太多），也不要太晚到达的分组。在连续的音频或视频数据流中，很少量的分组的丢失对播放效果的影响并不大（因为这是由人来进行主观评价的），因而使可以容忍的。丢失容忍（loss tolerant）也是实时数据的另一个重要特点。
    由于分组的到达可能不按序，但将分组还原和播放时又应当是按序的。因此在发送多媒体分组时还应当给每一个分组加上序号。这表明还应当有相应的协议支持才行。
    还有一种情况，就是要使接收端能够将节目中本来就存在的正常的短时间停顿（如音乐中停顿几拍）和因某些分组的较大迟延造成的“停顿”区分开来。这就需要增加一个时间戳（timestamp），以便告诉接收端应当在什么时间播放哪个分组。
    根据以上的讨论可以看出，若想在因特网上传送音频/视频数据，就需要设法改造现有的因特网使它能够适应音频/视频数据的传送。
    对这个问题，网络界一直有较大的争论，众说纷谈。有人认为，只要大量使用光缆，网络的时延和时延抖动就可以足够小。再加上使用具有大容量高速缓存的高速路由器，在因特网上传送数据就不会有问题。也有人认为，必须将因特网改造为能够对端到端的带宽实现预留（reservation），从而根本改变因特网的协议栈--从无连接的网络转变为面向连接的网络。还有人认为，部分改动因特网的协议栈所付出的代价较小，而这也能够使多媒体信息在因特网上传输质量得到改进。
    尽管上述的争论仍在继续，但因特网的一些新的协议也在不断出现。下面我们有选择地讨论与chuansongyinpin/视频信息有关的若干问题。
    目前因特网提供的音频/视频服务大体上可分为三种类型：
    （1）流式（streaming）存储音频/视频   这种类型是先把已压缩的录制好的音频/视频文件（如音乐、电影等）存储在服务器上。用户通过因特网下载这样的文件。请注意，用户不是把文件全部下载完毕后再播放，因为这往往需要很长时间，而用户一般也不大愿意等待太长的时间。流式存储音频/视频文件下载的特点是边下载边播放，即在文件下载后不久（例如，几秒钟几十秒钟后）就开始连续播放。名词“流式”就是这样的含义。
    （2）流式实况音频/视频    这种累心过的无线电台或电视台的实况广播相似，不同之处是音频/视频节目的广播是通过因特网来传送的。流式实况音频/视频是一对多（而不是一对一）的通信。它的特点是：音频/视频节目不是事先录制好和存储在服务器中，而是在发送方边录制边发送（不是录制完毕后再发送）。在接收时也是要求能够连续播放。接收方收到节目的时间和节目中的事件的时间可以认为是同时的（相差仅仅是电磁波的传播时间和很短的信号处理时间）。流式实况音频/视频按理说应当采用多播技术才能提高网络资源的利用率，但目前实际上还是使用多个独立的单播。流式实况音频/视频现在还不普及。
    （3）交互式音频/视频   这种类型是用户使用因特网和其他人进行实时交互式通信。现在的因特网电话或因特网电视会议就属于这种类型。
    请注意，上面所讲的“边下载边播放”中的“下载”，实际上与传统意义上的“下载”有着本质的区别。传统的“下载”时把下载的内容存储在硬盘中，变成一个文件。用户在播放完毕以后，可以在任何时候把下载的文件打开甚至进行编辑和修改，然后转发给其他的朋友。但对于流式音频/视频的“下载”，实际上并没有把“下载”的内容存储在硬盘上。因此当“边下载边播放”结束后，在用户的硬盘上没有留下有关播放内容的任何痕迹。这对保护版权非常有利。播放流式音频/视频的用户，仅仅能够在屏幕上观赏播放的内容。他既不能修改节目内容，也不能把播放的内容存储下来，因此也无法以后再转发给其他人。
    于是现在就出现了一个新的词汇--流媒体（streaming media）。流媒体其实就是上面所说的流式音频/视频。流媒体的特点就是“边下载边播放”（streaming and playing），但不能存储在硬盘上成为用户的文件。在国外的一些文献中，常常把流媒体的“下载”称为streaming。目前还没有对streaming更好的译名。但一定不能把“边下载边播放”中的“下载”理解为传统意义上的下载。
    限于篇幅，下面简单介绍上面的第一种和第三种音频/视频类型的服务。
8.2流式存储音频/视频
    在讨论流式存储音频/视频文件下载方法之前，我们先回忆一下使用传统的浏览器怎样从服务器下载音频/视频文件。图说明了这种下载的三个步骤。
    （1）用户从客户机（client machine）的浏览器上用HTTP协议向服务器请求下载某个音频/视频文件，GET表示请求下载的HTTP报文。请注意，HTTP使用TCP连接。
    （2）服务器如有此文件就发送给浏览器，RESPONSE表示服务器的HTTP响应报文。在响应报文中就装有用户所要的音频/视频文件。整个下载过程可能会花费很长的时间。
    （3）当浏览器完全收下这个文件后，就可以传送给自己机器上的媒体播放器进行解压缩，然后播放。
    为什么不能直接在浏览器中播放音频/视频文件呢？这是因为这种播放器并没有集成在万维网浏览器中。因此必须使用一个单独的应用程序来播放这种音频/视频节目。这个应用程序通常称为媒体播放器（media player）。现在流行的媒体播放器有Real Networks的RealPlayer、微软的Windows Media Player和苹果公司的QuickTime。媒体播放器具有的主要功能是：管理用户界面、解压缩、消除时延抖动和处理传输带来的差错。
    请注意，图所示的传统的下载文件方法并没有涉及到“流式”（即边下载边播放）的概念。传统下载方法最大的缺点就是历时太长（几十分钟到几十小时）。必须把所有下载的音频/视频文件全部下载完毕后才能开始播放。为此，已经找出了几种改进的措施。
    8.2.1具有元文件的万维网服务器
    第一种改进的措施就是在万维网服务器中，除了真正的音频/视频文件外，还增加了一个元文件（metafile）。所谓元文件就是一种非常小的文件，它描述或指明其他文件的一些重要信息。这里离的元文件保存了有关这个音频/视频文件的信息。图说明了使用元文件下载音频/视频文件的几个步骤。
    （1）浏览器用户点击所要看的音频/视频文件的超链，使用HTTP的GET报文接入到万维网服务器。实际上，这个超链并没有直接指向所请求的音频/视频文件，而是指向一个元文件。这个元文件有实际的音频/视频文件的统一资源定位符URL。
    （2）万维网服务器吧该源文件装入HTTP响应报文的主体，发回给浏览器。在响应报文中还有指明该音频/视频文件类型的首部。
    （3）客户机浏览器收到万维网服务器的响应，分析其内容类型首部行，调用相关的媒体播放器（客户机中可能装有多个媒体播放器），把提取出的元文件传送给媒体播放器。
    （4）媒体播放器使用元文件中的URL直接和万维网服务器建立TCP连接，并向万维网服务器发送HTTP请求报文，要求下载浏览器想要的音频/视频文件。
    （5）万维网服务器发送HTTP响应报文，把该音频/视频文件送给媒体播放器。媒体播放器在存储了若干秒的音频/视频文件后（这是为了消除抖动），就以音频/视频流的形式边下载边解压缩边播放。
    8.2.2媒体播放器
    上面讲的这种措施有一个问题，就是媒体播放器使用的是HTTP的服务。但HTTP是在TCP连接上运行的。TCP要重传出错的或丢失的报文段。当网络出现拥塞时，流式音频/视频文件的播放就会暂停（因为在缓存中存放的数据已经用完了）。可见我们应当不使用TCP而使用UDP。由于万维网服务器都是使用HTTP协议，因此我们需要另外的一种服务器，即媒体服务器（media server）图给出了这一概念。
    媒体服务器也称为流失服务器（streaming server）。媒体服务器和万维网服务器可以云心刚在一个端系统内，也可以运行在两个不同的端系统中。媒体服务器与普通的万维网服务器的最大区别就是，媒体服务器支持流式音频和视频的传送。媒体播放器与媒体服务器的关系是客户与服务器的关系。现在媒体播放器不是向万维网服务器而是向媒体服务器请求音频/视频文件。媒体服务器和媒体播放器之间采用另外的协议进行交互。
    采用媒体服务器后，下载音频/视频文件的前三个步骤仍然和上一节所述的一样，区别就是后面两个步骤，即：
    （1）~（3）这三个步骤同上。
    （4）媒体播放器使用元文件中的URL接入到媒体服务器，请求下载浏览器所请求的音频/视频文件。下载可以借助于使用UDP的任何协议，例如使用实时运输协议RTP。
    （5）媒体服务器给出响应，把该音频/视频文件发送给媒体播放器。媒体播放器在迟延了若干秒后，以流的形式边下载边解压边播放。
    请注意，媒体服务器也可以在TCP连接上向媒体播放器传送音频/视频文件。由于TCP有重传丢失报文段的功能，因此音频/视频文件还原后的质量应当会更好些（只要重传时不造成缓存的清空）。但如果网络发生分组丢失而重传时应用程序的缓存已被抽空，那么媒体服务器在播放音频/视频文件时就会出现暂停。
    8.2.3实时流式协议RTSP
    实时流式协议RTSP（Real-Time Streaming Protocol）是IETF的MMUSIC工作组（Multiparty MUltimedia SessIon Control WG）开发的协议，现已成为因特网建议标准。RTSP是为了给流式过程增加更多的功能而设计的协议。RTSP本身并不传送数据，而仅仅是使媒体播放器能够控制多媒体的传送（有点像文件传送协议FTP有一个控制信道），因此RTSP又称为带外协议（out-of-band protocol）.
    RTSP协议以客户服务器方式工作，它是一个应用层的多媒体播放控制协议，用来使用户在播放从因特网下载的实时数据时能够进行控制（像在影碟机上那样的控制），如：暂停/继续、快退、快进等。因此RTSP又称为“因特网录像机遥控协议”。
    RTSP的语法和操作与HTTP协议的相似（所有的请求和响应报文都是ASCII文本）。但与HTTP不同的地方时RTSP是有状态的协议（HTT{是武状态的）。RTSP记录客户机所处于的状态（初始化状态、播放状态或暂停状态）。RFC 2326还规定，RTSP控制分组即可在TCP上传送，也可在UDP上传送。RTSP不规定音频/视频流在媒体播放器中应如何缓存。
    在使用RTSP的播放器中比较著名的是苹果公司的QuickTime和Real Networks公司的RealPlayer。
    图表示使用RTSP的媒体服务器的工作过程。
    （1）浏览器使用HTTP的GET报文向万维网服务器请求音频/视频文件。
    （2）万维网服务器从浏览器发送携带有元文件的响应。
    （3）浏览器把收到的元文件传送给媒体播放器。
    （4）媒体播放器的RTSP客户发送SETUP报文与媒体服务器的RTSP服务器建立连接。
    （5）媒体服务器的RTSP服务器发送响应RESPONSE报文。
    （6）媒体播放器的RTSP客户发送PLAY报文开始下载音频、视频文件（即开始播放）。
    （7）媒体服务器的RTSP服务器发送响应RESPONSE报文。
    此后，音频/视频文件被下载，所用的协议是运行在UDP上的。可以是后面要介绍的RTP，也可以是其他专用的协议。在音频/视频流播放的过程中，媒体播放器可以随时暂停（利用PAUSE报文）和继续播放（利用PLAY报文），也可以快进或快退。
    （8）用户在不想继续观看时，可以由RTSP客户发送TEARDOWN报文断开连接。
    （9）媒体服务器的RTSP服务器发送响应RESPONSE报文。
    请注意，以上编号的步骤（4）至（9）都是使用实时流协议RTSP协议。在图中步骤（7）后面没有编号的“音频/视频流”则使用另外的传送音频/视频数据的协议，如RTP。
8.3交互式音频/视频
    限于篇幅，在本节中我们只介绍交互式音频，即IP电环。IP电话是在因特网上传送多媒体信息的一个例子。通过IP带年华的讨论可以有助于了解在因特网上传送多媒体信息应当解决好哪些问题。
    8.3.1IP电话概述
    1.狭义的和广义的IP电话
    IP电话有多个英文同义词。常见的有VoIP（Voice over IP），Internet Telephone和VON（Voice On the Net）。但IP电话的含义却有不同的解释。
    狭义的IP电话就是指在IP网络上打电话。所谓“IP网络”就是“使用IP协议的分组交换网”的简称。这里的网络可以是因特网，也可以是包含有传统的电路交换网的互联网，不过再互联网中至少要有一个IP网络。
    广义的IP电话则不仅仅是电话通信，而且还可以是在IP网络上进行交互式多媒体实时通信（包括话音、视像等），甚至还包括即时传信IM（Instant Messaging）。即使传信是在上网时就能从屏幕上得知有哪些朋友也正在上网。若有，则彼此可在网上即时交换信息（文字的或声音的），也包括使用一点对多点的多播技术。目前流行的即时传信应用程序有QQ和MSN Messenger，很受网民欢迎。IP电话可看成是一个正在演进的多媒体服务平台，是话音、视像、数据综合的基础结构。在某些条件下（例如使用宽带的局域网），IP电话的话音质量甚至还优于普通电话。
    下面讨论狭义的IP电话，而广义的IP电话在原理上是一样的。其实IP电话并非新概念。早在20世纪70年代初期ARPANET刚开始运行不久，美国即着手研究如何在计算机网络上传送电话信息，即所谓的分组话音通信。但在很长一段时间里，分组话音通信发展得并不快。主要的原因是：
    （1）缺少廉价的高质量、低速率的话音信号编解码软件和相应的芯片。
    （2）计算机网络的传输速率和路由器处理速率均不够快，因而导致传输时延过大。
    （3）没有保证实时通信服务质量QoS（Quality of Service）的网络协议。
    （4）计算机网络的规模较小，而通信网只有在具有一定规模后才能产生经济效益。
    2.IP电话网关
    然而到了20世纪90年代中期，上述的几个问题才相继得到了较好第解决。于是美国的VocalTec在1995年初率先推出了实用化的IP电话。但是这种IP电环必须使用PC机。1996年3月，IP电话进入了一个转折点：VocalTec公司成功地推出了IP电话网关（IP Telephoney Gateway），它是公用电话网与IP网络的接口设备。IP电话网关的作用就是：
    （1）在电话呼叫阶段和呼叫释放阶段进行电话信令的转换。
    （2）在通话期间进行话音编码的转换。
    有了这种IP电话网关，就可实现PC机用户到固定电话用户打IP电话（仅需进过IP电话网关一次），以及固定电话用户之间打IP电话（需要经过IP电话网关两次）。
    图画出了IP电话的几种不同的连接方式。图中最上面的情况最简单，是两个PC机用户时间的通话。这当然不需要经过IP电话网关，但必须是双方都同时上网才能进行通话。图中间的一种情况是PC即到固定电话之间的通话。最后一种情况是两个固定电话之间打IP电话，这当然是最方便的。读者应当特别注意在哪一部分是使用电路交换还是分组交换。
    3.IP电话的通话质量
    IP电话的通话质量与电路交换电话网的通话质量有很大的差别。在电路交换电话网中任何两段之间的通话质量都是有保证的。但IP电话则不然。IP电话的通话质量主要由两个因素决定。一个是通话双方段导弹的时延和时延抖动，另一个是话音分组的丢失率。但这两个因素都是不确定的，而是取决于当时网络上的通信量。若网络上的通信量非常大以致发生了网络拥塞，那么端到端时延和时延抖动以及分组丢失率都会很高，这就导致IP电话的通话质量下降。因此，一个用户使用IP电话的通话质量取决于当时其他的许多用户的行为。请注意，电路交换电话网的情况则完全不是这样。当电路交换电话网的通信量太大时，往往使我们无法拨通电话（听到的是忙音），即电话网拒绝正在拨号的用户提供接通服务。但是只要我们拨通了电话，那么电信公司就能保证让用户满意的通话质量。
    经验证明，在电话交谈中，端到端的时延不应超过250ms，否则交谈着就会感到不自然。陆地公用电话网的时延一般只有50~70ms。但经过同步卫星的电话端到端时延就超过250ms，因此一般人都不太适应经过卫星传送过的过长的时延。IP电话的时延有时会超过250ms，因此IP电话必须努力减小端到端的时延。当通信线路产生回声时，则容许的端到端时延就更小些（有时甚至只容许即使毫秒的时延）。
    IP电话端到端时延是由以下几个因素造成的：
    （1）话音信号进行模数转换要产生时延。
    （2）已经数字化的话音比特流要积累到一定的数量才能够装配成一个话音分组，这也产生时延。
    （3）话音分组的发送需要时间，此时间等于话音分组长度与通信线路的数据率之比。
    （4）话音分组在因特网中经过许多路由器的存储转发时延。
    （5）话音分组到达接收端在缓存中暂存所引起的时延。
    （6）最后将话音分组还原成模拟话音信号的数模转换也要产生一定的时延。
    （7）话音信号在通信线路上的传播时延。
    （8）由终端设备的硬件和操作系统产生的接入时延。由IP电话网关引起的接入时延约为20~40ms，而用户PC机声卡引起的接入时延为20~180ms。有的调制解调器（如V.34）还会再增加20~40ms的时延（由于进行数字信号处理、均衡等）。
    话音信号在通信线路上的传播时延一般都很小（卫星通信除外），通常可不予考虑。当采用高速光纤主干网时，上述的第三项时延也不大。
    第一、第二和第六项时延取决于话音编码的方法。很明显，在保证话音质量的前提下，话音信号的数码率应尽可能低些。为了能够在世界范围提供IP电话服务，话音编码就必须采用统一的国际标准。ITU-T已制定出了不少话音质量不错的低速率话音编码的标准。目前适合IP电话使用的ITU-T标准主要有以下两种：
    （1）G.729    话音速率为8kb/s的共轭结构代数码激励线性预测CS-ACELP（ConjugateStrcture Algebraic-Code-Excited Linear Prediction）声码器。
    （2）G.723.1    话音速率为5.3/6.3kb/s的线性预测编码LPC（Linear Prediction Codeing）声码器。
    这两种标准的比较见表。
        |标准   |比特率（kb/s）|帧大小（ms）|处理时延（ms）|帧长（字节）|数字信号处理MIPS|
        |G.729  |8            |10         |10           |10         |20             |
        |G.723.1|5.3/6.3      |30         |30           |20/24      |16             |
    表中的比特率是输入为64kb/s标准PCM信号时在编码器输出的数据率。帧大小是压缩到每一个分组中的话音信号时间长度。处理时间是对一个帧运行编码算法所需的时间。帧长是一个已编码的帧的字节数（不包括首部）。数字信号处理MIPS（每秒百万指令）是用数字信号处理芯片实现编码所需的最小处理机速率（以每秒百万指令为单位）。如使用PC机的通用处理机，则所需的处理机MIPS还要高些。不难看出，G.723.1标准虽然可得到更低的数据率，但其时延也更大些。
    要减少上述第四和第五项时延较为困难。当网络发生拥塞而产生话音分组丢失时，还必须采用一定的策略（称为“丢失掩蔽算法”）对丢失的话音分组进行处理。例如，可使用前一个话音分组来填补丢失的话音分组的间隙。
    接收端缓存空间和播放时延的大小对话音分组丢失率和端到端时延也有很大的影响。图说明了这一问题。话音质量可分为四个级别，即“长途电话质量”（这是最好的质量）、“良好”、“基本可用”和“不好”，各对应于图中的一个区域。越接近坐标原点，话音质量就越好。我们假定某IP电话的通话质量处在图中B点的位置。若增大接收端缓存空间并增大播放时延，则话音分组丢失率将减小，但端到端的时延将增大。继续增大播放时延，则话音分组丢失率将继续减小，趋向于网络所引起的丢失率，但D点的端到端时延很大，话音质量很不好。反之，若将接收端缓存做得很小并减小播放时延，则端到端时延将减小，趋向于网络所引起的端到端时延，但话音分组丢失率将会大大增加，话音质量也不好。
    可见接收端的播放时延有一个最佳值。图中有一个点N，相当于端到端时延和话音分组丢失率都是最小。但实际上并不可能工作在这个点上。
    据统计，当通话双方相距3200km时，因特网上的时延约为30~100ms（传播和排队），而所有各环节的时延总和约为100~262ms（在两个IP电话网关之间）或170~562ms（在两个PC机之间）。可见为了减小时延，应尽可能不要直接用PC机打IP电话。
    提高路由器的转发分组的速率对提高IP电环的质量也是很重要的。据统计，一个跨大西洋的IP电话一般要经过20~30个路由器。现在一个普通路由器每秒可转发50~100万个分组。若能改用吉比特路由器（又称为线速路由器），则每秒可转发500万至6000万个分组（即交换速率达60Gb/s左右）。这样还可进一步减少由网络造成的时延。
    近几年来，IP电话的质量得到了很大的提高。现在许多IP电话的话音质量已经优于固定电话的话音质量。一些电信运营商还建造了自己专用的IP电话线路，以保证更好的通话质量。在IP电话领域里，最值得一提的就是SkypeIP电话，它给全世界的广大用户带来了高品质并且廉价的通话服务。Skype使用了Global IP Sound公司开发的互联网低比特率编解码器iLBC（internet Low Bit rate Codec），进行话音的编解码和压缩，使其话音质量优于传统的公用电话网（采用电路交换）的话音质量。Skype支持两种帧长：20ms（速率为15.2kb/s，一个话音分组块为304bit）和30ms（速率为13.33kb/s，一个话音分组块为400bit）。Skype的另一个特点是对话音分组的丢失进行了特殊的处理，因而能够容忍高达30%的话音分组丢失率，通话的用户一般感觉不到话音的断续或迟延，杂音也很小。
    Skype采用了P2P（见地10章10.3节的介绍）和全球索引（Global Index）技术提供快速路由选择机制（而不是单纯依靠服务器来完成这些工作），因而其管理成本大大降低，在用户呼叫时，由于用户路由信息分布式存储于因特网的结点中，因此呼叫连接完成得很快。Skype还采用了端对端的加密方式，保证信息的安全性。Skype在信息发送之前进行加密，在接收时进行解密，在数据传输工程中完全没有可能中途被窃听。
    由于Skype使用的是P2P的技术，用户数据主要存储在P2P网络中，因此必须保证存储在公共网络中的数据是可靠的和没有被篡改的。Skype对公共目录中存储的和用户相关的数据都采用了数字签名，保证了数据无法被篡改。
    自2003年8月Skype推出以来，在短短15个月内，Skype已拥有超过5000万的下载量，注册量超过200万，并且还在以每天15万的速度增长。Skype的问世给全球信息技术和通信产业带来深远的影响，也给每一位网络使用者带来生活方式的改变。
    8.3.2   IP电话所需要的几种应用协议
    在IP电话的通信中，我们至少需要两种应用协议。一种是信令协议，它使我们能够在因特网上找到被叫用户。另一种是话音分组的传送协议，它使我们用来进行电话通信的话音数据能够以时延敏感属性在因特网中传送。这样，为了在因特网中提供实时交互式的音频/视频服务，我们需要新的多媒体体系结构。
    图给出了在这样的体系结构中的三种应用层协议。第一种协议是与信令有关的，如H.323和SIP（画在最左边）。第二种协议是直接传送音频/视频数据的，如RTP（画在最右边）。第三种协议是为了提高服务质量，如RSVP和RTCP（画在中间）。
            图
    下面先介绍实施运输协议RTP及其配套的协议--实施运输控制协议RTCP，然后再介绍IP电话的信令协议H.323和会话发起协议SIP。
    8.3.3实施运输协议RTP
    实施运输协议RTP（Real-time  Transport Protocol）是IETF的AVT工作组（Audio/Video Transport WG）开发的协议。
    RTP为实施应用提供端到端的运输，但不提供任何服务质量的保证。需要发送的多媒体数据块（音频/视频）经过压缩编码处理后，先送给RTP封装成为RTP分组（也可称为RTP报文），RTP分组再装入运输层的UDP用户数据报，然后再向下递交给IP层。RTP现已成为因特网建议标准，并且已被广泛使用。RTP同时也是ITU-T的标准（H.255.0）。实际上，RTP是一个协议框架，因为它只包含了实时应用的一些共同的功能。RTP自己并不对多媒体数据块做任何处理，而只是向应用层提供一些附加的信息，让应用层知道应当如何进行处理。
    图把RTP协议画在应用层。这是因为从应用开发者的角度看，RTP应当是应用层的一部分。在应用程序的发送端，开发者必须编写用RTP封装分组的程序代码，然后把RTP分组交给UDP套接字接口。在接收端，RTP分组通过UDP套接字接口进入应用层后，还要利用开发者编写的程序代码从RTP分组中把应用数据块提取出来。
    然而RTP的名称又隐含地表示它是一个运输层协议。这样划分也是可以的，因为RTP封装了多媒体应用的数据块，并且由于RTP向多媒体应用程序提供了服务（如时间戳和序号），因此也可以把RTP看成是在UDP之上的一个运输层子层的协议。
    RTP还有两点值得注意。首先，RTP分组只包含RTP数据，而控制是由另一个配套使用的RTCP协议提供的（这在下一节介绍）。其次，RTP在端口号1025到65535之间选择一个未使用的偶数UDP端口号，而在同一次会话中的RTCP则使用下一个奇数UDP端口号。但端口号5004和5005则分别用作RTP和RTCP的默认端口号。

    在RTP分组的首部中，前12个字节是必须的，而12字节以后的部分则是可选的。下面按照各字段重要性的顺序来进行介绍。
    （1）有效载荷类型（payload type）   占7位。这个字段指出后面的RTP数据属于何种格式的应用。收到RTP分组的应用层就根据此字段指出的类型进行处理。
    例如，对于音频有效载荷（每一种格式后面括弧中的数字就表示其有效载荷的编码）：μ律PCM（0），GSM（3），LPC（7），A律PCM（8），G.722（9），G.728（15）等。
    （2）序号   占16位。对每一个发送出的RTP分组，其序号加1.再一次RTP会话开始时的初始序号是随机选择的。序号使接收端能够发现丢失的分组，同时也能将失序的RTP分组中心按序排列好。例如，在收到序号为60的RTP分组后又收到了序号为65的RTP分组。那么就可推断出，中间还缺少序号为61至64的4个RTP分组。
    （3）时间戳    占32位。时间戳反映了RTP分组中的数据的第一个自己的采样时刻。再一次会话开始时间戳的初始值也是随机选择的。即使是在没有信号发送时，时间戳的数值也要随时间而不断地增加。接收端使用时间戳可准确知道应当在什么时间还原哪一个数据块，从而消除时延的抖动。时间戳还可用来使视频应用中声音和图像的同步。在RTP协议中并没有规定时间戳的粒度（granularity），这取决于有效载荷的类型。因此RTP的时间戳又称为媒体时间戳，以强调这种时间戳的粒度取决于信号的类型。例如，对于8kHz采样的话音信号，若每隔20ms构成一个数据块，则一个数据块中包含有160个样本（0.02x8000=160）。因此发送端每发送一个RTP分组，其时间戳的值就增加160。
    （4）同步源标识符   占32位。同步源标识符SSRC（Synchronous SouRCe identifier）是一个数，用来标志RTP流（stream）的来源。SSRC与IP地址无关，在新的RTP流开始时随机地产生。由于RTP使用UDP传送，因此可以有多个RTP流（例如，使用几个摄像机从不同角度拍摄同一个节目所产生的多个RTP流）复用到一个UDP用户的数据报中。SSRC可使接收端的UDP能够将收到的RTP流送到各自的终点。两个RTP流恰好都选择同一个SSRC的概率是极小的。若发生这种情况，这两个源都重新选择另一个SSRC。
    （5）参与源标识符   这个是选项，最多可有15个。参与源标识符CSRC（Contributing SouRCe identifier）也是一个32位数，用来标志来源于不同地点的RTP流。在多播环境中，可以用中间的一个站（叫做混合站mixer）把发往同一个地点的多个RTP流混合成一个流（可节省通信资源）。在目的站再根据CSRC的数值把不同的RTP流分开。
    （6）参与源数   占4位。这个字段给出后面的参与源标识符的数目。
    （7）版本   占2位。当前使用的是版本2.
    （8）填充P    占1位。在某些特殊情况下需要对应用数据块加密，这往往要求每一个数据块有确定的长度。如不满足这种长度要求，就需要进行填充。这是就把P位置1，表示这个RTP分组的数据有若干填充字节。在数据部分的最后一个字节用来表示所田中的字节数。
    （9）扩展X    占1位。X置1表示在此RTP首部后面还有扩展首部。扩展首部很少使用，这里不再讨论。
    （10）标记M   占1位。M置1表示这个RTP分组具有特殊意义。例如，在传送视频流时用来表示每一帧的开始。
    8.3.4实施运输控制协议RTCP
    实施运输控制协议RTCP（RTP Control Protocol）是与RTP配合使用的协议，实际上，RTCP协议也是RTP协议不可分割的部分。
    RTCP协议的主要功能是：服务质量的监视与反馈、媒体间的同步（如某一个RTP发送的声音和图像的配合），以及多播组中成员的标志。RTCP分组（也可称为RTCP报文）也使用UDP来传送，但RTCP并不对音频/视频分组进行封装。由于RTCP分组很短，因此可把多个RTCP分组封装在一个UDP用户数据报中。RTCP分组周期性地在网上传送，它带有发送端和接收端对服务质量的统计信息报告（如已发送的分组数和字节数、分组丢失率、分组到达时间间隔的抖动等）。
    结束分组BYE表示关闭一个数据流。
    特定应用分组APP使应用程序能够定义新的分组类型。
    接收端报告分组RR用来使接收端周期性地向所有的点用多播方式进行报告。接收端没收到一个RTP流（一次会话包含有许多的RTP流）就产生一个接收端报告分组RR。RR分组的内容有：所收到的RTP流的SSRC；该RTP流的分组丢失率（若分组丢失率太高，发送端就应当适当降低发送分组的速率）；在该RTP流中的最后一个RTP分组的序号；分组到达时间间隔的抖动等。
    发送RR分组有两个目的。第一，可以使所有的接收端和发送端了解当前网络的状态。第二，可以使所有发送RTCP分组的站点自适应地调整自己发送RTCP分组的速率，使得起控制作用的RTCP分组不要过多地影响传送应用数据的RTP分组在网络中的传输。通常是使RTCP分组的通信量不超过网络中的数据分组的通信量的5%，而接收端报告分组的通信量又应小于所有RTCP分组的通信量的75%。
    发送端报告分组SR用来使发送端周期性地向所有接收端用多播放时进行报告。发送端每发送一个RTP流，就要发送一个发送端报告分组SR。SR分组的主要内容有：该RTP流的SSRC；该RTP流中最新产生的RTP分组的时间戳和绝对时钟时间（或墙上时钟时间wall clock time）；该RTP流包含的分组数；该RTP流包含的字节数。
    绝对时钟时间是必要的。因为RTP要求每一种媒体使用一个流。例如，要传送视频图像和相应的声音就需要传送两个流。有了绝对时钟时间就可进行图像和声音的同步。
    源点描述分组SDES给出了会话中参加者的描述，它包含参加者的规范名CNAME（Canonical NAME）。规范名是参加者的电子邮件地址的字符串。
    8.3.5  H.323
    现在IP电话有两套信令标准。一套是ITU-T定义的H.323协议。另一套是IETF提出的会话发起协议SIP（Session Intiation Protocol）。我们先介绍H.323协议。
    H.323协议是ITU-T于1996年制定的为在局域网上传送话音信息的建议书（它的名称很长）。1998年的第二个版本改用的名称是“基于分组的多媒体通信系统”。基于分组的网络包括因特网、局域网、企业网、城域网和广域网。H.323是因特网的端系统之间进行实时声音和视像会议的标准。请注意，H.323不是一个单独的协议而是一组协议。H.323包括系统和构建的描述、呼叫模型的描述、呼叫信令过程、控制报文、复用、话音编解码器、视像编解码器，以及数据协议等。图示意了连接在分组交换网上的H.323终端使用H.323协议进行多媒体通信。
    H.323标准指明了四种构件，使用这些构建连网就可以进行点对点或一点对多点的多媒体通信。
    （1）H.323终端    这可以是一个PC机，也可以是运行H.323程序的单个设备。
    （2）网关   网关连接到两种不同的网络，使得H.323网络可以和非H.323网络（如公用电话网）进行通信。仅在一个H.323网络上通信的两个终端当然就不需要使用网关。
    （3）网闸（gatekeeper）   网闸相当于整个H.323网络的大脑。所有的呼叫都要通过网闸，因为网闸提供地址转换、授权、带宽管理和计费功能。网闸还可以帮助H.323终端找到距离公用电话网上的被叫用户最近的一个网关。
    （4）多点控制单元MCU（Multipoint Control Unit）   MCU支持三个或更多的H.323终端的音频或视频会议。MCU管理会议资源、确定使用的音频或视频编解码器。
    网关、网闸和MCU在逻辑上是分开的构件，但他们可实现在一个物理设备中。在H.323标准中，将H.323终端、网关和MCU都称为H.323端点（end point）。
    图表示了利用H.323网关使因特网能够和公用电话网进行链接。
    图给出了H.323的体系结构。可以看出，H.323是一个协议族，它可以使用不同的运输协议。H.323包括以下一些组成部分：
            |音频/视频应用       |信令和控制                                       |数据应用|
            |-------------------|------------------------------------------------|--------|
            |音频编解码|视频编解码|RTCP|H.225.0登记信令|H.225.0呼叫信令|H.245控制信令|T.120数据|
            |-------------------|    |               |              |            |         |
            |RTP                |    |               |              |            |         |
            |----------------------------------------|-------------------------------------|
            |UDP                                     |TCP                                  |
            |------------------------------------------------------------------------------|
            |IP                                                                            |
    （1）音频编解码器   H.323要求至少要支持G.711（64kb/s的PCM）。建议支持如G.722（16kb/s的ADPCM），G.723.1（5.3/6.3的LPC），G.728（16kb/s的低时延CELP）和G.729（8kb/s的CS-ACELP）等。
    （2）视频编解码器   H.323要求必须支持H.261标准（176x144像素）。
    （3）H.255.0登记信令，即登记/接纳/状态RAS（Registration/Admission/Status）。H.323终端和网闸使用RAS来完成登记、接纳控制和贷款转换等功能。
    （4）H.255.0呼叫信令    用来在两个H.323端点之间建立连接。
    （5）H.245控制信令    用来交换端到端的控制报文以便管理H.323端点的运行。
    （6）T.120数据传送协议    这是与呼叫相关联的数据交换协议。用户在参加音频/视频会议时，可以和其他与会用户共享屏幕上的白板。由于使用TCP协议，因此能够保证数据传送的正确（在传送音频/视频文件时使用的是UDP，因此不能保证服务质量）。
    （7）实施运输协议RTP和实施运输控制协议RTCP   这两个协议前面已讨论。
    H.323的出发点是以已有的电路交换电话网为基础，增加了IP电话的功能（即远距离传输采用IP网络）。H.323的信令也沿用原有电话网的信令模式，因此与原有电话网的连接比较容易。
    8.3.6会话发起协议SIP
    虽然H.323系列现在已被大部分生产IP电话的厂商采用，但由于H.323过于复杂（整个文档多达736页），不便于发展基于IP的新业务，因此IETF的MMUSIC工作组制订了另一套较为简单且实用的标准，即会话发起协议SIP（Session Initiation Protocol），目前已成为因特网的建议标准。SIP使用的是KISS原则：保持简单、傻瓜（Keep It Simple and Stupid）。
    SIP协议的出发点是以因特网为基础，而把IP电话是为因特网上的新应用。因此SIP协议只涉及到IP电话所需的信令和有关服务质量的问题，而没有提供像H.323那样多的功能。SIP没有强制使用特定的编解码器，也不强制使用RTP协议。然而实际上大家还是选用RTP和RTCP作为配合使用的协议。
    SIP使用文本方式的客户服务器协议。SIP系统只有两种构件，即用户代理（user agent）和网络服务器（network server）。用户代理包括两个程序，即用户代理客户UAC（User Agent Client）和用户代理服务器UAS（User Agent Server），前者用来发起呼叫，后者用来接受呼叫。网络服务器分为代理服务器（proxy server）和重定向服务器（redirect server）。代理服务器接受来自主叫用户的呼叫请求（实际上是来自用户代理客户的呼叫请求），并将其转发给被叫用户或下一跳代理服务器，然后下一跳代理服务器再把呼叫请求转发给被叫用户（实际上是转发给用户代理服务器）。重定向服务器不接受呼叫，它通过响应告诉客户下一跳代理服务器的地址，由客户按此地址向下一跳代理服务器重新发送呼叫请求。
    SIP的地址十分灵活。它可以是电话号码，也可以是电子邮件地址、IP地址或其他类型的地址。但一定要使用SIP的地址格式，例如：
    ·电话号码   sip：zhangsan@8625-87654321
    ·IPv4地址   sip：zhangsan@201.12.34.56
    ·电子邮件地址   sip：zhangsan@public1.ptt。js。cn
    和HTTP相似，SIP是基于报文的协议。SIP使用了HTTP的许多首部、编码规则、差错码以及一些鉴别机制。它比H.323具有更好的可扩缩性。
    SIP的会话共有三个阶段：建立会话、通信和终止会话。图给出了一个简单的SIP会话的例子。图中的建立会话阶段和终止会话阶段，都是使用SIP协议，而中间的通信阶段，则是用如RTP这样的传送实时话音分组的协议。
    在图中，主叫方先向被叫方发出INVITE报文，这个报文中含有双方的地址信息以及其他一些信息（如通话时话音编码方式等）。被叫方如接受呼叫，则发回OK响应，而主叫方再发送ACK报文作为确认（这和建立TCP连接的三次握手相似）。然后双方就可以同化了。当通话完毕时，双方中的任何一方都可以发送BYE报文以终止这次的会话。
    SIP有一种跟踪用户的机制，可以找出被叫方使用的PC机的IP地址（例如，被叫方使用DHCP，因而没有固定的IP地址）。为了实现跟踪，SIP使用登记的概念。SIP定义一些服务器作为SIP登记器（registrar）。每一个SIP用户都有一个相关联的SIP登记器。用户在任何时候发起SIP应用时，都应当给出SIP登记器发送一个SIP REGISTER报文，向登记器报告现在使用的IP地址。SIP登记器和SIP代理服务器通常运行在同一台主机上。
    图说明了SIP登记器的用途。主办方把INVITE报文发送给SIP代理服务器。这个INVITE报文中只有被叫方的电子邮件地址而没有其IP地址。SIP代理服务器就向SIP登记器发送域名系统DNS查询（这个查找报文不是SIP报文），然后从回答报文找到了被叫方的IP地址。代理服务器把得到的被叫方的IP地址插入到主叫方发送的INVITE报文中，转发给被叫方。被叫方发送OK响应，然后主叫方发送ACK报文，完成了会话的建立。
    如果被叫没有在这个SIP登记器进行过登记，那么这个SIP登记器就发回重定向报文，指示SIP代理服务器向另一个SIP登记器重新进行DNS查询，直到找到被叫为止。
    SIP还有一个配套协议是绘画描述协议SDP（Session Description Protocol）。SDP在电话会议的情况下特别重要，因为电话会议的参加者是动态地加入和退出。SDP详细地指明了媒体编码、协议的端口号以及多播地址。SDP现在也是因特网建议标准。
    由于SIP问世较晚，因此它现在比H.323占有的市场份额要小。对今后作为IETF标准的SIP协议的进展情况应当引起我们的注意。
8.4改进“尽最大努力交付”的服务
    使因特网更好地传送多媒体信息的另一种方法，是改变因特网平等对待对待所有分组的思想，使得对时延由较严格要求的实时音频/视频分组，能够从网络得到更好的服务质量QoS。
    下面我们先介绍提供服务质量的一般方法。
    8.4.1使因特网提供服务质量
    根据ITU-T在建议书E.800中给出的定义，服务质量QoS是服务性能的总效果，此效果决定了一个用户对服务的满意程度。因此在最简单的意义上，有服务质量的服务就是能够满足用户的应用需求的服务，或者说，可提供一致的、可预计的数据交付服务。
    在涉及到一些具体问题时，服务质量可用若干基本的性能指标来描述，包括可用性、差错率、相应时间、吞吐量、分组丢失率、连接建立时间、故障检测和改正时间等。服务提供者可向其用户保证某一种等级的服务质量。
    我们已多次强调过，因特网的网络本身只能提供“尽最大努力交付”的服务。而要传送多媒体信息，网络又必须具有一定的服务质量。下面通过图的例子说明应从哪些方面入手使因特网具有一定的服务质量。图中表示局域网上的两个主机H1和H2通过非常简单的网络（路由器R1和R2以及连接它们的链路）分别向远地另外两个主机H3和H4发送数据。连接R1和R2的链路带宽是1.5Mb/s。现在考虑以下四种情况。
    （1）一个1Mb/s的实时音频数据和一个FTP文件数据
    假定H1向H3传送1Mb/s的是视音频数据而H2向H4传送FTP文件数据。两个主机发送的数据都在路由器R1的输出队列中配对。若突然有一个很大的FTP数据块来到R1，就会把输出队列全部占满。后面到达路由器R1的实时音频分组就会被丢弃。显然这是不合理的。因此需要增加一个机制，就是给不同性质的分组打上不同的标记。这样当H1和H2的分组进入路由器R1时，R1就能够识别H1的是是数据分组，并使这些分组以高优先级进入输出队列，而仅在队列有多余空间时才准许低优先级的FTP的数据分组进入。
    （2）一个1Ms/s的实时音频数据和一个高优先级的FTP文件数据
    假定FTP的用户用高价从ISP处购买了高优先级服务，而实时音频的用户只购买了低优先级服务。因此，仅根据分组自己的标记来确定其服务等级还不够合理。可见应当使路由器增加一种机制--分类（classification），即路由器根据某些准则（例如，根据发送数据的地址）对输入分组进行分类，然后对不同类别的通信量给予不同的优先级。
    （3）一个数据率异常的实时音频数据和一个FTP文件数据
    假定上述的主机H1的数据率突然不正常地增大到1.5Mb/s或更高（这可能是出了故障或恶意破坏网络的正常运行），那么就会使主机H2的FTP的低优先级数据无法通过路由器R1.因此，应当使路由器能够对某个数据流进行通信量的管制（policing），使得这个数据流不要影响其他正常的数据流在网络中通过。例如，可以将H1的数据率限定为1Mb/s。路由器R1不停地监视H1的数据率。只要H1的数据率超过规定的1Mb/s，路由器R1就把其中的某些分组丢弃，使其数据率不超过原来设定的门限。
    为了更加合理地利用网络资源，应在路由器中再增加一种机制--调度（scheduling）。我们可以利用调度功能给实时音频和文件传送这两个应用分别分配1.0Mb/s和0.5Mb/s的带宽。这就好像在带宽为1.5Mb/s的链路中划分出两个逻辑链路，其带宽分别为1.0Mb/s和0.5Mb/s，因而对这两种应用都有相应的服务质量保证。
    （4）H1和H2都发送数据率为1Mb/s的实时数据
    在这种情况下到达路由器R1的总数据率是2Mb/s，已超过了1.5Mb/s链路的带宽。若使这两个主机发出的数据流平等地共享1.5Mb/s链路的带宽，则每个数据流平均将丢失25%的分组，因而都变得没有用了。比较合理的做法是让一个数据流通过1.5Mb/s的链路，而阻止另一个数据流的通过。这就需要另一种机制--呼叫接纳（call admission）。这里借用了电话网的术语，进一步的讨论见后面的8.4.3节。在使用呼叫接纳机制时，一个数据流要预先声明它所需的服务质量，然后或者被准许进入网络（能得到所需的服务质量），或者被拒绝进入网络（当所需的服务质量不能得到满足时）。
    上面简单地说明了为了使因特网能够提供一定的服务质量，应当设法增加一些机制，即：分组的分类、管制、调度以及呼叫接纳。在后面的几节我们将陆续讨论这些问题。
    8.4.2调度和管制机制
    调度和管制机制是使因特网能够提供服务质量的重要措施。下面先讨论调度机制。
    1.调度机制
    这里所说的“调度”就是指排队的规则。如果不采用专门的调度机制，那么在路由器的队列采用的默认排队规则就是先进先出FIFO（First In First Out）。当队列已满时，后到达的分组就被丢弃。先进先出的最大缺点就是不能区分时间敏感分组和一般数据分组，并且也不公平，因为这使得排在长分组后面的短分组要等待很长的时间。就像在机场办理登机卡时，正巧排在你前面的一个人代表20人的团队来办理登机卡，这时你只能耐心等待。
    在先进先出的基础上增加按优先级排队，就能使优先级高的分组优先得到服务。图是按优先级排队的例子。图中假定优先级分为两种，因此有两个队列：高优先级队列和低优先级队列。
    分组到达路由器后就由分类器（又称为分类程序）对其进行优先级分类，然后按照类别进入相应的队列。图中的源泉表示调度，其作用是从队列中取走排在队首的分组。调度相当于排队论中的服务员。只要高优先级队列中有分组在内，就从高优先级队列中按照链路速率取出排在队首的分组。只有当高优先级队列已空时，才能轮到低优先级队列中的分组输出到链路上。在图的下方给出三个高优先级的分组（灰色方块）与两个低优先级队列中的分组（白色方块）交替地到达路由器。但在分组离开路由器时，高优先级的分组3和5都提前得到服务。请注意，低优先级的分组2仍然比高优先级的分组5先得到服务。这是因为在分组2得到服务时，分组5还没有到达路由器。当高优先级的分组5到达时，路由器正在发送分组2，因此分组5必须等待分组2离开路由器后才能得到服务。
    简单地按优先级排队会带来一个缺点，这就是在高优先级队列中总是有分组时，低优先级队列的分组就长期得不到服务。这就不太公平。公平排队FQ（Fair Queuing）可解决这一问题。公平排队是对每种类别的分组流设置一个队列，然后轮流使每一个队列一次只能发送一个分组。对于空的队列就跳过去。但公平排队也有不公平的地方，这就是长分组得到的服务时间长，而短分组就比较吃亏，并且公平排队并没有区分分组的优先级。
    为了使高优先级队列中的分组有更多的机会得到服务，可增加队列“权重”的概念，这就是加权公平排队WFQ（Weighted Fair Queuing），其工作原理如图所示。
    加权公平排队WFQ是这样工作的。分组到达后就进行分类，然后送交与其类别对应的队列（这里假定分为三类）。三个队列顺序依次把队首的分组发送到链路。遇到队列空就跳过去。但根据各类别的优先级的不同，每种队列分配到的服务时间也不同。可以给队列i指派一个权重Wi。于是队列得到的平均服务时间为Wi/（ΣWj），这里ΣWj是对所有的非空队列的权重求和。这样，若路由器输出链路的数据率（即带宽）为R，那么队列i将得到的有保证的数据率Ri应为Ri=RxWi/ΣWj
    加权公平排队WFQ在服务质量体系结构中占有重要的地位。当前的许多路由器产品都加入了WFQ调度的功能。为了更好地理解WFQ的概念，图给出了一个简单的例子，并把先进先出FIFO的情况也同时画出。我们假定在WFQ的情况下，分配给分组流1的权重是0.5（即得到服务的时间占总的服务时间的一半），而分配给其他10个分组流的权重都各为0.05。这样，分组流2~11共10个分组流合起来的黔中也是0.5。
    在使用先进先出规则时，只有一个队列，因此每个分组流的第一个分组共11个分组排在队首。在图两种情况下，FIFO的结果都是一样的，即队列中前11分组发送完毕才能发送分组流中剩下的分组。在使用WFQ时，在图中分组流1先可以发送10个分组（但第11个分组还不能发送），而在图中分组流1和其他的分组流交替地发送。不管是哪一种情况，分组流1都能够得到更多时间的服务。
    2.管制机制
    前面提到了使用管制机制可以提供服务质量。对一个数据流，我们可根据以下三个方面进行管制：
    （1）平均速率   网络需要控制一个数据流的平均速率。这里的平均速率是指在一定的时间间隔内通过的分组数。但这个时间间隔的选择也说明了这个指标的严格程度。例如，限定数据流的平均速率为每秒50个分组和平均速率为每分钟3000个分组，虽然这两个指标的平均值都一样，但其严格程度却不同。假定有一个数据流，有一秒钟通过了1000个分组，但一分钟平均下来扔不超过3000个，那么这个数据流的平均速率符合后面一个指标，但却远远不满足前面的指标。
    （2）峰值速率   峰值速率限制了数据流在非常短的时间间隔内的流量。数学上的“瞬时值”在实际网络中无法测定。因此这里所说的“非常短的时间间隔”需要指明时间间隔是多少。例如，限定数据流的平均速率为每分钟3000个分组，但同时限定其等值速率不超过每秒1000个分组。峰值速率也同时受到链路带宽的限制。
    （3）突发长度   网络也限制在非常短的时间间隔内连续注入到网络中的分组数。
    要在网络中对进入网络的分组流按以上三个指标进行管制，可使用非常著名的漏桶管制器（leaky bucket policer）（可简称为漏桶），其工作原理如图所示。
    漏桶是一种抽象的机制。在漏桶中可装入许多权标（token），但最多装入b个权标。只要漏桶中的权标数小于b个，新的权标就以每秒r个权标的恒定速率加入到漏桶中。但若漏桶已装满了b个权标，则新的权标就不再装入，而漏桶的权标数达到最大值b。
    漏桶管制分组流进入网络的过程如下。分组进入网络前先要进入一个队列中等候漏桶中的权标。只要漏桶中有权标，就可从漏桶取走一个权标，然后就准许一个分组从队列进入到网络。若漏桶已无权标，就要等新的权标注入到漏桶后，再把这个权标拿走后才能准许下一个分组进入网络。请注意：“准许进入网络”并不等于说“已经进入了网络”，因为分组进入网络还需要时间，这取决于输出链路的带宽和分组在输出端的排队情况。
    假定在时间间隔t中把漏桶中的全部b个权标都取走。但在这个时间间隔内漏桶又装入了rt个新的权标，因此在任何时间间隔t内准许进入网络的分组数的最大值为rt+b。控制权标进入漏桶的速率r就可对分组进入网络的速率进行管制。
    3.漏桶机制与加权公平排队相结合
    把漏桶机制与加权公平排队结合起来可以控制队列中的最大时延。现假定有n个分组流输入到一个路由器，复用后从一条链路输出。每一个分组流使用漏桶机制进行管制，漏桶参数为bi和ri，i=1，2，…，n。
    前面已经讲过，WFQ可以使每一个分组流得到如公式所示的有保证的数据率。那么当分组流通过漏桶后等待WFQ服务时，一个分组所经受的最大时延是多少？
    现在考虑分组流i。假定漏桶i已经装满了bi个权标。这就表示分组流i不需要等待就可从漏桶中拿走bi个权标，因此bi个分组可以马上从路由器输出。但分组流i得到的数据率是由公式给出。这bi个分组中的最后一个分组所经受的时延最大，它等于传输这bi个分组所需的时间dmax，即bi除以公式给出的传输速率：dmax=biΣWj/RxWi
    8.4.3综合服务IntServ与资源预留协议RSVP
    最初试图在因特网中将因特网提供的服务划分为不同类别的是IETF提出的综合服务IntServ（Integrated Services）和资源预留协议RSVP（ReSource reserVation Protocol），其中的某些RFC文档已成为因特网的建议标准。
    IntServ可对单个的应用会话提供服务质量的保证，其主要特点有二：
    （1）资源预留。一个路由器需要知道不断出现的会话已经预留了多少资源（即链路带宽和缓存空间）。
    （2）呼叫建立。一个需要服务质量保证的会话必须首先在源点到终点的路径上的每一个路由器预留足够的资源，以保证其端到端的服务质量的要求。因此在一个会话开始之前必须先有一个呼叫建立（又称为呼叫接纳）过程。它需要在其分组传输路径上的每一个路由器都参加。每一个路由器都要确定该会话所需的本地资源是否够用，同时还不要影响到已经建立的会话的服务质量。
    IntServ定义了两类服务：
    （1）有保证的服务（guaranteed service），可保证一个分组在通过路由器时的排队时延有一个严格的上限。
    （2）受控负载的服务（controlled-load service），可以使应用程序得到比通常的“尽最大努力”更加可靠的服务。
    IntServ共有以下四个组成部分：
    （1）资源预留协议RSVP，它是IntServ的信令协议。
    （2）接纳控制（admission control），用来决定是否同意对某一资源的请求。
    （3）分类器（classifier），用来把进入路由器的分组进行分类，并根据分类的结果把不同类别的分组放入特定的队列。
    （4）调度器（scheduler），根据服务质量要求决定分组发送的前后顺序。
    一个会话必须首先声明它所需的服务质量，以便使路由器能够确定是否有足够的资源来满足该会话的需求。资源预留协议RSVP在进行资源预留时采用了多播树的方式。发送端发送PATH报文（即存储路径状态报文）给所有的接收端指明通信量的特性。每个中间的路由器都要转发PATH报文，而接收端用RESV报文（即资源预留请求报文）进行响应。路径上的每个路由器对RESV报文的请求都可以拒绝或接受。当请求被某个路由器拒绝时，路由器就发送一个差错报文给接收端，从而终止了这一信令过程。当请求被接受时，链路带宽和缓存空间就被分配给这个分组流，而相关的流（flow）状态信息就保留在路由器中。“流”是在多媒体通信中的一个常用的名词，一般定义为“具有同样的源IP地址、源端口号、目的IP地址、目的端口号、协议标识符及服务质量需求的一连串分组”。
    图用一个简单例子说明RSVP协议的要点。设主机H1要向因特网上的四个主机H2~H5发送多播视频节目，在图中这四个主机右边标注的数据率就是这些主机打算以这样的数据率来接收H1发送的视频节目。这个视频节目可使用不同的数据率来接收。用较低数据率接收时，图像和声音的质量也就较差。
    主机H1先以多播方式从源点H1向下游方向发送PATH报文，如图所示。当PATH报文传送到多播路径终点的四个主机（即叶节点）时，每一个主机就向多播路径的上游发送RESV报文，指明在接收该多播节目时所需的服务质量等级。路由器若无法预留RESV报文所请求的资源，就返回差错报文。若能预留，则把下游传来的RESV报文合并构成新的RESV报文，传送给自己的上有服务器，最后传送到远点主机H1.这些情况如图所示。因此，RESV协议是面向终点的。
    需要注意的是，路由器合并下游的RESV报文并不是把下游提出的预留数据率简单地相加而是取其中的较大的数值。例如，路由器R4收到两个预留3Mb/s的RESV报文，但R4向R2发送的RESV报文只要求预留3Mb/s而不是6Mb/s（因为向下游方向发送数据是采用可以节省带宽的多播技术）。同理，R3向R2发送的RESV报文要求预留100kb/s而不是150kb/s。最后，R1向源点H1发送的RESV报文要求预留3Mb/s。当H1收到返回的RESV报文后，就开始发送视频数据报文了。
    IntServ/RESV使得因特网的体系结构发生了根本的变化，因为这使得因特网不再是提供“尽最大努力交付”的服务。在有关服务质量的协议中，RESV是最复杂的。
    IntServ/RESV所基于的概念是端系统中与分组流有关的状态信息。各路由器中的预留信息只存储有限的时间（这称为软状态soft-state），因而各终点对这些预留信息必须定期进行更新。我们还应注意到，RESV协议不是运输层协议而是个网络层的控制协议。RESV不携带应用数据。图给出了在路由器中实现的IntServ体系结构。
    IntServ体系结构分为前台和后台两个部分。前台部分画在下面，包括两个功能块，即分类器与分组转发，分组的调度器。每一个进入路由器的分组都要通过这两个功能块。后台部分画在上面，包括四个功能块和两个数据库。这四个功能块是：
    ·路由选择协议，负责维持路由选择数据库。由此可查出对应于每一个目的地址和每一个流的下一跳地址。
    ·RESV协议，为每一个流预留必要的资源，并不断地更新通信控制数据库。
    ·接纳控制，当一个新的流产生时，RSVP就调用接纳控制功能块，以便确定是否有足够的资源可供这个流使用。
    ·管理代理，用来修改通信量控制数据库和管理接纳控制功能块，包括设置接纳控制策略。
    综合服务IntServ体系结构存在的主要问题是：
    （1）状态信息的数量与流的数目成正比。例如，对于OC-48链路（2.5Gb/s）上的主干网路由器，通过64kb/s的音频流的数目就超过39000个。如果对数据率再进行压缩，则流的数目就更多。因此在大型网络中，按每个流进行资源预留会产生很大的开销。
    （2）IntServ体系结构复杂。若要得到有保证的服务，所有的路由器都必须装有RSVP、接纳控制、分类器和调度器。这种路由器称为RSVP路由器。在应用数据传送的路径中只要有一个路由器是非RSVP路由器，整个的服务就又变为“尽最大努力交付”了。
    （3）综合服务IntServ所定义的服务质量等级数量太少，不够灵活。
    8.4.4区分服务DiffServ
    1.区分服务的基本概念
    由于综合服务IntServ和资源预留协议RSVP都较复杂，很难再大规模的网络中实现，因此IETF提出了一种新的策略，即区分服务DiffServ（Differentiated Service）。区分服务有时也简写为DS。因此，具有区分服务功能的结点就称为DS结点。
    区分服务DiffServ的要点如下：
    （1）DiffServ力图不改变网络的基础结构，但在路由器中增加区分服务的功能。因此，DiffServ将IP协议中原有8位的IPv4的服务类型字段和IPv6的通信量类字段重新定义为区分服务DS。路由器根据DS字段的值来处理分组的转发。因此利用DS字段的不同数值就可提供不同等级的服务质量。根据因特网的建议标准，DS字段现在只使用其中的前6位，即区分服务码点DSCP（Differentiated Service CodePoint）。在后面的两位目前不使用，记为CU（Currently Unused）。因此由DS字段的值所确定的服务质量实际上就是由DS字段中DSCP的值来确定。
    在使用DS字段之前，因特网的ISP要和用户商定一个服务等级协定SLA（Service Level Agreement）。在SLA中指明了被支持的服务类别（可包括吞吐量、分组丢失率、时延和时延抖动、网络的可用性等）和每一类别所容许的通信量。
    （2）网络被划分为许多个DS域（DS Domain）。一个DS域在一个管理实体的控制下实现同样的区分服务策略。DiffServ将所有的复杂性放在DS域的边界结点（boundary node）中，而使DS域内部路由器工作得尽可能地简单。边界结点可以是主机、路由器或防火墙等。为了简单起见，下面只讨论边界结点是边界路由器的情况（原理都是一样的）。图给出了DS域、边界路由器（boundary router）和内部路由器（interior router）的示意图。图中标有B的路由器都是边界路由器。
    （3）边界路由器中的功能较多，可分为分类器（classifier）和通信量调节器（conditioner）两大部分。调节器又由标记器（marker）、整形器（shaper）和测定器（meter）三个部分组成组成。分类器根据分组首部中的一些字段（如源地址、目的地址、源端口、目的端口或分组的标识等）对分组进行分类，然后将分组交给标记器。标记器根据分组的类别设置DS字段的值。以后在分组的转发过程中，就根据DS字段的值使分组得到相应的服务。测定器根据事先商定的SLA不断地测定分组流的速率（与事前商定的数值相比较），然后确定应采取的行动，例如，可重新打标或交给整形器进行处理。整形器中设有缓存队列，可以将突发的分组峰值速率平滑为较均匀的速率，或丢弃一些分组。在分组进入内部路由器后，路由器就根据分组的DS值进行转发。图给出了边界路由器中的各功能块的关系。
    （4）DiffServ提供了一种聚合（aggregation）功能。DiffServ不是为网络中的每一个流维持供转发时使用的状态信息，而是把若干个流根据其DS值聚合成少量的流。路由器对相同DS值的流都按相同的优先级进行转发。这就大大简化了网络内部的路由器的转发机制。区分服务DiffServ不需要使用RSVP信令。
    2.每跳行为PHB
    DiffServ定义了在转发分组时体现服务水平的每跳行为PHB（Per-Hop Behavior）。所谓“行为”就是指在转发分组时路由器对分组是怎样处理的。“行为”的例子可以是：“首先转发这个分组”或“最后丢弃这个分组”。“每跳”是强调这里所说的行为只涉及到本路由器转发的这一跳的行为，而下一个路由器再怎样处理则与本路由器的处理无关。这和IntServ/RSVP考虑的服务质量是“端到端”的很不一样。
    IETF的DiffServ工作组已经定义了两种PHB，即迅速转发PHB和确保转发PHB。
    迅速转发PHB（Expedited Forwarding PHB）可记为EF PHB，或EF。定义EF的RFC文档是RFC 3246.EF指明离开一个路由器的通信量的数据率必须等于或大于某一数值。因此EF PHB用来构造通过DS域的一个低丢失率、低时延、低时延抖动、确保带宽的端到端服务（即不排队或很少排队）。这种服务对端点来说像点对点连接或“虚拟租用线”，又称为Premium服务。对应于EF的DSCP的值是101110。
    确保转发PHB（Assured Forwarding PHB）可记为AF PHB，或AF。定义AF的RFC文档是RFC 2597.AF用DSCP的第0~2位把通信量划分为四个等级（分别为001，010，011和100），并给每一种等级提供最低数量的带宽和缓存空间。对于其中的每一个等级再用DSCP的第3~5位划分出三个“丢弃优先级”（分别为010，100和110，从最低丢弃优先级到最高丢弃优先级）。当发生网络拥塞时，对于每一个等级的AF，路由器就首先把“丢弃优先级”较高的分组丢弃。AF可以与5.7.3节的随机早起检测RED结合起来使用。
    从以上所述可看出，区分服务DiffServ比较灵活，因为它并没有定义特定的服务或服务类别。当新的服务类别出现而旧的服务类别不再使用时，DiffServ仍然可以工作。
习题
8-01    音频/视频数据和普通的文件数据都有哪些主要的区别？这些区别对音频/视频数据在因特网上传送所用的协议有哪些影响？既然现有的电信网能够传送音频/视频数据，并且能够保证质量，为什么还要用因特网来传送音频/s视频数据呢？
8-02    端到端时延与时延抖动有什么区别？产生时延抖动的原因是什么？为什么说在传送音频/视频数据时对时延和时延抖动都有较高的要求？
8-03    目前有哪几种方案改造因特网使因特网能够适合于传送音频/视频数据？
8-04    实时数据和等时的数据是一样的意思吗？为什么说因特网是不等时的？实时数据都有哪些特点？试说明播放时延的作用。
8-05    流式存储音频/视频。流式实况音频/视频和交互式音频/视频都有何区别？
8-06    媒体播放器和媒体服务器的功能是什么？请用例子来说明。媒体服务器为什么又称为流式服务器？
8-07    实时流式协议RTSP的功能是什么？为什么说它是个带外协议？
8-08    狭义的IP电话和广义的IP电话都有哪些区别？IP电话都有哪几种链接方式？
8-09    IP电话的通话质量与哪些因素有关？影响IP电话话音质量的主要因素有哪些？为什么IP电话的通话质量是不确定的？
8-10    为什么RTP协议同时具有运输层和应用层的特点？
8-11    RTP协议能够提供应用分组的可靠传输？请说明理由。
8-12    在RTP分组的首部中为什么要使用序号、时间戳和标记。
8-13    RTCP协议使用在什么场合？它们各有何主要特点？
8-14    IP电话的两个主要标准各有何特点？
8-15    携带实施音频信号的固定长度分组序列发送到因特网。每隔10ms发送一个分组。前10个分组通过网络的时延分别是45ms，50ms53ms，46ms，30ms，40ms，46ms，49ms，55ms和51ms。
        （1）用图表示出这些分组发出时间和到达时间。
        （2）若在接收端还原时的端到端时延为75ms，试求出每一个分组经受的时延。
        （3）画出接收端缓存中的分组数与时间的关系。
8-16    话音信号的采样速率为8000Hz。每隔10ms将已编码的话音采样装配成话音分组。每一个话音分组在发送之前要加上一个时间戳。假定时间戳是从一个时钟得到的，该时钟每隔Δ秒将计数器加1.试问能否将Δ取为9ms？如果行，请说明理由。如果不行，你认为Δ应取为多少？
8-17    在传送音频/视频数据时，接收端的缓存空间的上限由什么因素决定？实时数据流的数据率和时延抖动对缓存空间上限的确定有何影响？
8-18    什么是服务质量QoS？为什么说“因特网根本没有服务质量可言”？
8-19    在讨论服务质量时，管制、调度、呼叫接纳各表示什么意思？
8-20    试比较先进先出（FIFO）排队、公平排队（FQ）和加权公平排队（WFQ）的优缺点。
8-21    假定一个支持三种类别的缓存运行加权公平排队WFQ的调度策略，并假定这三种类别的权重分别是0.5.0.25和0，25.如果是采用循环调度，那么这三个类别接收服务的顺序是123123123123……。
        （1）如果每种类别在缓存中都有大量的分组，试问这三种类别可能以何种顺序接受服务？
        （2）如果第1类和第3类在缓存中有大量的分组，但缓存中没有第2类的分组，试问这两类分组可能以何种顺序接受服务？
8-22     漏桶管制器的工作原理是怎样的？数据流的平均速率、峰值速率和突发长度各表示什么意思？
8-23    采用漏桶机制可以控制达到某一数值的、进入网络的数据率的持续时间。设漏桶最多可容纳b个权标。当漏桶中的权标数小于b个时，新的权标就以每秒r个权标的恒定速率加入到漏桶中。设分组进入网络额速率为Npkt/s（pkt代表分组），试推导以此速率进入网络所能持续的时间T。讨论一下为什么改变权标加入到漏桶中的速率就可以控制分组进入网络的速率。
8-24    在上题中，设b=250token，r=5000token/s，N=25000pkt/s。试求分组用这样的速率进入网络能够持续多长时间。若N-2500pkt/s，重新计算本题。
8-25    试推导公式（8-2）。
8-26    假定图中分组流1的漏桶权标装入速率r1<Rw1/（ΣWi），试证明：（8-2）式给出的dmax实际上是分组流1中任何分组在WFQ队列中所经受的最大时延。
8-27    考虑8.4.2节讨论的管制分组的平均速率和突发长度的漏桶管制器。现在我们限制其峰值速率p分组/秒。试说明怎样把一个漏桶管制器的输出流入到第二个漏桶管制器的输入，以便用这样串接的两个漏桶能够管制分组流的平均速率、峰值速率以及突发长度。第二个漏桶的大小和权标产生的速率应当是怎样的？
8-28    综合服务IntServ由哪几个部分组成？有保证的服务和受控负载的服务有何区别？
8-29    试述资源预留协议RSVP的工作原理。
8-30    区分服务DiffServ与综合服务IntServ有何区别？区分服务的工作原理是怎样的？
8-31    在区分服务DiffServ中的每跳行为PHB是什么意思？EF PHB和AF PHB有何区别？它们各适用于什么样的通信量？
8-32    假定一个发送端向2^n个接收端发送多播数据流，而数据流的路径是一个完全的二叉树，在此二叉树的每一个节点上都有一个路由器。若使用RSVP协议进行资源预留，问总共要产生多少个资源预留报文RESV（有的在接收端产生，也有的在网络中的路由器产生）？

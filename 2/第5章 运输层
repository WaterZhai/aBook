第5章   运输层

运输层是整个网络体系结构中的关键层次之一。本章讨论TCP/IP体系中运输层最重要的两种协议：UDP和TCP。TCP比UDP复杂得多，必须弄清TCP的各种机制（如面向连接的可靠服务、流量控制、拥塞控制等），以及TCP连接管理的状态图的概念。

5.1运输层协议概述
    5.1.1进程之间的通信
        从通信和信息处理的角度看，运输层向它上面的应用层提供通信服务，它属于面向通信部分的最高层，同时也是用户功能中的最底层。当网络的边缘部分中的两个主机使用网络的核心部分的功能进行端到端的通信时，只有主机的协议栈才有运输层，而网络核心部分中的路由器在转发分组时都只用到下三层的功能。
        运输层的作用。设局域网1上的主机A和局域网2上的主机B通过互连的广域网进行通信。既然IP协议能够把源主机发送出的分组按照首部中的目的地址送交给目的主机，那么，为什么还需要再设置一个运输层呢？
        从IP层来说，通信的两端是两个主机。IP数据报的首部明确地标志了这两个主机的IP地址。但“两个主机之间的通信”这种说法还不够清楚。这是因为，真正进行通信的实体是在主机中的进程，是这个主机中的一个进程和另一个主机中的一个进程在交换数据（即通信）。因此严格地讲，两个主机进行通信就是两个主机中的应用进程互相通信。IP协议虽然能把分组送到目的主机，但是这个分组还停留在主机的网络层而没有交付主机中的应用进程。从运输层的角度看，通信的真正端点并不是主机而是主机中的进程。也就是说，端到端的通信是应用进程之间的通信。在一个主机中经常有多个应用进程同时分别和另一个主机中的多个应用进程通信。例如，某用户在使用浏览器查找某网站的信息时，其主机的应用层运行浏览器客户进程。如果在浏览网页的同时，还要用电子邮件给网站发送反馈意见，那么主机的应用层AP3通信，而与此同时，应用进程AP2也和对方的应用进程AP4通信。这表明运输层有一个很重要的功能--复用（multiplexing）和分用（demultiplexing）。这里的“复用”是指在发送方不同的应用进程都可以使用同一个运输层协议传送数据（当然需要加上适当的首部），而“分用”是指接收方的运输层在剥去报文的首部后能够把这些数据正确交付到目的应用进程。“运输层提供应用进程间的逻辑通信”。“逻辑通信”的意思是：运输层之间的通信好像是沿水平方向传送数据。但事实上这两个运输层之间并没有一条水平方向的物理连接。要传送的数据是沿着图中的虚线方向（经过多个层次）传送的。
        从这里可以看出网络层和运输层有明显的区别。网络层是为主机之间提供逻辑通信，而运输层为应用进程之间提供端到端的逻辑通信。然而正如后面还要讨论的运输层还具有网络层无法代替的许多其他重要功能。
        运输层还要对收到的报文进行差错检测。大家应当还记得，在网络层，IP数据报首部中的检验和字段，只检验首部是否出现差错而不检查数据部分。
        根据应用程序的不同需求，运输层需要有两种不同的运输协议，即面向连接的TCP和无连接的UDP，这两种协议就是本章要讨论的主要内容。
        我们还应指出，运输层向高层用户屏蔽了下面网络核心的细节（如网络拓扑、所采用的路由选择协议等），它使应用进程看见的就是好像在两个运输层实体之间有一条端到端的逻辑通信信道，但这条逻辑通信信道对上层的表现却因运输层使用的不同协议而有很大的差别。当运输层采用面向连接的TCP协议时，尽管下面的网络是不可靠的（值提供尽最大努力服务），但这种逻辑通信信道就相当于一条全双工的可靠信道。但当运输层采用无连接的UDP协议时，这种逻辑通信信道仍然是一条不可靠信道。
    5.1.2运输层的两个主要协议
        TCP/IP运输层的两个主要协议都是因特网的正式标准，即：
        1）用户数据报协议UDP（UserDatagramProtocol）
        2）传输控制协议TCP（TransmissionControlProtocol）
            这两种协议在协议栈中的位置
                |应用层       |
                |UDP   |TCP  |
                |IP           |
                |与各种网络接口|
        按照OSI的术语，这两个对等运输实体在通信时传送的数据单位叫做运输协议数据单元TPDU（TransportProtocolDataUnit）。但在TCP/IP体系中，则根据所使用的协议是TCP或UDP，分别称之为TCP报文段（segment）或UDP用户数据报。
        UDP在传送数据之前不需要先建立连接。远地主机的运输层在收到UDP报文后，不需要给出任何确认。虽然UDP不提供可靠交付，但在某些情况下UDP却是一种最有效的工作方式。
        TCP则提供面向连接的服务。在传送数据之前必须先建立连接，数据传送结束后要释放连接。TCP不提供广播或多播服务。由于TCP要提供可靠的、面向连接的运输服务，因此不可避免地增加了许多的开销。如确认、流量控制、计时器以及连接管理等。这不仅使协议数据单元的首部增大许多，还要占用许多的处理机资源。
            |应用        |应用层协议  |运输层协议|
            |名字转换    |DNS         |UDP      |
            |文件传送     |TFTP       |UDP      |
            |路由选择协议 |RIP        |UDP       |
            |IP地址配置   |BOOTP，DHCP|UDP       |
            |网络管理     |SNMP       |UDP       |
            |远程文件服务器|NFS        |UDP      |
            |IP电话       |专用协议    |UDP      |
            |流式多媒体通信|专用协议    |UDP      |
            |多播         |IGMP        |UDP      |
            |电子邮件      |SMTP       |TCP      |
            |远程终端接入  |TELNET      |TCP      |
            |万维网        |HTTP       |TCP      |
            |文件传送      |FTP         |TCP     |
    5.1.3运输层的端口
        前面已经提到过运输层的复用和分用功能。其实在日常生活中也有很多复用和分用的例子。假定一个机关的所有部门向外单位发出的公文都由收发室负责寄出，这相当于各部门都“复用”这个收发室。当收发室收到从外单位寄来的公文时，则要完成“分用”功能，即按照信封上写明的本机关的部门地址把公文正确进行交付。
        运输层的复用和分用也是类似的。应用层所有的应用进程都可以通过运输层再传送到IP层，这就是复用。运输层从IP层收到数据后必须交付给指明的应用进程。这就是分用。显然，给应用层的每个应用进程赋予一个非常明确的标志是至关重要的。
        我们知道，在单个计算机中进程是用进程标识符（一个不大的整数）来标志的。但是在云特网环境下，用计算机操作系统指派的这种进程标识符来标志运行在应用层的各种应用进程则是不行的。这是因为在因特网上使用的计算机的操作系统种类很多，而不同的操作系统有使用不同格式的进程标识符。为了使运行不同操作系统的计算机的应用进程能够互相通信，就必须用统一的方法（而这种方法必须与特定操作系统无关）对TCP/IP体系的应用进程进行标志。
        但是，把一个特定机器上运行的特定进程指明为因特网上通信最后的重点还是不可行的。这是因为进程的创建和撤销都是动态的，通信的一方几乎无法识别对方机器上的进程。另外，我们往往需要利用目的主机提供的功能来识别重点，而不需要知道具体的实现这个功能的进程是哪一个（例如，要和因特网上的某个邮件服务器联系，并不一定要知道这个服务器功能是由目的主机上的那个进程实现的）。
        解决这个问题的方法就是izai运输层使用协议端口号（protocol port number），或通常简称为端口（port）。这就是说，虽然通信的重点是应用进程，但我们只要把要传送的报文交到目的主机的某一个合适的目的端口，剩下的工作（即最后交付给目的进程）就由TCP来完成。
        请注意，这种在协议栈层间的抽象的协议端口是软件端口，和路由器或交换机上的硬件端口是完全不同的概念。硬件端口是不同硬件设备进行交互的接口，而软件端口是应用层的各种协议进程与运输实体进行层间交互的一种地址。不同的系统具体实现端口的方法可以是不同的（取决于系统使用的操作系统）。
        在后面将降到的UDP和TCP的首部格式中，我们将会看到它们都有源端口和目的端口这两个重要字段。当运输层收到IP层交上来的运输层报文时，就能够根据其首部中的目的端口号把数据交付给应用层的目的应用进程。
        TCP/IP的运输层用一个16位端口号来标志一个端口。但请注意，端口号只具有本地意义，它只是为了标志本计算机应用层送的各个进程在运输层交互时的层间接口。在因特网不同计算机中，相同的端口号是没有关联的。16位的端口号可允许有65535个不同的端口号，这个数目对一个计算机来说是足够用的。
        由此可见，两个计算机中的进程要互相通信，不仅必须知道对方的IP地址（为了找到对方的计算机），而且还要知道对方的端口号（为了找到对方计算机中的应用进程）。这和我们寄信的过程类似。当我们要和某人写信时，就必须知道他的通信地址。在新风尚会写明自己的地址。当收信人回信时，很容易在信封上看到发信人的地址。因特网上的计算机通信是采用客户-服务器方式。客户在发起通信请求时，必须先知道对方服务器的IP地址和端口号。因此运输层的端口号共分为下面的两大类。
        1）服务器端使用的端口号    这理由分为两类，最重要的一类叫做熟知端口号（well-know port number）或系统端口号，数值为0~1023。这些数值可在网址www.iana.org查到。IANA把这些端口号指派给了TCP/IP最重要的一些应用程序，让所有的用户都知道。当一种新的应用程序出现后，IANA必须为它指派一个熟知端口，否则因特网上的其他应用进程就无法和它进行通信。
            |应用程序 |FTP|TELNET|SMTP|DNS|TFTP|HTTP|SNMP|SNMP（trap）|
            |熟知端口号|21|23    |25  |53  |69 |80  |161 |162         |
            另一类叫做登记端口号，数值为1024~49151.这类端口号是为没有熟知端口号的应用程序使用的。使用这类端口号必须在IANA按照规定的手续登记，以防止重复。
        2）客户端使用的端口号   数值为49152~65535.由于这类端口号仅在客户进程运行时才动态选择，因此又叫做短暂端口号。这类端口号是留给客户进程选择暂时使用。当服务器进程收到客户进程的报文时，就知道了客户进程所使用的端口号，因而可以把数据发送给客户进程。通信结束后，刚才已使用过的客户端口号就不复存在。这个端口号就可以供其他客户进程以后使用。
        下面将分别讨论UDP和TCP。UDP比较简单，本章主要的篇幅是讨论TCP。
5.2用户数据报协议UDP
    5.2.1UDP概述
        用户数据报协议UDP只在IP的数据报服务之上增加了很少一点的功能，这就是复用和分用的功能以及差错检测的功能。UDP的主要特点是：
        1）UDP是无连接的，即

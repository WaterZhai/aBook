第8章  管理事件与性能日志

对管理员来说，未雨绸缪地管理与监控系统是一项重要的工作内容。遗憾的是，大多数管理员没有时间对自己负责的所有系统进行有规律的例行维护与监控。有鉴于此，本章将深入挖掘系统维护、监控的自动化方法与技术，通过这些方法与技术，可以降低管理员的工作负担，节省管理事件。
在前面的响应章节中，已经讲解了如何追踪与使用事件日志、如何进行自动化监控、如何监控进程以及如何对性能问题进行故障排除等内容。本章将讲解关于事件记录方式、企业级集中化事件记录、收集与生成性能数据报告等技术。管理员与其他具备相应许可权限的用户可以阅读事件日志、配置事件日志、管理性能日志等，本章讲解的技术将有助于完成这些工作。

8.1管理事件日志
    通常，管理员需要对本地及远程系统上的事件日志配置进行管理，以便确保事件日志以期望的方式进行了配置。比如，组织的安全策略可能会要求确保安全日志不能被重写。根据不同的配置需求，你可以使用命令行或命令行脚本来对安全日志或其他事件日志进行精确配置，而不需要登录每一台需要配置的本地或远程系统。配置事件日志时，首选的工具是Windows事件命令行工具（Wevtutil），你可以使用Wevtutil来完成查看或修改事件日志的配置、读取事件、导出与存档事件日志、清楚事件日志等任务。
    8.1.1开始使用Wevtutil
        Wevtutil提供了大量的命令与选项，可用于管理事件日志及其配置。在使用这一工具之前，应该花一点时间了解一下可用的子命令与选项。子命令与选项都有短格式的缩略名与长格式的完整名。如果刚开始接触Wevtutil，或者希望脚本中使用的命令更加清晰易读，你可能需要使用长格式的玩证明，以便减少可能的混淆与误解。熟练之后，一般会使用短格式的缩略名，以便节省时间与键盘输入。
            Wevtutil的基本语法格式为：
                wevtutil Command Argument [[Argument]...] [/Option: Value [/Option:Value]...]
        其中，Command是表中列出的某条命令，Arguments是命令参数，Value是某选项的值。
            Wevtutil中可用的命令
                -------------------------------------------------------------------------------------------------------------
                长格式            |短格式|描述
                ------------------|-----|------------------------------------------------------------------------------------
                archive-log       |Al   |对导出的日志进行存档
                clear-log         |Cl   |清空事件日志，永久性删除其中的所有事件
                enum-logs         |El   |根据名称列出所有可用的日志
                enum-publishers   |Ep   |列出所有已注册的事件发布者，包括所有的Windows服务，以及其他配置为向事件日志中写入事件的组件
                export-log        |Epl  |以Windows事件日志格式（.evtx）导出日志
                get-log           |Gl   |获取日志的配置信息
                get-log-info      |Gli  |获取日志的状态信息
                get-publisher     |Gp   |获取事件发布者的配置信息
                install-manifest  |lm   |从清单安装事件发布者与日志
                query-events      |Qe   |从日志或日志文件查询事件
                set-log           |Sl   |修改日志的配置
                uninstall-manifest|Um   |从清单卸载事件发布者与日志
                --------------------------------------------------------------------------------------------------------------
        尽管上面每条Wevtutil命令的选项集有些微不同，但所有命令有一些通用的选项，如表中所示。默认情况下，Wevtutil以当前登录用户的权限运行，但也可以指定在远程计算机上运行Wevtutil命令的Run As权限。要做到这一点，需要使用扩展的语法格式，其中包含如下的参数：
            /r:Computer /u:[Domain\]User [/p:Password]
        其中，Computer是远程计算机名或IP地址，Domain是可选的域名（用户账号存在于该域中），User是用户账号名（要使用的就是该用户账号的许可权限），Password是该用户账号的口令（可选的）。如果不指定域，则系统会将当前域设定为要使用的域。如果没有提供口令，则系统会弹出提示要求输入口令。
        （注解  选项与选项值是由冒号分隔开的，且冒号后不要插入空格。）
            Wevtutil命令选项
                ---------------------------------------------------------------------------------------------------------------------------------------------------------------------
                长格式           |短格式|描述
                ----------------|------|----------------------------------------------------------------------------------------------------------------------------------------------
                /remote:        |/r:   |指定要在其上运行命令的远程计算机，注意im（install-manifest）与um（uninstall-manifest）中不能使用该选项
                /username:      |/u:   |指定一个以域\用户或用户方式登录远程计算机的不同用户，只有在使用远程计算机时才是可用的
                /password:      |/p:   |为指定的用户设置口令。如果未提供口令，或者使用*作为口令，系统会掏出提示要求输入口令。只有在使用远程计算机，并且使用一个不同的用户登录时，这一选项才是可用的
                /authentication:|/a:   |设置连接到远程计算机时的认证类型，可以设置为Default、Negotiate、Kerberos或NTLM。默认设置为Negotiate
                /unicode:       |/uni: |将输出显示设置为Unicode或ASCII文本。设置为真时，代表Unicode；设置为假时，代表ASCII文本。默认设置为ASCII文本
                --------------------------------------------------------------------------------------------------------------------------------------------------------------------
    8.1.2列出可用的日志与已注册的事件发布者
        前面第6章中曾经说过，系统中有哪些可用的事件日志取决于系统中已安装的角色与服务。对已注册的事件日志发布者来说同样如此，一般包括所有Windows服务以及配置为向事件日志中写入事件的组件。
        通过在命令行中使用wevtutil el命令，可以列出计算机中所有可用过的日志。由于这种方式得到的日志列表太长，以至于无法在命令提示符中方便地显示。因此，你可能需要使用FIND命令对输出信息进行重定向，以便发现特定的日志，下面给出的就是这样一个实例：
            wevtutil el | find /i "FindText"
        其中，FindText是要搜索的文本，用于对输出信息进行查找和过滤，以便发现特定的日志。比如，如果希望确定某特定日志是否与加密文件系统（EFS）关联，就可以使用如下命令对输出信息进行过滤：
            wevtutil el | find /i "efs"
        由于使用了/l参数，FIND命令会忽略输出文本中字母的大小写。因而，包含EFS（大写、小写的任意组合）关键字的日志名都会被选中，比如：
            Microsoft-Windows-EFS/Debug
        通过在命令行中使用wevtutil ep命令，可以列出计算机中所有已注册的时间日志发布者。同样地，由于这种方式得到的输出列表太长，你可能需要使用FIND命令对输出信息进行过滤。比如，如果想确定Netlogon服务是否是一个已注册的事件日志发布者，就可以在命令提示符中输入如下命令：
            wevtutil ep | find /i "netlogon"
        由于Windows服务、系统组件以及其他附件软件都可能注册为事件日志发布者，你可能希望了解事件发布者向事件日志中写入事件的确切方式。为此，你可以使用Wevtutil gp命令并以如下的语法格式列出事件发布者的配置信息：
            wevtutil gp Publisher
        其中，Publisher为所要使用的、已注册的事件日志发布者的全名。比如，在确定Netlogon服务是已注册的事件日志发布者后，你可能希望进一步地确定其事件写入位置。为此，可以在命令行中使用wevtutil gp netlogon命令，其输出类似于如下格式：
            name: netlogon
            guid: 00000000-0000-0000-0000-000000000000
            helpLink:http://go.microsoft.com/fwlink/events.asp?CoName=
            Microsoft%20Corporation&ProdName=Microsoft%c2%ae%20Windows%c2
            %ae%200perating%20System&ProdVer=6.0.6000.16386&FileName=netmsg.
            dll&FileVer=6.0.6000.16386
            parameterFileName: %SystemRoot%\System32\kernel132.dll
            messageFileName: %SystemRoot%\System32\netmsg.dll
            message:
            channels:
                channel:
                    name: System
                    id: 8
                    flags: 1
                    message:
            levels:
            opcodes:
            tasks:
            keywords:
        上面的输出中，Channels详细资料中的名称值列出了事件发布者将要写入的日志或多个日志。有些情况下，需要获取所有事件的完整列表（事件发布者向事件日志中写入事件时会用到此列表）。为此，需要将/Ge参数设置为真，如下面实例所示：
            wevtutil gp Microsoft-Windows-TaskScheduler /ge:true
        如果事件发布者已经注册了特定的事件，Wevtutil会在标准的发布者配置信息后列出这些事件。另外，你可以指定远程计算机与登录凭据。比如，在下面的实例中，对FileServer25上的事件发布者Microsoft-Windows-TaskScheduler进行了检查：
            wevtutil gp Microsoft-Windows-TaskScheduler /r:fileserver25 /u:cpand\williams /p: Cab!@#45898
    8.1.3查看与改变日志配置
        通过日志配置选项，可以控制事件日志的大小与时间日志的处理方式。默认情况下，事件日志设置为可以设置的最大值。当日志达到最大值时，最早存储的事件会被重写，以防止事件日志的溢出。你也可以将事件日志配置为autobackup与strict retention。激活autobackup时，如果事件日志达到最大值，Windows会自动地将事件日志的副本保存到默认的目录下，并创建新的事件日志以便存储最新事件。激活strict retention时，如果事件日志达到最大值，Windows会丢弃新事件，并生成错误消息宣称事件日志已满。
        通过如下的语法格式使用Wevtutil gl命令，可以列出事件日志当前配置信息：
            wevtutil gl LogName
        其中，LogName为所要检查的事件日志名。比如，如果要查看应用程序日志的配置，可以在命令行中输入如下命令：
            wevtutil gl application
        该命令的输出类似于如下格式：
            name: application
            enabled: true
            type: Admin
            owningPublisher:
            isolation: Application
            channelAccess: 0:BAG:SYD:(A;;0xf0007;;;SY)(A;;0x7;;;BA)
            logging:
                logFileName: %SystemRoot%\System32\Winevt\Logs\application.evtx
                retention: false
                autoBackup: false
                maxSize: 20971520
            publishing:
        查看日志的配置信息时，主要关注的是日志是否处于激活状态以及默认的日志设置。在上面的实例中，应用程序日志处于激活状态，该文件的全路径为%Syste,Root%\System32\Winevt\Logs\application.evtx，retention处于关闭状态，autobackup处于关闭状态，最大日志规模为20971520字节（20480KB）。
        （真实场景  isolation属性提供了日志安全性相关的宝贵信息。如果将该属性设置为Application，则该日志与应用程序日志具备同样的安全许可权限。如果将该属性设置为System，则该日志与系统日志具备同样的安全许可权限。对这两种情况，除非通过组策略进行了相应设置，这两种日志的安全性没有过多的约束。如果将该属性设置为Custom，则该日志的安全性是自定义的，只有那些允许访问该日志的组成员才可以访问该日志。比如，安全日志的isolation属性为Custom，其相关的安全描述符对可以访问该日志的用户进行了限制，只有那些被赋予了Manage Auditing And The Security Log这一用户权限的用户才可以访问该日志。默认情况下，只有管理员才具备这一权限。由于安全日志的这种访问控制机制，要在命令行中操作本地计算机的安全日志，就必须使用一个增强的、管理员级的命令提示符。）
        日志是否处于激活状态是重要的。处于关闭状态的日志是不能使用的，也无法获取关闭状态日志的详细状态信息。要了解激活状态日志的更多信息，可以使用Wevtutil gli命令。比如，如果在命令行中执行命令Wevtutil gli application，就会列出应用程序日志的状态信息，其输出信息中包含了类似于如下的信息：
            creationTime: 2006-06-11T23:39:52.078Z
            lastAccessTime: 2006-06-11T23:39:52.078Z
            lastWriteTime: 2008-03-28T17:35:14.547Z
            fileSize: 20975616
            attributes: 32
            numberOfLogRecords: 43293
            oldestRecordNumber: 27607
        其中，应该重点关注的关键信息包括如下5个。
        · creationTime。列出了事件日志的创建日期与时间
        · lastWriteTime。列出了事件写入该日志的最后日期与时间。
        · fileSize。列出了日志当前大小（以字节计数）。
        · numberOfLogRecords。列出了日志中事件的数量。
        · oldestRecordNumber。列出了日志中最早的事件记录编号。
        （注解  如果最早事件记录编号为1，则说明Windows尚未重写该日志中的事件。如果最早事件记录编号大于1，则说明Windows重写了日志中的事件，重写事件的数量即为最早事件记录的编号。比如，在上例中，最早事件记录的编号为27607，说明Windows已经重写了该日志中大量事件。）
        如果需要修改日志的配置，可以使用Wevtutil sl命令。通过/Ms参数，可以设置日志最大值（以字节计数）。通过/E参数，可以激活或关闭日志。/e:true用于激活某日志，/e:false则用于关闭某日志。如果需要确保日志不被重写，可以使用/r:true参数来激活日志retention。激活后，如果事件日志达到最大值，Windows会丢弃新事件，并生成错误消息宣称事件日志已满。但如果同时也激活了autobackup，情况就会有所不同。如果希望体制达到最大值时自动备份，可以使用/ab:true参数来激活autobackup。要注意的是，激活autobackup的同时必须激活retention。
        参考如下的一些实例，有助于了解如何配置事件日志。
            将系统日志最大值设置为20971520字节（20480KB）：
            Wevtutil sl System /ms:20971529
            Wevtutil sl System /maxsize:20971529
            关闭Windows RPS debug日志：
            Wevtutil sl Microsoft-Windows-RPC/Debug /e:false
            Wevtutil sl Microsoft-Windows-RPC/Debug /enabled:false
            激活FileServer86上应用程序日志的retention：
            Wevtutil sl application /s:FIleServer86 /rt:true
            Wevtutil sl application /s:FIleServer86 /retention:true
            激活DomainServer18上安全日志的retention与autobackup：
            Wevtutil sl security /s:DomainServer18 /rt:true /ab:true
            Wevtutil sl security /s:DomainServer18 /retention:true /autobackup:true
        （注解  使用安全日志或远程系统时（或者使用远程系统上的安全日志时），你通常需要使用增强的管理员权限命令提示符对日志进行配置。对远程系统，也可以需要使用替代的登录凭据。）
    8.1.4导出与操作事件日志
        典型情况下，你可能需要为所有关键性的系统保存几个月的日志。但即便设置最大的日志大小，也不能完全满足这一需求，好在还有一些变通的方法。前面讲过，你可以通过Windows定期地对事件日志进行存档，也可以使用命令行或命令行脚本将事件日志导出并保存到特定的位置。
        通过Wevtutil epl命令，可以以Windows事件日志格式（.evtx）将事件日志导出到文件中。其基本语法格式为：
            wevtutil epl LogName SaveLocation
        其中，LogName是待导出的事件日志名，SaveLocation是导出的事件日志保存文件的全路径。比如，通过如下命令，可以将应用程序日志导出为c:\Logs\AppLog092908.evtx文件：
            wevtutil epl Application c:\Logs\AppLog092908.evtx
        （注解  如果创建一个专用的日志存档目录，就可以更方便地定位事件日志，为方便起见，对存档的事件日志进行命名时，应该采用描述性较强的文件名，从文件名本身就可以容易地判断事件日志的类型以及日志存档时间、比如，如果对2009年6月的应用程序日志进行存档，建议使用的较好的存档文件名是APPLogJune2009.evtx。）
        以这种方式导出事件日志时，Windows会将指定日志的全部内容导出到指定的存档文件，但并不会对事件日志进行清除操作。清楚事件日志是通过Wevtutil cl命令实现的，这一命令将在8.1.5节讲解。
        如果需要导出事件日志中的一部分事件（而不是所有事件），则可以使用保存的XPath查询。在6.4节中，讨论了XPath查询的基础，以及如何使用XPath查询创建自定义视图。要使用XPath查询导出事件日志中的一部分事件，必须创建包含筛选器（而非自定义视图）的XPath查询。要完成这一任务，最简单的方式是使用事件查看器并遵循如下步骤。
        （1）依次单击“开始”、“管理工具”、“事件查看器”来启动事件查看器。
        （注解  如果需要处理某台计算机上的事件日志，但没有本地登录该系统，则可以鼠标右键单击事件查看器节点，选择“连接到其他计算机”。之后，在弹出的“选择计算机”对话框的“其他计算机”文本框中，输入主机名、IP地址或目标计算机的完全限定域名。必要的时候，可以使用替代的登录凭据来连接到远程计算机。要建立连接，单击“确定”。）
        （2）选择需要筛选与处理的事件日志，在操作菜单，单击“筛选当前日志”。
        （3）在图8-1所示的“筛选当前日志”对话框中，使用记录时间列表选择要包含的事件的时间帧。根据不同的应用需求，你可以选择包含任何时间，前一个小时、过去的12小时、过去的24小时、最后7天、最后30天等事件。
        （4）使用事件级别复选框指定要包含的事件级别。选择“详细”，可以获取更多的详细资料。
        （5）你可以为所有事件源创建筛选器，也可以为某特定的事件源子集创建筛选器。要选择需要包含的事件源，可以使用事件源列表。通过选定相应的复选框，可以选择多个事件源。要记住的是，选择某些特定的事件源后，所有其他事件源将被排除在外。
        （6）可选地，使用用户与计算机对话框指定应该包含的用户与计算机。如果没有明确指定待包含的用户与计算机，则所有用户与计算机生成的事件都将默认包含。
        （7）单击XML选项卡来显示相关的XPath查询，如图8-2所示。
        （8）选中查询语句，按Ctrl+A全选，之后按Ctrl+C查询语句复制到剪切板。
        （9）依次单击“开始”、“所有程序”、“附件”、“记事本”打开记事本。
        （10）按Ctrl+V，将剪切的内容粘贴到记事本。
        （11）在记事本的“文件”菜单中，选择“另存为”。在弹出的“另存为”对话框中，选择一个存储位置，在“文件名”文本框中。输入要保存的文件名。另外要注意确保文件扩展名为.xml。
        （12）在“保存类型”列表中，选择“所有文件（*.*）”，防止记事本将.txt作为文件名的扩展名。
        （13）单击“保存”，关闭“另存为”对话框。
        （14）单击“确定”，关闭“过滤当前日志”对话框，并在事件查看器中预览筛选器。
        下面给出一个XPath查询示例，其功能是过滤应用程序日志中最近的关键性事件、错误事件与警告事件：
            <QueryList>
                <Query Id="0" Path="Application">
                    <Select Path="Application">*[System[(Level=1  or Level=2  or Level=3)
                    and TimeCreated[timediff(@SystemTime) &lt;= 604800000]]]</Select>
                </Query>
            </QueryList>
        通过将/Structuredquery（/Sq）设置为真，可以使得Wevtutil获知将要使用XPath查询。这种做法不再需要指定待导出的日志，因为筛选器中会对其进行定义，但必须使用如下的语法格式通知Wevtutil将要进行XPath查询：
            wevtutil eql QueryPath SaveLocation /sq:true
        其中，QueryPath为当前目录中的XPath查询名（或者是XPath查询的全文件路径），SaveLocation为待导出文件保存位置的全路径。比如，通过使用如下命令，你可以使用在文件c:\Queries\AppQuery.xml中定义的XPath查询将过滤后的应用程序日志导出为c:\Logs\AppLogFiltered092908.evtx文件：
            wevtutil eql c:\Queries\AppQuery.xml C:\Logs\AppLogFiLogFiltered092908.evtx /sq:true
        在事件查看器中，要打开保存的日志，可以先选择"事件查看器"节点，之后在操作菜单或操作面板中选择“打开保存的日志”，在弹出的“打开保存的日志”对话框中选择要打开的日志。通过Wevtutil，可以使用qe命令查看当前日志或存档日志的内容，其最佳语法格式如下所示：
            wevtutil qe LogName /c:NumEvents /rd:true /f:text
        其中，LogName为事件日志名（或存档日志的全文件路径），NumEvents为要读取的事件数量，/rd:true表明要处理的是最近的事件，/f:text将输出格式设置为文本，而非XML。比如，使用如下命令，可以读取应用程序日志中最近的50条事件：
            wevtutil qe Application /c:50 /rd:true /f:text
        你也可以使用XPath查询来过滤的日志。与wevtutil eql命令类似，通过将/Structuredquery（/Sq）参数设置为真，可以使得Wevtutil获知将要使用XPath查询，从而不再需要指定待导出的日志，因为筛选器中会对其进行定义。据此，使用XPath查询来筛选事件日志的语法格式为：
            wevtutil qe QueryPath /sq:true
        其中，QueryPath为当前目录中的XPath查询名，或者是XPath查询的全文件路径，比如：
            wevtutil qe c:\Queries\AppQuery.xml /sq:true
        你可以使用/c、/Rd、/F等参数来对输出信息进行约束，前面已经讨论，下面再给出一个实例：
            wevtutil qe c:\Queries\AppQuery.xml /sq:true /c:50 /rd:true /f:text
        你也可以使用/R、/U、/P等参数来查询远程计算机上的事件，前面已经讨论，下面再给出一个实例：
            wevtutil qe c:\Queries\AppQuery.xml /sq:true /c:50 /rd:true /f:text /r:PrintServer23 /u:adatum\williames /p:Fiber
    8.1.5清除事件日志
        事件日志已满时，就需要对其进行清除。要完成这一任务，可以以如下的语法格式使用Wevtutil cl命令：
            wevtutil 处理LogName
        其中，LogName为待清楚地事件日志名，比如：
            wevtutil cl Application
        在清除日志文件之前，可能需要对其进行备份，以便保存事件日志内容的副本。通过使用/Backuo（/Bu）参数，其后跟随着备份文件名或文件路径，可以规定在清除事件日志前对其进行备份并将其保存到指定的位置。需要注意的是，必须包括文件扩展.evtx，如下面实例所示：
            wevtutil cl Application /bu:c:\Logs\AppLogFil.evtx.
8.2企业级集中化事件记录机制
    在第6章与本章，已经讲解了可用于事件日志处理的很多技术。尽管你可以创建命令行脚本来检查多态计算机上的事件日志，并将这些信息复制到一个中央存储位置以便查阅，但这不是唯一的方法。通过配置事件转发机制，可以实现集中化事件记录。通过事件转发，可以将所有事件或特定类型事件转发到指定的、用于集中化事件记录的计算机。比如，你可能需要将组织内所有工作站与服务器配置为，将安全日志中的认证失败事件转发到用于集中化事件记录的计算机，以便对事件进行综合分析，并实时地检测出入侵企图。再如，对关键性的服务器，你可能需要将应用程序日志与系统日志中的关键性事件与错误事件转发到用于集中化事件记录的计算机，之后对事件进行综合分析，并实时地检测出应用程序错误与其他需要管理员注意的问题。配置集中化的时间记录机制是一个多步骤的过程。首先，要配置事件转发与事件收集机制。之后，在指定的、用于集中化事件记录的计算机上，必须创建订阅，其中指定要转发事件的类型与转发事件的日志源（以每台源计算机为基础）。在用于集中化事件记录的计算机上，默认情况下，转发的事件被收集到转发事件日志中。
    8.2.1配置事件转发与收集
        事件转发的体系结构是非常灵活的。比如，你可以将用于集中化事件记录的计算机配置为向其他用于集中化事件记录的计算机转发事件。由于转发协议（WS-Management）在底层上实际使用了超文本传输协议（HTTP）与安全HTTP协议（HTTPS），因此，只要相关的TCP端口是开放的，也可以使得转发事件顺利地通过防火墙。在标准的配置中，这意味着，如果使用HTTP协议，则TCP 80端口必须是开放的；如果使用HTTPS协议，则TCP 443端口必须是开放的。
        要使用事件转发，需要配置与激活相关计算机上的事件转发功能，并在用于集中化事件记录的计算机或计算机上为转发事件创建订阅。在域中，通过如下步骤，可以为转发事件配置事件转发与收集机制。
        （1）要在运行Windows Vista或Windows Server 2008的计算机上配置事件转发功能，必须登录所有源计算机，并完成如下任务。
            · 将Windows Remote Management Service（WinRM）服务的启动方式设置为自动（延迟的启动）。
            · 启动WinRM服务。
            · 创建WinRM侦听程序。
            · 将WinRM服务设置为防火墙例外（如果防火墙处于打来状态）。
        这些任务并不需要通过不同的操作分别完成，实际上，通过在一个增强的命令提示符中键入winrm quickconfig命令，就可以完成上面的配置任务，并在HTTP://*上创建一个WinRM侦听程序，以便在源计算机上接收到任意IP地址的WS-Management请求。执行该命令后，会弹出确认信息，选择"是"，
        （2）要配置事件收集，登录用于集中化事件记录的计算机，在一个增强的命令提示符中，键入wecutil qc命令。该命令将启动Windows Event Collector服务，并将该服务的启动方式设置为手动启动。弹出确认信息后，选择"是"。
        （3）在活动目录中，为事件收集计算机创建一个全局组，并将该计算机添加到该组中，在第15章15.2.1与15.2.2中，会对这一问题进行讨论。
        （4）在每台源计算机上，将事件收集计算机的全局组加入到本地管理员组。为完成这一任务，可以在一个增强的命令提示符中使用net localgroup命令。其语法格式为：net localgroup Administrators CollectorGroup /add，其中CollectorGroup是为事件收集计算机创建的全局组名，比如net localgroup Administrators Collectors /add。
    8.2.2创建订阅
        要创建订阅，最简单的方法是使用事件查看器，并遵循如下步骤。
        （1）依次单击"开始"、"管理工具"、"事件查看器"来启动事件查看器。如果尚未登录用于集中化事件收集的计算机，鼠标右击事件查看器节点，选择"连接到其他计算机"，在弹出的"选择计算机"对话框的"其他计算机"文本框中，输入主机名、IP地址或目标计算机的完全限定域名。必要的时候，可以使用替代的登录凭据来连接到远程计算机。要建立连接，单击"确定"。
        （2）鼠标右击订阅节点，选择"创建订阅"。
        （3）在图所示的"订阅属性"对话框中，为订阅键入名称，比如"所有文件服务器"，订阅名被设置为订阅标识符。可选地，还可以为其输入相应的描述信息。
        （4）默认情况下，转发事件日志会被选择为目标日志。如果需要将事件转发到专门用于事件收集的计算机，就可能需要将事件转发到其他目标日志。要注意的是，这样做时，应该确保所创建的查询只对该特定日志有效，以便降低其他可能的混淆。
        （5）事件收集计算机发起的事件转发是最容易配置的，也是缺省的设置。要制定将事件转发到服务器的计算机，单击"选择计算机"，在弹出的"计算机"对话框中，单击"添加域计算机"。在"选择计算机"对话框中，键入转发事件计算机的账号名，之后单击两次"确定"。如果需要，重复这一过程。
        （6）单击"选择事件"，这将弹出"查询筛选器"对话框。
        （7）使用事件级别检查复选框指定要包含的事件级别。选择"详细"，会获取更多的详细资料。
        （8）大多数情况下，你可能需要为单一日志或多个日志创建一个筛选器。为此，要确保"按日志"被选定，之后使用事件日志列表选择要过滤的单一或多个日志。
        （9）如果需要针对特定的事件源过滤选定的一个或多个日志，而不是针对所有事件源，则需要使用事件源列表来选择要包含的事件源。通过选定相应的复选框，可以选择多个事件源。要记住的是，选择某些特定的事件源后，所有其他事件源将被排除在外。另外，注意不要选择"按源"选项，因为这样会清楚所作的日志选定。
        （10）默认情况下，Windows Event Collector服务使用集中化事件收集计算机的机器帐号来读取源日志。要使用其他登录凭据，可以单击"高级"。在弹出的"高级订阅设置"对话框中，选择"特定用户"，单击"用户和密码"按钮。在"订阅源的凭据"对话框中，输入要使用账号的用户名与密码，单击两次"确定"。你可以以域\用户的格式来指定用户的登录域，比如cpandl\williams。
        （11）单击"确定"创建订阅，在创建了订阅并且选定的计算机开始转发事件后，就可以在目标日志中查看转发的事件。
        上面讲解了如何使用事件查看器创建订阅及其具体步骤，下面讲述如何在命令行中完成这些复杂的任务。通过使用表中的Wecutil命令，可以在集中化事件收集计算机上对订阅进行创建与管理。与Wevtutil命令一样，Wecutil命令也有完整的长格式与缩略的短格式。
            可用的Wecutil命令
            --------------------------------------------------------------------------
            长格式                       |短格式|描述
            -----------------------------|-----|--------------------------------------
            cnum-subscription            |Es   |列出计算机上现存的订阅
            get-subscription             |Gs   |显示订阅配置的详细资料
            get-subscriptionruntimestatus|Gr   |显示订阅运行时状态
            set-subscription             |Ss   |修改订阅配置
            create-subscription          |Cs   |创建新订阅
            delete-subscription          |Ds   |删除订阅
            retry-subscription           |Rs   |重试某订阅的所有源
            quick-config                 |Qc   |激活并配置Windows Event Collector服务
            --------------------------------------------------------------------------
        要创建订阅，可以使用Wecutil cs命令与XML配置文件。配置文件中包含了XPath查询，XPath查询定义了要转发的事件与源计算机，并为订阅分配了订阅标识符。使用事件查看器创建订阅时，事件收集计算机发起的事件转发是最容易配置的，也是默认的设置。
        通过在命令提示符中各使用wecutil cs/?命令，可以显示示例XML配置文件（可以将其复制与粘贴到文本编辑器）。XML配置文件具有类似于如下的格式：
            <Subscription xmlns="http://schems.microsoft.com/2006/03/windows/events/subscription">
                <Uri>http://schems.microsoft.com/wbem/wsman/1/windows/EventLog</Uri>
                <!-- Use Normal (default), Custom, MinLatency, MinBandwidth -->
                <ConfigurationMode>Normal</ConfigurationMode>
                <Description>Forward Sample Subscription</Description>
                <SubscriptionId>SampleSubscription</SubscriptionId>
                <Query><![CDATA[
                    <QueryList>
                        <Query Path="Application">
                            <Select>*</Select>
                        </Query>
                    </QueryList>
                ]]></Query>
                <EventSources>
                    <EventSource Enabled="true">
                        <Address>mySource.myDomain.com</Address>
                        <UserName>myUserName</UserName>
                        <Password>*</Password>
                    </EventSource>
                </EventSources>
                <CredentialsType>Default</CredentialsType>
                <Locale Language="EN-US"></Locale>
            </Subscription>
        在把XML配置文件复制并粘贴到文本编辑器中之后，就可以对其进行编辑。要编辑的关键字段包括描述、订阅标识符、XPath查询以及事件源。
        描述部分提供了订阅的一些通常的描述信息，有助于管理员了解订阅如何使用。描述信息是使用Description元素定于的，必要的时候，可以对<Description>与</Description>标签中国的描述文本进行修改。下面给出一个实例：
            <Description>Forwards important events from file servers</Description>
        订阅标识符用于唯一地标识集中化事件收集计算机上的订阅，使用SubscriptionId元素进行描述。必要的时候，可以对<SubscriptionId>与</SubscriptionId>标签中国的标识符进行修改，下面给出一个实例：
            <SubscriptionId>All File Servers</SubscriptionId>
        元素Query之间的QueryList元素定义了XPath查询，你可以向其中复制与粘贴任意现存的XPath查询（定义了事件日志筛选器）。不过，由于事件转发是实时进行的，你可能需要移除XPath查询中根据事件创建时间进行过滤的部分。
        与使用Wevtutil处理单条事件日志不同，通常希望创建单一的XPath查询来处理多个日志，因为这会降低需要创建的订阅数量。下面给出一个XPath查询实例，对应用程序日志，系统日志，DNS Server日志中的关键性事件、错误事件与警告事件进行过滤：
            <QueryList>
                <Query Id="0" Path="Application">
                    <Select Path="Application">*[System[(Level=1 or Level=2 or Level=3)]]
                    </Select>
                    <Select Path="System">*[System[(Level=1 or Level=2 or Level=3)]]
                    </Select>
                    <Select Path="DNS Server">*[System[(Level=1 or Level=2 or Level=3)]]
                    </Select>
                </Query>
            </QueryList>
        元素EventSources之间的单独EventSource元素用于定义不同的源计算机。每台将要转发事件（基于此前定义的XPath查询）的计算机必须由自己的EventSource元素进行描述，包括该计算机的完全限定域名或IP地址。下面的实例中，激活了Cpandl.com域内的FileServer24、FileServer26、FileServer28等计算机的事件转发功能：
            <EventSources>
                <EventSource Enabled="true">
                    <Address>fileseryer.cpandl.com</Address>
                </EventSource>
                <EventSource Enabled="true">
                    <Address>fileseryer26.cpandl.com</Address>
                </EventSource>
                <EventSource Enabled="true">
                    <Address>fileseryer28.cpandl.com</Address>
                </EventSource>
            </EventSources>
        默认情况下，Windows Event Collector服务使用集中化事件收集计算机的机器帐号来读取源日志。要使用其他登录凭据，必须提供必要的登录信息。为此，一种做法是将其作为EventSource元素的一部分，如下面实例所示：
            <EventSource Enabled="true">
                <Address>fileseryer24.cpandl.com</Address>
                <UserName>williams</UserName>
                <Password>*</Password>
            </EventSource>
        上面实例中，指定了为计算机FileServer24使用的登录凭据。由于口令指定为*，在创建订阅时，会遇到提示信息要求输入登录凭据，所提供的登录凭据会与该订阅进行关联并安全存储。
        （注解  在配置文件中定义其他登录凭据时，应该总是使用*作为口令，而不直接输入实际的口令。在配置文件中直接输入实际的口令是一种安全性较差的做法。）
        上面的实力配置文件中没有出现，但实际上被赋予默认值的元素包括下面6个。
        · ConfigurationMode。将事件传递优化方法设置为正常、最小化带宽或最小化滞后时间，包含在<ConfigurationMode>标签与</ConfigurationMode>标签之间。
        · DeliveryMode。将传输方法设置为Push模式或Pull模式（默认情况下是Pull），包含在begin<DeliveryMode>标签与end</DeliveryMode>标签之间。
        · ReadExistingEvents。用于指定是读取现存的事件还是只读取新事件，包含在begin<ReadExistingEvents>标签与end</ReadExistingEvents>标签之间。默认情况下，该元素取值为False，表示只读取新事件。
        · LogFile。用于指定事件将要转发的目标日志，包含在begin<LogFile>标签与end</LogFile>标签之间。指定日志名时，注意要去除日志名中的空格。比如，要指定日志Forwarded Events，就应该将引用为ForwardedEvents。
        · TransportName。用于指定使用的传输协议，或者为HTTP，或者为HTTPS，包含在begin<TransportName>标签与end</TransportName>标签之间。如果指定HTTPS作为传输协议，必须同时在源计算机上为HTTPS配置一个WinRM侦听程序。
        · TransportPort。指定使用的传输端口，包含在begin<TransportPort>标签与end</TransportPort>标签之间。要注意的是，这里指定的端口应该与源计算机上配置WinRM侦听程序时使用的端口相同。典型情况下，HTTP协议对应80端口，HTTPS协议对应443端口。
        示例8-1展示了一个用于Wecturil的配置文件，其中使用了上面讨论的元素与选项。
            示例8-1  用于Wecutil的配置文件
                <Subscription xmlns="http://schemsa.microsoft.com/2006/03/windows/events/subscription">
                    <Uri>http://schemas.microsoft.com/wbem/wsman/1/windows/EventLog</Uri>
                    <!-- Use Normal (default), Custom, MinLatency, MinBandwidth -->
                    <ConfigurationMode>Normal</ConfigurationMode>
                    <Description>Forwards events from file servers in the domain</Description>
                    <SubscriptionId>All Servers</SubscriptionId>
                    <DeliveryMode>Pull</DeliveryMode>
                    <ReadExistingEvents>False</ReadExistingEvents>
                    <LogFile>ForwardedEvents</LogFile>
                    <TransportName>HTTP</TransportName>
                    <TransportPort>443</TransportPort>
                    <QueryList>
                        <Query Id="0" Path="Application">
                            <Select Path="Application">*[System[(Level=1 or Level=2 or Level=3)]]</Select>
                            <Select Path="System">*[System[(Level=1 or Level=2 or Level=3)]]</Select>
                            <Select Path="DNS Server">*[System[(Level=1 or Level=2 or Level=3)]]</Select>
                        </Query>
                    </QueryList>
                    <EventSources>
                        <EventSource Enabled="true">
                            <Address>fileseryer24.cpandl.com</Address>
                        </EventSource>
                        <EventSource Enabled="true">
                            <Address>fileseryer26.cpandl.com</Address>
                        </EventSource>
                        <EventSource Enabled="true">
                            <Address>fileseryer28.cpandl.com</Address>
                        </EventSource>
                    </EventSources>
                    <CredentialsType>Default</CredentialsType>
                    <Locale Language="EN-US"></Locale>
                </Subscription>
        创建了XML配置文件之后，就可以以如下的语法格式使用Wecutil cs命令来创建订阅：
            wecutil cs ConfigFile
        其中，ConfigFile为当前目录中的配置文件名，或其他目录中配置文件的全文件路径。比如，如果需要使用文件c:\Evtforwarding\config1.xml来创建订阅，可以使用如下命令：
            wecutil cs c:\evtforwarding\config1.xml
        创建订阅时，可以指定共享的登录凭据，而不是必须使用/Cun与/Cup参数在配置文件中指定的登录凭据。/Cum参数用于设置用户名，/Cup参数用于设置口令，如下面实例所示：
            wecutil cs c:\evtforwarding\config1.xml /cun:cpandl\williams /cup:Rover

    8.2.3管理订阅
        创建了订阅并且选定的计算机开始转发事件之后，就可以在目标日志中看到转发的事件。在事件查看器中选择订阅节点，就可以看到所创建的订阅。根据名称、状态、类型、源计算机数量、目标日志、描述信息等不同属性，事件查看器列出了每一个订阅。单击并选中某个订阅之后，就可以使用操作面板或操作菜单中国的如下一些选项对其进行管理。
        · 属性。显示订阅属性对话框，通过该对话框，可以对订阅进行修改。可用的选项与前面讨论过的类似，但不能修改订阅名或类型。
        · 禁用。禁用该订阅，使得时间不再被转发或手机。选定后，订阅状态将改变为禁用。
        · 激活。激活该订阅，使得事件被转发或收集。选定后，订阅状态将改变为激活。
        · 运行时状态。显示订阅的运行时状态，包括该订阅是激活的还是禁用的，以及源计算机上是否出现了事件收集错误等信息。如果源计算机上出现了错误状态，就可以选定该条目查看进一步的详细资料。选定了该源计算机条目后，还可以选择禁用或激活该源计算机的事件转发功能。
        · 删除。永久性删除某订阅。
        Wecutil提供了用于完成这些任务的命令。要根据名称列出某计算机上所有订阅，可以在命令提示符中使用wecutil es命令。要列出某订阅配置详细资料，可以使用wecutil gs命令，其后跟随订阅名。如果订阅名中包含空格，则需要使用引号对其进行封装，比如：
            wecutil gs "All File Servers"
        输出信息如下所示，展示了该订阅的配置详细资料：
            Subscription Id： all servers
            SubscriptionType： CollectorInitiated
            Description： all servers in the domain
            Enabled: false
            Uri: http://schemas.microsoft.com/wbem/wsman/1/windows/EventLog
            ConfigurationMode: Normal
            DeliveryMaxLatencyTime: 900000
            HeartbeatInteval:  900000
            Query: <QueryList><Query Id="0"><Select Path="Application">* [System[(Level=1
            or
            Level=2 or Level=3)]]</Select><Select Path="System">* [System[(Level=1
            or Level=2
            or Level=3)]]</Select><Select Path="DNS Server">* [System[(Level=1 or
            Level=2
            or Level=3)]]</Select></Query></QueryList>
            ReadExistingEvents: false
            TransportName: HTTP
            TransportPort: 80
            ContentFormat: ReaderedText
            Locale: en-US
            LogFile: Microsoft-Windows-DateTimeControlPanel/Operational
            PublisherName:
            CredentialsType: Default

            EventSource[0]:
                Address: MAILSERVER84.cpandl.com
                Enabled: true
            EventSource[1]:
                Address: ROOMS.cpandl.com
                Enabled: true
        你可以使用Wecutil ss命令来修改订阅的设置。使用该命令时，你可以使用可用的参数来修改订阅的配置。然而，要修改订阅，最简单的方法是创建一个新的配置文件，或直接在原始的配置文件中进行修改，之后以如下语法格式运行Wecutil ss命令：
            wecutil ss SubscriptionName ConfigFile
        其中，SubscriptionName为订阅名，ConfigFile是当前目录中的配置文件名，或者其他目录中配置文件的全文件路径。比如，如果需要使用文件c:\Evtforwarding\config1.xml来创建订阅，可以使用如下命令：
            wecutil ss "All File Servers" c:\evtforwarding\config1.xml
        创建订阅时，可以指定共享的登录凭据，而不是必须使用/Cun与/Cup参数在配置文件中指定的登录凭据。/Cun参数用于设置用户名，/Cup参数用于设置口令，如下面实例所示：
            wecutil ss "All File Servers" c:\evtforwarding\config1.xml /cun:cpandl\williams /cup:Rover
        你也可以使用Wecutil ss命令来激活或禁用订阅，这分别是通过将/E参数设置为True与False实现的。比如，下面实例中，禁用了All File Servers这一订阅：
            wecutil ss “All File Servers” /e:false
        要获取某订阅的运行时状态，可以在命令提示符中输入wecutil gr命令，其后跟随订阅名。其输出信息提供了近期错误信息与每台源计算机上事件转发处于激活或禁用状态的详细资料，下面给出一个实例：
            Subscription: all servers
                RunTimeStatus: Disabled
                LastError: 0
                EventSources:
                    MAILSERVER84.cpandl.com
                        RunTimeStatus: Disabled
                        LastError: 0
                    ROOM5.cpandl.com
                        RunTimeStatus:Disabled
                        LastError: 0
        如果不再需要使用某订阅，就可以使用Wecutil ds命令对其进行永久性删除。在命令行中，输入wecutil ds，其后跟随要删除的订阅名，比如wecutil ds “all file servers”。
8.3性能日志
    Windows Vista与Windows Server 2008中使用了数据收集器集与报告。通过数据收集器集，可以指定需要追踪的性能对象集与计数器。创建了一个数据收集器集后，可以很方便地启动或终止对其中包含的性能对象与计数器的监控。在某种程度上，这使得数据收集器集类似于早起Windows版本中的性能日志。然而，实际上数据收集器集要比早起的性能日志复杂与灵活得多。
    8.3.1开始使用数据收集器集
        你可以创建并使用不同类型的数据收集器集，其类型包括下面5个。
        · 警报。此类型用于在特定事件发生或特定性能指标达到时通知用户。
        · API。此类型用于那些在与其相关的源提供者事件发生时记录数据的数据收集器。
        · 配置。此类型用于那些会记录特定注册表路径改变的数据收集器。
        · 性能计数器。比类型用于那些在预定义时间间隔达到后在选定的计数器上记录数据的数据收集器。
        · 跟踪。此类型用于那些在相关事件发生时记录性能数据的数据收集器。
        Windows Vista与Windows Server 2008使用事件踪迹来追踪大量不同类型的性能统计数据。有些事件跟踪在配置上与操作系统一起自动启动，这些事件跟踪称为启东事件跟踪。大多数时候，使用最广泛的两种类型数据收集器是性能计数器与警报，也是本节将要讲述的。
        在图形用户界面中，可以在可靠性和性能监视器中创建与管理数据收集器。在数据收集器集节点下，可以看到用户自定义数据收集器节点、系统定义的数据收集器节点、事件跟踪会话以及启动事件跟踪会话等节点。通过扩展这些节点，就可以查看事件收集器与跟踪的相关条目。
        在命令行中，你可以使用Logman命令来操作事件收集器。大多数情况下，这一命令需要一个增强的、管理员权限的命令提示符。通过键入logman或logman query命令，可以查看计算机上当前配置的数据收集器。成功执行后，会输出一个列表，其中包含了数据收集器的名称。类型与状态，如下面实例所示：
            Data Collector set             Type               Status
            -------------------------------------------------------------
            High CPU                       Alert              Started
            Memory Usage                   Alert              Stopped
        通过使用如下的语法格式，也可以在远程计算机上运行该命令：
            logman query -s RemoteComputer
        其中，RemoteComputer为待检查的远程计算机的主机名或IP地址。由于是否具备对该远程计算机的访问权限取决于当前用户登录凭据，因此，在使用该命令前，要确保是以具备对远程计算机适当访问权限的账号登录的。大多数请款修改，还需要在增强的命令提示符中运行该命令。
        要查看特定数据收集器的详细资料，可以输入logman query命令，其后跟随该数据收集器的名称。输出信息是一个详尽的列表，类似于如下的格式：
            Name:              cpu
            StatusP:           Stoped
            Root Path:         %systemdrive%\PerfLogs\Admin\CPU
            Segment:           Off
            Schedules:         On
            Run as:            SYSTEM

            Name:              cpu\DataCollector01
            Type:              Alert
            Sample Interval:   15 second(s)
            Event Log:         Off

            Thresholds:
                \Processor(_Total)\% Processor Time>98
    8.3.2操作数据收集器集
        使用可靠性和性能监视器时，通过鼠标右击某数据收集器，之后选择开始或停止，就可以开始或停止对该数据收集器的记录。在命令行中，可以使用Logman Start命令与Logman Stop命令来分别完成同样的任务。启动一个数据收集器的命令语法格式为：
            logman start CollectorName
        其中，CollectorName为要启动的数据收集器的名称，比如：
            logman start "General Activity Monitor"
        终止一个数据收集器的命令语法格式为：
            logman stop CollectorName
        其中，CollectorName要终止的数据收集器的名称，比如：
            logman stop "General Activity Monitor"
        在可靠性的性能监视器中，通过鼠标右击某数据收集器，之后选择保存模版，可以将某数据收集器保存为模版，并作为其他数据收集器的参照与基础。在另存为对话框中，选择一个目录，为该模版键入名称，之后单击“保存”。数据收集器模版是以XML文件格式保存的，可以复制到其他系统，也可以在创建新的数据收集器时使用。
        如果需要在命令行中将数据收集器设置导出到XML文件，可以以如下语法格式使用Logman export命令：
            logman export CollectorName -xml OutputFile
        其中，CollectorName是要使用的数据收集器名，OutputFile是数据收集器设置信息将要写入的XML文件名，比如：
            logman export "General Activity Monitor" -xml GeneralCollectorConfig.xml
        通过Logman import命令，就可以使用模版来导入并创建（或重建）数据收集器。其语法格式与导出命令类似，如下所示：
            logman import CollectorName -xml InputFile
        其中，CollectorName是要使用过的数据收集器名，InputFile是要独处数据收集器设置信息的XML文件名。使用-S参数，可以指定远程计算机。使用-U参数，可以指定要使用哪个用户的登录凭据。指定用户时，可以在用户名后跟随口令，也可以不输入口令或用*代替口令。这样会在具体使用时由系统给出提示信息要求输入口令，比前一种方式更具安全性。下面的实例中，在远程计算机（FileServer86）上使用帐号WilliamS导入数据收集器：
            logman import "General Activity Monitor" -xml GeneralCollectorConfig.xml -s FileServer86 -u Williams
        在可靠性和性能监视器中，如果需要删除用户定义的数据收集器，可以通过鼠标右击该数据收集器，之后选择“删除”即可。如果数据收集器处于运行状态，则需要先终止其运行，之后对其进行删除。删除收集器的同时也删除了与其相关的报告。
        在命令行中，可以使用Logman delete命令删除用户定义的数据收集器，其语法格式如下：
            logman delete CollectorName
        其中，CollectorName为要删除的数据收集器的名称，比如：
            logman delete "General Activity Monitor"
        对运行状态的数据收集器，在删除之前必须先终止它。
        通过使用-S参数，可以删除远程计算机上数据收集器。必要的时候，还可以使用-U参数指定可替代的登录凭据，其语法格式为：
            -u UserName Password
        其中，UserName是用于访问远程计算机的用户账号名，Password是该账号的口令（可选的）。
    8.3.3收集性能计数器数据
        在特定的示例时间间隔，你可以使用数据收集器来记录选定的计数器的性能数据。比如，可以每隔15分钟对CPU的性能数据进行一次采样。默认的记录位置是%SystemDrive%\PerfLogs\Admin，日志文件大小可以非常快速地增长。如果要长时间地记录某些性能数据，最好是把日志文件保存在空余存储空间较大的驱动器上。要记住的是，日志文件的更新越频繁，所占据的驱动器空间就越大，系统中CPU资源使用就越多。
        要收集性能计数器数据，需要遵循如下步骤。
        （1）在可靠性和性能监视器中的数据收集器节点下，鼠标右击左面板的“用户定义”节点，单击“新建”，之后选择“数据收集器集”。
        （2）在“创建新的数据收集器集”向导中，键入数据收集器名，比如General Activity Monitor。之后选择“手动创建（高级）”选项，单击“下一步”。
        （3）在“创建新的数据收集器集”页面，“创建数据日志”选项是默认选定的，选择“性能计数器”复选框，单击“下一步”。
        （4）在“创建新的数据收集器集”页面，单击“添加”。在弹出的“可用计数器”对话框中，选择要追踪的性能计数器，选取完毕后，单击“确定”。
        （5）在图8-4所示的“创建新的数据收集器集”页面中，键入示例间隔，并选择秒、分、小时、天、星期等时间计数单位。比如，如果选择每隔30秒进行一次采样，则事件日志每隔30秒进行一次更新。选取完毕后，单击“下一步”。
        （6）在“你希望将数据保存在什么位置？”页面，键入用于记录收集数据的文件根路径。也可以单击“浏览”，之后使用“浏览到文件夹”对话框来选择日志目录。完毕后，单击“下一步”。
        （7）在“创建新的数据收集器集”页面，“身份”对话框将<默认>作为用户，这意味着日志将以默认系统账号的特权与权限运行。如果需要以其他用户的特权与权限运行日志，单击“更改”，键入指定账号的用户名与密码，之后单击“确定”。用户名可以以域\用户格式输入，比如adatum\williams代表Adatum域内的WilliamS账号。
        （8）选择“保存并关闭”选项，单击“完成”。系统将保存数据收集器即，关闭向导，之后打开相关的属性对话框。
        （9）默认请款下该，事件收集是手工启动的。要对事件收集方式进行配置，单击“计划”选项卡，单击“添加”。之后可以设置活动的范围、开始时间以及事件收集的运行天数，如图所示。
        （10）默认情况下，只有在计划中设置了截止日期时，才会在条件达到时停止收集。使用“停止条件”选项卡中的选项，可以将时间收集配置为在经过指定的时间间隔（比如7天，或者在事件日志达到设定的最大值）后手工终止。
        （11）完成了对收集计划与停止条件的设置后，单击“确定”。你可以按照8.3.1节中的讲解对数据收集器进行管理。如果希望在数据收集结束时由Windows运行一个计划执行的任务，可以在“属性”对话框的“任务”选项卡中对任务进行配置。
        （12）在可靠性和性能监视器的左面板中，选择用于收集告警信息的数据收集器，之后选择“属性”。在“性能计数器”选项卡上，可以添加或移除性能计数器、设置示例间隔、指定最大示例数等。在“文件”选项卡上，可以设置示例文件名、格式以及日志模式（覆盖或附加）。完毕后，单击“确定”，保存所做的设置。
        在命令行中，可以使用Logman create counter命令创建用于记录性能数据的数据收集器，使用Logman update counter命令对其进行更新。从表8-4可以看出，两条命令有类似的可用参数集。对很多参数，可以使用多余的破折号来否定以前设置的值。比如，如果需要停用以前使用-U指定的登录凭据，就可以使用-U。
            Logman create counter命令与Logman update counter命令的参数
            ----------------------------------------------------------------------------------------------------------------------------------------------
            参数                                 |描述                                                                                           |可否逆选
            -------------------------------------|----------------------------------------------------------------------------------------------|----------
            -a                                   | 将输出附加到现存的日志文件                                                                     |是
            -b<mm/dd/yyyy h:mm:ss[AM|PM]>        |对数据收集器进行调度，使其在特定的时间开始                                                        |
            -c<path [path[...]]>                 |标识要收集的性能计数器（在未使用计数器文件时）                                                    |
            -cf<filename>                        |标识计数器文件，其中包含了要收集的性能计数器（每个计数器一行）                                      |
            -cnf<[[hh:]mm:]:ss>                  |当指定的时间间隔已到，或日志文件达到最大值时，创建一个新文件                                        |是
            -config<filename>                    |创建设置文件，其中包含了命令选项                                                                  |
            -e<mm/dd/yyyy h:mm:ss[AM|PM]>        |对数据收集器进行调度，使其在指定的时间终止                                                         |
            -f<bin|bincirc|csv|tsv|sql>          |为日志文件设置输出格式                                                                           |
            -m<[start][stop][[start][stop][...]]>|将自动启动或终止改变为手工启动或终止                                                              |
            -max<value>                          |以MB为计数单位设置日志文件最大值，或SQL日志中记录数                                                |是
            -o<path|dsn!log>                     |指定输出日志文件的路径，或SQL数据库中的DSN与日志集名                                               |
            -ow                                  |重写现存的日志文件                                                                               |是
            -r                                   |每天会在指定的时间段内重复执行数据收集器                                                           |是
            -rc<command>                         |每次日志关闭时运行指定的命令                                                                      |是
            -rf<[[hh:]mm:]:ss>                   |为数据收集器设定运行持续时间                                                                      |
            -s<computer>                         |在指定的远程计算机上执行命令                                                                      |
            -sc<value>                           |设定要手机的示例的最大值                                                                          |
            -si<[[hh:]mm]:ss>                    |设定要性能计数器的示例间隔                                                                         |
            -u<user>[<password>]                 |为远程计算机设置时登录用户名以及口令（可选的）。如果没有设定口令，在实际应用中会遇到要求输入口令的提示信息|是
            -v<nnnnnn|mmddhhmm>                  |为日志名结尾添加版本信息                                                                           |是
            -y                                   |对所有提示信息应答“是”，从而不会再遇到提示信息                                                       |
            -------------------------------------------------------------------------------------------------------------------------------------------------
        使用Logman create counter命令为性能计数器创建数据收集器的最简单的方式是使用如下的语法格式：
            logman create counter DataCollectorName -c Counter
        其中，DataCollectorName是为数据收集器设置的唯一名称，Counter设置了相对计数器路径，相对计数器路径是与6.5.2节所讨论的绝对计数器路径不同的。在相对计数器路径中，并没有具体指定是哪一台计算机，这也是称其为相对路径的原因。
        如第7章中所阐述的，性能计数器使用相对路径，其语法格式为：
            \ObjectName\ObjectCounter
        其中，ObjectName为计数器对象名，ObjectCounter为操作的对象计数器。为此，如果需要创建一个数据收集器来追踪可用的内存计数器，可以使用如下命令：
            logman create counter MemCounterCollector -c "\memory\available mbytes"
        上面的命令创建了数据收集器，但Logman并不启动计数器。你或者可以像前面讨论的手工启动或终止计数器，或者对其进行调度，使其在当前日期与时间滞后的某个时间段内运行。下面的实例中，在2009年6月15日5：30P.M.启动该计数器，直至2009年6月17日9：30P.M.终止该计数器：
            logman create counter MemCounterCollector -c "\memory\available mbytes" -b 06/15/2009 05:30PM -e 06/17/2009 09:30PM
        如果设置了错误的启动时间与终止时间，可以使用Logman counter update命令来修改数据收集器的设置。如果只设置了启动时间而没有设置终止时间，则该数据收集器会一直运行下去。如果设置了终止时间，则必须设置启动时间。要注意的是，如果启动时间在设置上早于当前时间，则数据收集器不会自动启动。
        如果没有设置示例间隔或示例的最大值，则数据收集器会每隔15秒进行一次采样，并且一直持续进行。通过-Si参数，可以设置示例间隔，-Sc参数则用于对示例数量进行计数。下面的实例创建了一个新的计数器，并将示例间隔设置为10分钟，将示例最大值设置为1000：
            logman create counter MemCounterCollector -c "\memory\available mbytes" -si 00:10:00 -sc 1000
        下面的实例对现存的计数器进行了修改，将示例间隔设置为1小时，将最大示例数设置为10000：
            logman update counter MemCounterCollector -si 01:00:00 -sc 10000
        通过-Cf参数，可以指定计数器文件，其中包含想要从其中收集数据的计数器列表。在计数器文件中，每个计数器应该在单独的一行。示例8-2中，展示了如何通过Logman create counter命令操作计数器文件。在该实例中，计数器文件存在于当前目录，但也可以通过全文件路径来指定处在其他目录下的计数器文件。
            示例8-2收集性能数据
                Command line :
                logman create counter GenPerformanceDataColloctor -cf collector.txt -b 06/15/2009 05:30PM -e 06/17/2009 09:30PM -si 00:10:00 -sc 1000
                Source for Collector.txt
                \memory\% Committed Bytes In Use
                \memory\Available MBytes
                \memory\Cache Bytes
                \memory\Cache Bytes Peak
                \memory\Committed Bytes
                \memory\Commit Limit
                \memory\Page Faults/sec
                \memory\Pool Nonpaged Bytes
                \memory\Pool Paged Bytes
    8.3.4配置性能计数器警报
        你可以配置警报，以便在特定事件发生或特定的性能指标达到是得到必要的通知。你可以将这些警报作为事件发送到应用程序事件日志，或者将这些警报配置为用于启动任务与性能日志。
        要对警报进行配置，应该遵循如下步骤。
        （1）在可靠性和性能监视器中的数据收集器集节点下，鼠标右击左面板的"用户定义"节点，单击"新建"，之后选择"数据收集器集"。
        （2）在"创建新的数据收集器集"向导中，键入数据收集器名，比如Processor Usage Alert。之后选择手工创建（"高级"）选项，单击"下一步"。
        （3）在"创建新的数据收集器集"页面，选择"性能计数器警报"选项，单击"下一步"。
        （4）在"创建新的数据收集器集"页面，单击"添加计数器"对话框，使用"添加计数器"对话框来添加计数器并触发警报。完毕后，单击"确定"。
        （5）在性能计数器面板，选择第一个计数器，之后使用警报条件这一文本框来设置该计数器警报的触发条件。警报触发的时机可能是计数器大于或小于某个特定值，选择大于或小于条件，之后设置触发值。计数单位则取决于对当前选定的计数器是否有效。比如，如果设置为在处理器时间超过98%时产生告警，则应该选中"大于"，键入98.对其他计数器，重复这一过程。
        （6）在"创建新数据收集器集"页面上，身份文本框将<默认>作为用户，表示警报以默认系统账号的权限运行。如果希望以其他用户的权限运行告警，单击"更改"，键入指定账号的用户名与密码，之后单击"确定"。用户名可以以域\用户的格式输入，比如，对Adatum域的WilliamS账号，可以输入adatum\williams。
        （7）选择"打开该数据收集器集的属性"选项，之后单击"完成"。这将保存数据收集器集，关闭向导，并打开相关的属性对话框。
        （8）默认请款修改，警报是自动启动的。要在选定的性能计数器上为警报设置时间间隔，可以单击"计划"选项卡，单击"添加"。之后就可以设置活动的范围、开始时间以及警报的运行天数。
        （9）默认情况下，只有在计划中设置了截止日期时，才会在条件达到时停止警报。使用"停止条件"选项卡中的选项，可以将事件收集配置为在经过指定的时间间隔（比如7天，或者在事件日志达到设定的最大值）后手工终止。
        （10）完成了对报警计划与停止条件的设置后，单击"确定"。你可以按照8.3.1节中的讲解来对数据收集器进行管理。
        （11）在"可靠性和性能监视器"中，在左面板上选择用于手机告警信息的数据收集器，鼠标右击收集器并选择"属性"。在"警报"选项卡上，可以根据需要配置用于告警的性能计数器。
        （12）在"警告操作"选项卡上，选择"将项记入应用程序事件日志（L）"复选框将警告写入到应用程序事件日志。如果希望在警告触发时启动其他数据收集器，可以使用"启动数据收集器集"列表来选择该数据收集器。
        （13）在"警报任务"选项卡上，可以选择在某报警触发时要运行的Windows Management Instrumentation（WMI）任务，并指定任务启动时需要传递的参数。
        （14）完成设置后，单击"确定"。
        在命令行中，可以使用Logman create alert命令来创建用于性能警告的数据收集器，并使用Logman update alert命令来更新数据收集器的设置。如表8-5中所总结的，这两条命令有类似的参数集，对很多参数，可以使用多余的破折号来否定以前设置的值。比如如果需要停止向应用程序日志写入告警时间，可以使用-El。
            表8-5Logman create alert命令与Logman update alert命令的参数
                ---------------------------------------------------------------------------------------------------------------------------------------------------
                参数                                  |描述                                                                                      |可否逆选？
                --------------------------------------|------------------------------------------------------------------------------------------|------------------
                -a                                    |将输出附加到现存的日志文件                                                                  |是
                -b<mm/dd/yyyy h:mm:ss[AM|PM]>         |对数据收集器进行调度，使其在特定的时间开始                                                    |
                -cnf<[[hh:]mm:]ss>                    |当指定的时间间隔已到，或日志文件达到最大值时，创建一个新文件                                    |是
                -config<filename>                     |创建设置文件，其中包含了命令选项                                                              |
                -e<mm/dd/yyyy H:mm:ss[AM|PM]>         |对数据收集器进行调度，使其在指定的时间终止                                                     |
                -el                                   |激活事件日志报告                                                                             |是
                -m<[start][stop][[start][stop][...]]> |将自动启动或终止改变为手工启动或终止                                                           |
                -max<value>                           |以MB为计数单位设置日志文件最大值，或SQL日志中记录数                                             |是
                -o<path|dsn!log>                      |指定输出日志文件的路径，或SQL数据库中的DSN与日志集名                                            |
                -ow                                   |重写现存的日志文件                                                                            |是
                -r                                    |每天会在指定的时间段内重复执行数据收集器                                                        |是
                -rc<command>                          |每次日志关闭时运行指定的命令                                                                   |是
                -rdcs<collector>                      |标识某告警触发时运行的数据收集器                                                                |是
                -rf<[[hh:]mm:]ss>                     |为数据收集器设定运行时间                                                                        |
                -s<computer>                          |在指定的远程计算机上执行命令                                                                    |
                -si<[[hh:]mm:]ss>                     |设定性能计数器的示例间隔                                                                        |
                -targ                                 |标识在某告警触发时传递给要运行的任务的参数                                                        |是
                -th<path>thr[<path>thr[...]]          |标识要收集的性能计数器与告警阀值，使用<表示在小于某个值时触发告警，>表示在大于某个值时触发告警         |
                -tn<task>                             |标识在警报触发是运行的任务                                                                       |是
                -u<user>[<password>]                  |为远程计算机设置登录用户名以及口令（可选的）。如果没有设定口令，在实际应用中会遇到要求输入口令的提示信息|是
                -v<nnnnnn|mmddhhmm>                   |为日志名结尾添加版本信息                                                                         |是
                -y                                    |对所有提示信息应答"是"，从而不会再遇到提示信息                                                     |
                -----------------------------------------------------------------------------------------------------------------------------------------------------
        为性能警报创建数据收集器的基本语法是：
            logman create alert DataCollectorName -th Counter>Thresholds
        其中，DataCollectorName是为数据收集器设置的唯一性的名称，Counter用于设置相对计数器路径，Threshold则设置了告警阀值。进行阀值设置时，使用<表示在低于某个阀值时产生告警，>则表示在大于某个阀值是产生告警。比如，如果需要在处理器使用率超过98%时产生告警，就可以使用如下命令：
            logman create alert ProcessorAlert -th "\Processor(_Total)\% Processor Time>98"
        如果需要在可用内存小于64M时产生告警，则可以使用如下命令：
            logman create alert LowMemAlert -th "\Memory\Available Mbytes<64"
        通过-Th参数，可以指定多条告警。下面的实例中，只需要使用空格将告警分隔开：
            logman create alert CoreAlerts -th "\Processor(_Total)\% "

第11章  对基本磁盘进行分区

安装新计算机或现有计算机进行升级时，通常需要对计算机上的硬盘驱动器进行分区。DiskPart可以使用主引导记录（MBR）或GUID分区表（GPT）这两种分区风格。使用MBR时，磁盘驱动器最多可以包含4个主分区，或3个主分区与1个扩展分区。在Windows Vista与Windows Server 2008上使用GPT时，可引导磁盘或系统磁盘上必须包含两个分区，即EFI系统分区与微软保留分区。此外，还可以包含1个或多个可选的OEM分区与数据分区，分区总量最多可达128个。

11.1获取分区信息
    使用DiskPart时，可以使用LIST PARTITION命令获取选定磁盘的分区信息。如下面实例所示，LIST PARTITION列出了选定磁盘上所有分区的信息。比如，如果键入select disk 2，之后键入list partition，就可以看到disk 2上分区列表：
        Partition ###    Type    Size    Offset    
        -------------    ----    ----    ------    
        Partition 1      Primary 706 MB  32 KB     
        Partition 2      Primary 706 MB  706 MB
        Partition 3      Primary 706 MB  1412 MB  
        Partition 4      Extended1004 MB 2118 MB   
        Partition 5      Logical 502 MB  2118 MB    
        Partition 6      Logical 502 MB  2620 MB    
    （注解  输出信息中响应条目前的星号表示该分区是当前选定的分区，焦点放置在其上。）
    从输出信息中可以看出，LIST PARTITION命令会展示如下一些要素。
    · Partition ###。分区编号，可以使用select partition n来选中并操作某个分区。
    · Type。布局类型，分区布局包括主要分区、扩展分区与逻辑分区。
    · Size。分区的总容量。
    · Offset。该分区的字节偏移量，总是在最近的柱面边界附近。
    （注解  柱面是分区中某个磁盘驱动器的一部分，柱面进一步划分为磁道，磁道进一步划分为扇区，扇区划分为字节，字节是磁盘中进行数据存储的最小单位。比如，一个4GB大小的磁盘可以包含525个柱面，每个柱面可以包含255个磁盘，每个磁盘可以包含63个扇区，每个扇区包含512个字节。本例中，柱面大小为8MB，因此，分区的字节偏移量重视在8MB上下，但磁盘上的第一个扇区是一个例外情况，该扇区以第一个可用煮面的头部开始。）
11.2创建分区
    在基本磁盘上创建分区的方式取决于分区风格，鉴于在MBR磁盘与GPT磁盘创建分区的类型不一样，下面将对在MBR磁盘与GPT磁盘创建分区分别进行讲述。
    11.2.1在MBR磁盘上创建分区
        对于MBR磁盘，可以使用DiskPart创建主分区与扩展分区。主分区可以占据整个磁盘，也可以根据需要设定合适的大小。每个物理驱动器可以包含一个扩展分区，扩展分区可以包含1个或多个逻辑驱动器，逻辑驱动器实际上是带有自身文件系统的分区部分。尽管你可以根据需要对逻辑驱动器大小进行设置，但也要考虑在当前工作站或服务器上如何使用逻辑驱动器。通常，使用逻辑驱动器的一个目标是将容量非常大的物理驱动器划分为便于管理的几个部分。根据这一出发点，可以将60GB的扩展分区划分为3个大小分别为20GB的逻辑驱动器。
        1.创建主分区
            在向磁盘上添加主分区之前，应该对磁盘上的空闲空间总量进行评估，并检查当前的分区配置。要创建主分区，可以遵循如下步骤。
            （1）在命令提示符中键入diskpart，调用DiskPart。
            （2）键入命令list disk，列出计算机上的磁盘，并检查空闲空间：
                Disk ###    Status    Size    Free    Dyn    gpt    
                --------    ------    ----    ----    ---    ---   
                Disk 0      Online    56 GB   0 B 
                Disk 1      Online    29 GB   0 B 
                Disk 2      Online    37 GB   37 GB   
            (3)本例中，disk 2有37GB的空闲空间可用于分区，该磁盘上尚无分区，因为磁盘容量也是37GB。如果磁盘容量与空闲空间大小不一致，则说明有一部分磁盘空间已经分配给了某个分区。如果需要操作disk 2，可以键入select disk 2命令来选定该磁盘，并使用list partition命令查看其上的分区。
            选定了某磁盘并将焦点防止到其上后，可以通过如下命令创建主分区：
                create partition primary size=n 
            其中，n为以MB为计数单位的空间大小。如果没有指定空间大小，则该分区将占据磁盘上所有未分配空间。
            （注解  本例中，分区是在磁盘上第一块空闲空间的起始处创建的。DiskPart会通过将偏移量参数设置为合适的值来自动做到这一点。要记住的重要一点是，偏移量是根据最近的柱面边界计算的。该值会根据与最近的煮面边界协调的原则调整，这有可能会改变分区或逻辑驱动器的最终大小。）
            （提示  对于RAID逻辑单元数（LUN）阵列，你可能需要将卷或分区的所有起始点与最近的对其边界对其，来提高性能。要做到这一点，可以使用Align参数，其语法格式为align=n。其中，n为从磁盘起始处到最近的对其边界的KB数，比如align=64。）
            创建分区之后，焦点将自动地放置到其上，表示该分区已被选定，但该分区尚无盘符或挂载点，必须使用ASSIGN命令进行分配。要完成最后的创建工作，还必须使用FORMAT命令对其进行格式化。要了解更多信息，参阅11.3与11.4等节。
        2.在扩展分区上创建逻辑驱动器
            每个磁盘驱动器可以包含一个扩展分区。与创建主分区类似，在向磁盘扩展分区之前，应该对磁盘上的空闲空间总量进行评估，并检查当前的分区配置。之后，可以在选定的磁盘（焦点放置到其上）上的未分配空间上创建扩展分区，使用如下命令：
                create partition extended size=n 
            其中，n为以MB为计数单位的空间大小。如果没有指定空间大小，则该分区将占据磁盘上所有未分配空间。 
            创建扩展分区之后，焦点将自动地放置到其上，表示该分区已被选定。与创建主分区不同的是，不要直接对扩展分区进行盘符指定或格式化，而是在其上创建逻辑驱动器，之后对这些逻辑驱动器进行盘符指定或格式化。
            要在扩展分区内创建逻辑驱动器，可以使用如下命令：
                create partition logical size=n 
            其中，n为以MB为计数单位的空间大小。如果没有指定空间大小，则该分区将占据扩展分区上所有未分配空间。指定逻辑驱动器大小时，要记住内所有逻辑驱动器大小的总量要小于扩展分区总量。这也是为什么在第10章，在创建了4096MB的扩展分区后，又在该分区内分别创建了2048MB与2047MB逻辑驱动器的原因。
            创建逻辑驱动器之后，焦点将自动地放置到其上，但该分区尚无盘符或挂载点，必须使用ASSIGN命令进行分配。要完成最后的创建工作，还必须使用FORMAT命令对其进行格式化。
    11.2.2在GPT磁盘上创建分区
        在GPT磁盘上，可以创建如下类型的分区。
        · EFI系统分区（ESP）。
        · 微软保留分区（MSR）。
        · 主分区。
        · 逻辑磁盘管理（LDM）元数据分区。
        · LDM数据分区。 
        · OEM或未知分区。
        与MBR磁盘类似，在GPT磁盘上创建分区之前，应该对磁盘上空闲空间总量进行评估，并检查当前分区配置。选定了要操作的磁盘并将焦点放置到其上之后，就可以创建需要的分区。
        1.创建EFI系统分区
            带有EFI系统分区的计算机必须包含GPT磁盘（其中包含ESP），这一分区与X86计算机上的系统卷类似，因为此分区内包含了启动操作系统所必需的文件。Windows Server 2008在安装时会创建ESP，使用FAT对其进行格式化，并指定其大小，最小值为100MB，或者为磁盘大小的1%（最大不超过1000MB）。
            在用于加载操作系统的磁盘上，EFI系统分区应该是第1个分区，MSR应该是第2个分区。在非系统磁盘上，由于不用于启动操作系统的GPT磁盘不包含EFI系统分区，因此MSR应该是第1个分区。
            通常，在带有EFI的计算机上安装Windows Server 2008时，ESP是自动创建的。但也有些情况下，在服务器上安装另外的GPT磁盘后，需要手动创建ESP。比如，使用新磁盘作为系统引导设备，而不再使用原有的引导设备时。
            使用如下命令可以创建EFI系统分区：
                create partition efi size=n 
            其中，n为以MB为计数单位的空间大小。创建EFI之后，焦点将自动地被放置到其上，表示该分区已被选定。刚创建的分区尚未指定盘符与挂载点，但对EFI分区与数据分区来将这事需要指定的。要完成EFI的创建，还必须对其进行格式化。通常，EFI分区格式化为FAT格式。
            DiskPart可以自动设置偏移量参数，以便标记EFI系统分区。大多数场景下，不应该手动设置偏移量参数。EFI的全局唯一标识符（GUID）如下：
                c12a7328-f81f-11d2-ba4b-00a0c93ec93b
            （真实场景  如果由于某些原因，GUID没有设置或设置错误，则可以使用SETID命令来正确标记分区，并将其重建位MSR分区。基于这种做法存在导致计算机失败或无法启动的风险，只有经验丰富并且对GPT磁盘有深刻理解的管理员才可以尝试使用SETID命令，进一步地说，使用SETID应该是不得已而为之的一种方法，比如，无法使用CREATE PARTITION MSR命令创建MSR分区。此外，SETID无法用于动态磁盘，只能由OEM使用。最后，要记住DiskPart不会对GUID进行检测以确保其有效性。）
        2.创建微软保留分区
            带有EFI的每个GPT磁盘上都必须包含一个MSR分区。MSR分区包含了操作系统在指定磁盘操作时所需的额外空间。比如，在将基本磁盘转换为GPT磁盘时，Windows操作系统需要使用MSR分区的1MB空间来创建LDM元数据分区，以便转换时使用。
            Windows操作系统会自动创建MSR分区，对引导磁盘，MSR分区是在安装操作系统时与ESP一起创建的。在磁盘由MBR转换为GPT，或者访问尚未包含MSR分区的GPT磁盘时，都会自动创建MSR分区。
            如果GPT磁盘包含了ESP，并将其作为磁盘上的第1个分区，则MSR分区通常就是磁盘上第2个分区；如果GPT磁盘尚未包含ESP，则MSR分区通常就是磁盘上第1个分区；如果磁盘起始处包含了一个主分区，则MSR分区应该放置在磁盘尾部。
            MSR分区的大小需要根据磁盘大小进行设置，对最大16GB的磁盘，MSR分区大小通常为32MB。对其他磁盘，MSR分区通常为128MB。
            使用如下命令可以创建MSR分区：
                create partition msr size=n 
            其中，n为以MB为计数单位的空间大小。创建EFI之后，焦点将自动地放置到其上，表示该分区已被选定。刚创建的分区尚未指定盘符与挂载点。Windows不会挂载MSR分区，你也无法在它上面存储数据或删除该分区。进一步地，你也不需要格式化MSR分区，Windows可以直接使用该分区。
            DiskPart可以自动设置偏移量参数，来标记MSR分区。大多数场景下，不应该手动设置偏移量参数。EFI的全局唯一标识符（GUID）如下：
                e3c9e316-0b5c-4db8-f92df00215ae
        3.创建主分区
            在基本磁盘上，可以创建主分区以便存储数据。GPT磁盘支持最多128个分区，其中包含必需的分区与可选的分区。创建的每个主分区都会在GPT头部的GUID分区条目阵列中呈现。如果将包含主分区的基本磁盘转换为动态磁盘，则主分区会变为简单卷，关于这些卷的信息将存储在动态磁盘数据库中，而不再存储于GUID分区条目阵列中。
            使用如下明星可以创建主分区：
                create partition primary size=n 
            其中，n为以MB为计数单位的空间大小。创建主分区之后，焦点将自动地放置到其上，表示该分区已被选定。刚创建的分区尚未指定盘符与挂载点，但对主分区来讲是需要指定的。要完成主分区的创建，还必须使用支持的文件系统对其进行格式化，比如FAT32或NTFS。
            DiskPart可以自动设置偏移量参数，来标记主分区。大多数场景下，不应该手动设置偏移量参数。EFI的全局唯一标识符（GUID）如下：
                ebd0a0a2-b9e5-4433-87c0-68b6b72699c7
        4.创建LDM元数据分区与数据分区
            在将基本的GPT磁盘转换为动态GPT磁盘时，Windows会创建LDM元数据分区与LDM数据分区。LDM元数据分区大小为1MB，用于存储转换操作时所需数据，LDM数据分区用于存储转换时创建的动态卷。
            LDM数据分区包含了转换后磁盘上未分配的磁盘空间部分与动态卷（由原来的基本基本分区转换而来）。比如，如果磁盘包含了一个占据整个磁盘的主引导分区，则转换后的磁盘应该只包含一个LDM数据分区。如果磁盘包含一个引导分区与其他主分区，则转换后将包含两个LDM数据分区（一个用于引导卷，另一个用于其他所有分区）。此外，尽管LDM元数据分区与LDM数据分区不需要盘符与挂载点，但你也可以通过创建主分区（采用上面讲述的方法）来使用这一块磁盘空间。
            动态磁盘上LDM元数据分区的GUID为：
                5808c8aa-7e8f-42e0-85d2-e1e90434cfb3
            动态磁盘上LDM数据分区的GUID为： 
                af9b60a0-1431:4f62-bc68-3311714a69ad
11.3管理盘符与挂载点
    在对驱动器进行分区后，可以为每个分区分配一个盘符或挂载点，之后对其进行格式化，完成这些工作后，这些分区就可以用于数据存储等用途。通常，可用的盘符从E到Z，A到D一般已经在使用中。在很多系统上，盘符A代表软盘驱动器，盘符B为可移动磁盘驱动器保留，盘符C代表主要的磁盘驱动器，盘符D则通常代表CD-ROM或DVD驱动器。
    如果需要更多的分区，可以使用挂载点来创建，并将磁盘挂载到文件系统路径，比如c:\Data。对驱动器路径唯一的限制因素是必须将其挂载到NTFS驱动器上的空文件夹。
    11.3.1分配驱动器盘符或挂载点
        要分配盘符或挂载点，可以遵循如下步骤。
        （1）在命令提示符中键入diskpart，调用DiskPart。 
        （2）键入list volume命令，列出计算机上当前存在的卷及其盘符分配情况。
        （注解  只有LIST VOLUME命令可以展示盘符与挂载点分配情况，对计算机上所有分区、逻辑驱动器与卷，该命令都是有效的。这也是为什么使用本命令而不使用LIST PARTITION命令的原因。似乎不完全合乎逻辑，但实际上确实如此。此外，在动态磁盘上为卷分配盘符与挂载点时，这一点也是适用的。）
        （3）遵照如下方式，分别分配盘符或挂载点。
        · 要分配盘符，键入assign letter=x，其中，x是要使用的盘符，比如：
            DISKPART> assign letter=f 
        · 要分配挂载点，键入assign mount=Path，其中，Path是要用作挂载点的空NTFS文件夹的路径，比如：
            DISKPART> assign mount=c:\data 
        11.3.2改变驱动器盘符或挂载点
            ASSIGN命令也可以用于改变现有的盘符与挂载点分配信息，其方法与分配盘符类似，也是选定要操作的分区，之后使用ASSIGN为其分配新盘符。之后，DISKPART会改变盘符或挂载点，并要求重新引导计算机，以便所做的修改生效：
                DiskPart assigned the drive letter, but your computer needs to be rebooted 
                    before the changes take effect.
            对修改挂载点的情况，DiskPart会报告已经进行了修改，但并不要求重新引导计算机：
                DiskPart successfully assigned the drive letter or mount point.
        11.3.3移除盘符或挂载点
            对当前焦点所在分区，可以移除盘符或挂载点，这是通过使用REMOVE命令并遵循如下步骤实现的。
            （1）在命令提示符中键入diskpart，调用DiskPart。
            （2）键入list volume命令，列出计算机上当前存在的卷及其盘符分配情况。记住，只有LIST VOLUME命令可以展示盘符与挂载点分配情况，对计算机上所有分区、逻辑驱动器与卷，该命令都是有效的。
            （3）键入select volume命令，其后跟随代表指定分区的卷号。这看起来似乎不合逻辑，但这确实是最简单有效的方法。
            （4）键入remove命令，移除选定分区上当前盘符或挂载点。
            输入remove命令而不指定任何参数时，会移除其所遇到的第一个盘符或挂载点，并报告如下信息：
                DiskPart successfully removed the drive letter or mount point.
            在分区中只包含一个驱动器或挂载点，上面的方法是有效的。如果分区中包含多个盘符或挂载点，就需要具体制定待移除的盘符与挂载点，分别为letter=x与mount=Path，比如： 
                DISKPART> remove letter=d 
                或
                DISKPART> remove mount=D:\Data 
            你也可以移除所有盘符与挂载点，并且指令DiskPart在完成所有移除工作后关闭该卷的所有开放句柄，并卸载该卷。要完成这些任务，可以使用All参数与Dismount参数，如下面一些实例所示。
                移除所有盘符与挂载点：
                    DISKPART> remove all 
                移除所有盘符与挂载点，之后卸载相关卷：
                    DISKPART> remove all dismount 
                移除挂载为d:的卷并卸载该卷：
                    DISKPART> remove letter=d dismount
            （注解  在MBR磁盘上，不能析出系统分区或引导分区（以及任何包含了活跃页面文件或崩溃转储（内存转出）的分区）上的盘符；在GPT磁盘上，不能移除EFI、OEM、未识别分区或非数据分区上的盘符，但可以移除可移动驱动器上的盘符。）
11.4格式化分区
    格式化的作用是在分区上创建文件系统，并永久删除其上现存的数据。Windows Vista与Windows Server 2008支持的磁盘文件系统包括FAT、FAT32、NTFS。其中，FAT是MS-DOS以及早期Windows支持的文件系统，FAT32是FAT的32位版，NTFS则是Windows NT、Windows 2000、Windows XP、Windows Vista、Windows Server 2003、Windows Server 2008支持的本原文件系统类型。
    Windows Vista SP1及其后续版本与Windows Server 2008都支持热插拔的存储介质（使用exFAT卷与NTFS卷）。也就是说，对可移动存储设备，可以有更多的格式化类型。比如，可以将USB闪存设备与类似存储介质格式化为exFAT、FAT16、FAT32、NTFS。exFAT文件系统是FAT系列的下一代文件系统类型，其设计目标是可以在任意相容的操作系统或设备中使用。
    11.4.1使用FORMAT
        与早期的发布版不同的是，Windows Vista与Windows Server 2008中的DiskPart支持一个内部的FORMAT命令。也就是说，在使用DiskPart时，可以对焦点所在分区进行格式化，而不需要退出该工具。实际上，如果键入format，而不提供任何附加参数，则选定的分区会自动进行格式化（使用默认的文件系统与分配单元大小）。然而，典型情况下，并不希望使用默认值进行格式化，而是要指定所需要的格式化参数。DiskPart FORMAT命令的基本语法格式如下：
            format fs=FileSystem label=Label unit=UnitSize 
        其中，FileSystem设置了要格式化的文件系统类型，Label设置了描述性的文本名，unitSize则设置了格式化时每一次盘的分配单元大小（以字节计数）。磁盘簇是由512字节大小的连续扇区所组成的磁盘的一小部分，卷标号是驱动器的文本描述符，适用于驱动器盘符，不适用于挂载点。如果不设置分配单元大小，FORMAT会根据卷实际大小进行选择。有效的分配单元大小包括下面几个。
        · 512。每簇设置为512字节大小。
        · 1024。每簇设置为1024字节大小。
        · 2048。每簇设置为2048字节大小。
        · 4096。每簇设置为4096字节大小。
        · 8192。每簇设置为8192字节大小。
        · 16K。每簇设置为16K字节大小。
        · 32K。每簇设置为32K字节大小。
        · 64K。每簇设置为64K字节大小。
        要了解如何使用FORMAT命令，参考如下一些实例。
        使用FAT32文件系统格式化特定的卷，并将其标记为AppData：
            format fs=fat32 label=AppData 
        使用NTFS文件系统格式化选定的卷，并将磁盘簇大小设置为512字节：
            format fs=ntfs unit=512
        使用NTFS文件系统格式化选定的卷，并将其标记为AppData：
            format fs=ntfs label=AppData 
        （警告  如果卷上有现存的文件系统，FORMAT并不会弹出提示信息。因此，在选择卷时需要慎重，否则会损毁其上所有现存数据。）
        有些情况下，你可能需要在格式化某个卷之前卸载它，这可以通过Override参数实现。此外，如果操作的是一个以前进行过格式化并且不存在已知问题的卷，还可以使用Quick参数对其进行快速格式化，而不是彻底格式化。通过快速格式化，FORMAT不需要进行错误检测工作。对大型磁盘，快速格式化会节省一些时间，但不能标记处磁盘的坏扇区并将其隔离。
        FORMAT运行时，默认情况下，会显示其格式化进度。通过Nowait参数，你可以在格式化进行过程中强制该命令立即返回。但对于DiskPart控制下的卷，只有在格式化完成后，才能对其进行操作。
        DiskPart的FORMAT命令提供了其他几个有用的参数，包括Compress、Revision、Recommended。Compress参数用于将NTFS卷标记为压缩的，表示该卷上创建文件将使用NTFS压缩功能进行压缩；Revision参数用于将文件系统修订设置为可用的与必要的，比如在格式化CD/DVD介质并希望使用统一磁盘格式（UDF）的特定版本时；Recommended参数用于设置推荐的文件系统类型与修订，而不是使用默认值。
    11.4.2使用FILESYSTEMS
        准备格式化磁盘时，你可以使用FILESYSTEMS命令来显示选定卷上当前文件系统以及该卷支持的文件系统类型。参考如下实例输出：
            Current File System 

            Type          :FAT32 
            Allocation Unit Size : 32K 

            File Systems Supported for Formatting

            Type          : NTFS 
            Allocation Unit Sizes : 512, 1024, 2048, 4096(Default), 8192, 16K, 32K, 64K 

            Type          :FAT 
            Allocation Unit Sizes : 512, 1024, 2048, 4096, 8192, 16K, 32K, 64K(Default)

            Type          :FAT32(Default)
            Allocation Unit Sizes : 512, 1024, 2048, 4096, 8192, 16K, 32K(Default), 64K 
        本实例中，当前文件系统类型为FAT32，分配单元大小为32KB。对该卷，可以使用FAT、FAT32、NTFS等文件系统类型进行格式化，分配单元大小则可以设置为上面列出的任意值。如果采用FAT，默认的分配单元大小为64KB；如果采用FAT32，默认的分配单元大小为32KB；如果采用NTFS，默认的分配单元大小为4096字节。
        Windows Vista SP1及其后续版本与Windows Server 2008中，对大多数类型的可移动存储设备，exFAT被作为一种附加的格式化选项，而标准的FAT（FAT 12/16）则不再作为一个可用的选项。下面给出的是对可移动存储设备使用FILESYSTEMS命令时获取的输出：
            Current File System 

            Type                     : FAT32 
            Allocation Unit Size     : 4096

            File Systems Supported for Formatting 

            Type                     : NTFS 
            Allocation Unit Sizes    : 512, 1024, 4096(Default), 8192, 16K, 32K, 64K 

            Type                     : FAT32(Default)
            Allocation Unit Sizes    : 512, 1024, 2048, 4096(Default), 8192, 16K, 32K, 64K 

            Type                     : exFAT
            Allocation Unit Sizes    : 512, 1024, 2048, 4096, 8192, 16K, 32K(Default), 64K, 128K, 256K, 1024K, 2048K, 4096K, 8192K, 16384K, 32768K
        Windows Vista SP1及其后续版本与Windows Server 2008中，可以使用DiskPart来格式化空白的CD与DVD，下面给出的是对空白DVD使用FILESYSTEMS命令时获取的输出：
            Current File System 

            Type                  : RAW 
            Allocation Unit Size  : 2048 
            File Systems Supported for Formatting 

            Type                  : UDF [Revision 1.50]
            Allocation Unit Sizes : 2048(Default)

            Type                  : UDF [Revision 2.00]
            Allocation Unit Sizes : 2048(Default)

            Type                  : UDF [Revision 2.01](Default)
            Allocation Unit Sizes : 2048(Default)

            Type                  : UDF [Rsvision 2.50]
            Allocation Unit Sizes : 2048(Default)
        在这一实例中，类型RAW表示该介质尚未格式化。进行格式化后，会发现文件系统类型变为UDF。UDF已经取代了以前使用的CD文件系统（CDFS），尽管你也可以继续使用CDFS，但UDF有很多优势。UDF是一种新兴的文件系统，其操作与使用其他类型的可移动存储类型，比如USB闪存或移动硬盘。你可以直接向其上复制数据--复制与粘贴（或者选中并拖放），而不需要进行刻录等操作。如果磁盘是可重复刻录的，还可以直接选中并删除文件。从系统中移除磁盘后，还可以根据需要再将其插入到CD/DVD驱动器中，就像可移动存储器一样使用。另外，尽管兼容的计算机都可以读取UDF磁盘，但大多数家庭和汽车上的CD/DVD播放器还不能读取UDF磁盘。
        Windows Vista与Windows Server 2008支持的UDF版本如下。
        · UDF 1.50。一种与Windows 2000及其后续Windows版本兼容的格式，但可能与Windows 98以及苹果机不兼容。
        · UDF 2.00。一种与Windows XP及其后续Windows版本兼容的格式，但可能与Windows 98、Windows 2000以及苹果计算机不兼容。
        · UDF 2.01。默认格式，包含了大多数场景下你所需要利用的重要更新，与Windows XP及其后续Windows版本兼容，但可能与Windows 98、Windows 2000以及苹果计算机不兼容。
        · UDF 2.50。Windows Vista中优化的格式，可能与Windows早起版本与苹果机不兼容。
        在对空白的CD/DVD进行格式化时，可以使用Revision参数来设置需要的UDF版本。要记住必须使用单引号或双引号将版本号包含起来，如下面一些实例所示：
            format fs=udf revision='1.50'
            format fs=udf revision='2.00'
            format fs=udf revision='2.01'
            format fs=udf revision='2.50'
        你应该总是使用上面所示的完整的版本标识符。
    11.4.3格式化：一个实例
        你可以使用FORMAT命令对焦点所在卷进行格式化，遵循如下步骤。
        （1）在命令提示符中键入diskpart，调用DiskPart。 
        （2）使用list volume命令列出计算机上可用卷，注意每个卷的类型、状态与文件系统。分区的卷类型为Partition，可移动存储设备的卷类型为Removable，CD设备的卷类型为CD-ROM，CD/DVD设备卷类型为DVD-ROM。如果尚未向可移动存储设备或CD、DVD驱动器中插入存储介质，则卷状态一般会报告为没有介质。
        （3）键入select volume命令，其后跟随卷的标号，选择要操作的卷。如果此时再次键入list volume命令，其后带有星号的卷就是所选择的卷。在继续下一步之前，进行这种确认是有意义的。
        （4）键入format命令，其后跟随需要的参数与参数值，比如format fs=ntfs label='secondary data' unit=4096
            接下来，DiskPart会展示格式化进程。格式化完毕后，其输出信息类似于如下：
                “全部完成DiskPart成功格式化卷。”
            如果格式化过程中发生错误导致DiskPart无法完成格式化，则会报告如下的错误信息：
                “DiskPart遇到意外错误。检查系统时间日志获取关于失败的更多信息。”
            发生错误的原因可能有多种，你可以使用FILESYSTEMS命令确认文件系统设置是否正确。有些情况下，可能需要使用OVERRIDE，以便在格式化之前强制卸载该卷。
11.5管理分区
    常见的分区管理任务包括将FAT与FAT32分区转换为NTFS、修改卷标、收缩分区、扩展分区、删除分区等，本节将对这些分区管理任务进行讨论。
    11.5.1将分区或卷转换为NTFS
        如果使用FAT与FAT32创建了分区或卷，则可以直接将其转换为NTFS格式，而不需要再进行格式化。所带来的好处是原有的文件与目录结构得以完整保留，没有数据丢失。要进行这种转换，可以在命令行中使用CONVERT命令。（注意，DiskPart CONVERT命令用于完全不同的目标。）
        1.转换：预检查
            在实际使用CONVERT命令之前，应该进行如下一些操作。
            · 对分区进行检查，判断其是否当前正被用作包含操作系统的活跃的引导分区或系统分区。对MBR磁盘上的系统，可以将活跃的引导分区转换为NTFS。但这样做的前提是CONVERT对该分区具有排他性的访问权限，这种权限只有在系统启动时才可以具备。因此，在将活跃的引导分区或系统分区转换为NTFS时，会看到提示信息询问是否在系统下次重启时进行转换。如果选择“是”，就可以在下次重启时开始转换过程。此外，要完全转换活跃的引导分区，通常需要几次重启。
            · 检查硬盘驱动器是否具备足够的空闲空间进行转换。要进行转换，需要一块大小约为该分区或卷使用总空间大小25%的空闲空间。比如，如果300GB的分区存储了200GB的数据，则CONVERT需要大约500GB的空闲空间。在运行之前，CONVERT会检查空闲空间大小，并且在没有足够空闲空间时停止运行。
            （警告  没有可以将NTFS转换为FAT的工具。将NTFS转换为FAT或FAT32的唯一途径是删除该分区或卷，之后将其重新创建为FAT或FAT32卷。）
        2.进行基本转换
            CONVERT命令是在命令提示符中运行的。如果需要对硬盘驱动器格式进行转换，可以使用如下的语法格式：
                convert volume /FS:NTFS 
            其中，volume为卷标识符，其后跟随分号、驱动器路径或卷名。比如，如果需要将D盘转换为NTFS格式，可以使用如下命令：
                convert d:/FS:NTFS 
            （提示  对由FAT或FAT32转换我NTFS格式的卷，主文件表（MFT）的创建位置与直接用NTFS进行格式化的卷中所在的位置是不同的，这会导致性能的下降。为对性能进行优化，你可以使用一块指定的转换区域，下面会对其进行讨论。）
            在转换后的引导卷与系统卷上，CONVERT应用同样的默认安全设置（Windows安装时使用过的设置）。在其他卷上，CONVERT需要对安全策略进行适当设置，以便Users组具备对其的访问权限，但不会对Everyone组进行授权。如果需要Everyone组成员访问磁盘上的数据，可以使用/NoSecurity参数删除其上的安全设置，比如：
                convert d: /FS:NTFS /noscrurity
            （警告  /NoSecurity参数会删除所有安全属性，使得该磁盘上的所有问价与目录都可以被Everyone组成员访问。）
            CONVERT命令还有几个附加的参数。比如，你可以使用verbose开关（/V参数），用来在转换时获取更为详尽的信息。你也可以使用dismount开关（/X参数），用来在转换之前强制性地卸载分区或卷（如果必须）。在转换之前卸载驱动器的主要原因是确保在分区转换过程中没有应用程序或进程对其进行访问，但不能下载引导盘或系统盘，这些驱动器只能在系统下次重启时进行转换。
            对大多数类型的磁盘，基本转换过程都可以起到良好的作用。但有些时候，基本转换过程不能提供理想的结果。比如，转换之后，磁盘性能降低而不是增强。要克服基本转换过程存在的不足，可以使用/CvtArea参数，该参数的作用将根目录中临近文件的文件名设置为NTFS系统文件的占位符。
        3.使用/CvtArea参数
            理想情况下，对
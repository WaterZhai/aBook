第2章   充分利用命令行

命令shell提供了一个功能强大的环境，使得管理员可以使用命令与脚本完成很多工作。如第1章中所述，可以在命令行中运行很多类型的命令，包括系统内置的命令、Windows工具以及带有命令行扩展的应用程序。每一个运行的命令都遵循同样的语法规则，而不论其出处。这些规则要求命令行中运行的每一个命令都由命令名开始，其后跟随着必须的或可选的参数。在参数中还可以使用重定向方法指定输入源、输出目标以及错误日志。
在命令shell中执行命令时，实际上涉及如下一些活动。
（1）命令shell使用实际值（实参）来替换用户在命令文本中输入的变量（形参）。
（2）在单一命令行中结成命令链（或分组）并传递的多条命令被分解为单独的命令，每条命令带有自己的命令名与参数，并按序分别进行处理。
（3）如果命令名带有文件路径，则命令shell将使用这一路径找到该命令，如果在指定位置找不到该命令，则命令shell将返回错误信息。
（4）如果命令名没有指定文件路径，则命令shell会尝试对该命令名进行内部解析。如果可以找到匹配项，则说明该命令是一条内置命令，可以立即执行。如果找不到匹配项，则命令shell会在当前目录下查找该命令的可执行文件，之后搜索该可执行文件的命令路径。如果所有这些位置都无法找到该命令，则命令shell会返回错误信息。
（5）如果命令成功定位，则该命令会使用制定的参数运行，包括那些要求输入的参数。命令输出与错误信息将会回显到命令窗口，或者写入到存出输出信息与错误日志的位置。
从上面可以看出，很多因素都可以影响命令的执行过程，包括命令路径设置、使用的重定向技术，以及多条命令是否构成一个命令链或分组等。本章将根据这些因素对命令的执行过程进行分解，以便帮助读者最充分地利用命令行来高效完成自己的工作。不过再进行这些分解讨论之前，我们先来看一下启动命令shell的一些衡量要素，并介绍嵌套命令shell的概念。

2.1管理命令shell的启动方式
    在以前使用命令行工作时，你启动命令提示符的方式

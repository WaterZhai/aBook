第9章  计划任务的自动运行

作为管理员，每天都会重复执行一些相同或相似的任务。其中某些任务有时候还不得不提前或推迟到非工作时间进行。其中一些任务可能是例行的维护活动，比如删除临时文件（以免磁盘空间耗尽），或者备份重要数据等。另外一些任务肯恩故事比较繁琐的过程，比如，在所有交易服务器上搜索事件日志，以便发现需要解决的问题。幸运的是，如果将这些任务分解为一系列步骤，就可以自动执行这些任务，Windows提供了下面两种实现方法。
· Schtasks。一个高级命令行工具，可根据计划来运行命令、脚本以及程序。你可以根据实际需要对任务进行计划，使其只运行一次，每分钟运行一次，在特定的时间间隔后运行（比如每小时、每天、每星期、每月运行一次），在系统启动时运行，在登录时运行或在系统空闲时运行。
· 任务计划程序。一个图形界面工具，可根据调度计划来运行命令、脚本以及程序。任务计划程序与Schtask执行同样的操作，二者可以一起使用，也可以分别管理或执行另外一款工具创建的任务。

Schtask命令与任务计划程序可以互换使用，本章讨论如何使用这两款工具来自动运行程序、命令行工具与脚本。大多数情况下，你会发现，同时理解这两款工具是有用的，即便有时候可以通过任务计划程序单击与选择，但你也可以使用命令行开完成同样的任务。

9.1在本地与远程系统上执行计划任务
    在命令行中运行的一切对象都可以配置为计划任务，包括命令行工具、脚本、应用程序、快捷方式、文档等，也可以在其中指定命令行参数。有些时候，你可以需要在当前登录的本地系统上进行这些任务计划与配置，但更常见的情况是从本地系统对网络中的远程系统进行这些操作。
    9.1.1计划任务简介
        本地系统与远程系统上的计划任务都是通过Task Schedule服务激活的，对于需要在其上执行计划任务的任意系统，都必须首先启动该服务。默认情况下，Task Scheduler服务以本地系统帐号登录系统，该账号通常不具备执行管理型任务的许可权限。为此，对要计划执行的每一个任务，都应该对其进行适当配置，使用具有适当权限的账号运行相应任务。此外，对需要在其上执行计划任务的所有系统，要确保Task Scheduler服务配置为自动启动。再次强调，必须对Task Scheduler服务的启动方式与登录帐号选项进行正确配置。
        你可以使用任务计划程序控制台来查看并操作计划任务。要访问任务计划程序，可以依次单击“开始”、“管理工具”、“任务计划程序”。任意用户都可以在本地计算机上设置计划任务，并根据需要对其进行查看与修改。管理员可以在本地计算机上计划、查看、修改必备该远程计算机上管理员组成员的身份，或者在遇到提示信息时提供管理员登录凭据。
        在任务计划程序中，任务技术程序库包含了计算机上定义的所有任务。与以前的Windows版本不同的是，Windows Vista与Windows Server 2008都广泛地使用了计划任务，很多任务在第一次安装操作系统是就已经自动创建。安装角色、角色服务、功能以及应用程序时，这些组件也可能创建额外的任务。在图中，任务计划程序库展示了如下一些要素。
        · 名称。表示任务名，在形式上可以是任意字符串。与任务的其他属性一样，任务名可以在创建时设置。
        · 状态。表示任务当前状态。“正在运行”表示任务计划程序已启动该任务，该任务正在运行中。“准备就绪”表示该任务已激活，准备就诸，并等待触发。“禁用”表示该任务被禁用，不再运行。“失败”表示该任务由于某些故障无法启动。
        · 触发器。列出了与该任务相关联的触发器。
        · 下次运行时间。表示该任务下次将要运行的日期与时间。Never表示该任务在调度运行的时间过后不会再次运行，这种情况通常是一次性任务。
        · 上次运行结果。表示退出错误代码。为0时表示没有发生错误，其他数值表示了某种类型的错误。
        · 创建者。表示创建该任务的用户名。
        · 创建时间。表示该任务创建的日期与时间。
        Windows Vista与Windows Server 2008中包含两种通常意义的任务类型。
        · 标准任务。自动执行的例行任务，执行日常的维护操作。这些任务对用户可见，并可以在必须时进行修改。
        · 隐藏的任务。自动执行的特定系统任务。默认情况下，这些任务对用户不可见，大多数时候也不应该进行修改。有些隐含任务是通过相关程序进行创建与管理的，比如Windows Defender。
        （注解  在任务计划程序的“查看”菜单中，选择“显示隐藏的任务”，可以显示隐藏的任务。）
        在任务计划程序库中，Microsoft\Windows下与Microsoft\Windows Defender下的任务为系统任务。Microsoft\Windows下的任务主要用于完成计算机上很多后台的维护操作，MIcrosoft\Windows Defender下的任务则用于自动扫描恶意软件。Windows Defender是Windows Vista中默认使用的恶意软件扫描工具，在Windows Server 2008中，通过安装桌面体验功能，也可以将该工具添加到系统中。
        尽管可以在任务计划程序库中的任一层次创建任务，但大多数情况下是在其顶层进行任务创建，为做到这一点，创建任务时，可以选择任务计划程序节点而非其他低层节点。
        如果需要对任务进行组织，可以在任务计划程序库中创建文件夹。这些文件夹在形式上称为任务计划程序库层级结构中的节点，并充当任务容器的角色。在大型企业网络中，甚至可以在任务计划程序库中刚创建子层结构。通过如下步骤，可以创建文件夹，使其包含自己的任务。
        （1）在任务计划程序中，选择用于包含文件夹的顶层节点。比如，如果希望文件夹成为任务计划程序库节点的子节点，则可以选择该节点。
        （2）在“操作”菜单或“操作”面板中，选择“新文件夹”。在弹出的对话框中，为该文件夹输入一个唯一的名字，之后单击“确定”。
        在Windows Vista与Windows Server 2008中，任务计划程序是与操作系统中实现的Windows安全模型完全整合在一起的。定义任务时，需要指定运行该任务的用户账号。默认情况下，任务以用户账号的标准权限运行。如果任务需要更高的权限，而又不希望Windows阻止其运行并显示用户账号控制提示，就需要在定义任务时指定Windows总是使用最高权限运行该任务。以用户账号的最高权限运行时，任务计划程序会弹出提示要求输入该用户账号的口令，之后，该口令会被安全地存储在系统中。
        （注解  在修订后的任务计划程序中，微软改变了任务使用用户登录凭据的方式。以前，如果某用户帐号的口令进行了修改，就需要对使用该用户账号的任务设置进行修改。在Windows Vista与Windows Server 2008中，如果任务只访问本地资源，则不需要再用户口令改变后进行任务相关的口令更新。口令更改不会影响任务，任务可以继续运行。如果任务访问外部资源，则需要在用户账号口令改变之后，对使用该账号的任务相关口令设置进行更新。）
        任务包含了很多属性，主要包括下面5个。
        · 触发器。指定了任务开始与结束的环境。
        · 操作。定义了任务启动时执行的操作。
        · 条件。限定了任务启动与终止的条件。
        · 设置。影响人物的行为。
        · 记录。展示了任务运行或尝试运行时生成的事件。
        与以前的Windows版本中的计划任务不同的是，在Windows Vista与Windows Server 2008中可以为任务指定不止一个触发器与动作。这意味着，每个计划任务可以运行多个程序、工具或脚本，也可以被配置为以多种方式运行，包括下面4种。
        · 在特定的时间与日期运行，比如，在2009年10月25日的下午5:45运行。
        · 在指定的时间间隔运行，比如，在每个星期一、星期三、星期五的下午5:45运行。
        · 在特定系统事件发生时运行，比如，在某用户登录系统时运行。
        以上面几个运行条件的任意合理组合运行，或以其他未列出的方式运行。
        在任务的相关属性中，任务触发器应该引起特别的关注，因为他们并不总是能按预期的那样工作，任务触发器包括下面5个。
        · 系统启动。如果将计划任务设置为在系统启动时运行，则任务计划程序会在系统每次启动时自动运行该任务（而不需要用户的交互），并一直运行到任务完成、任务被终止，或者系统关机。要记住的是，只有任务的属主或管理员才可以终止运行中的任务。
        · 系统登录。如果需要将计划任务设置为在某用户登录系统时运行，则可以对其进行配置，使其在任意用户登录系统时运行（而不管是哪个用户对其进行配置），或者只有在某个指定的用户登录系统时运行。经过这样配置并启动后，任务计划程序会一直运行该任务，直至该任务完成。任务被终止，或者该用户退出登录。这种方式运行的任务可以是交互式的，也可以是非交互式的，取决于其具体配置方式。
        （提示  如果某用户使用自己的登录凭据配置了一个交互式的任务，但其他用户登录了系统，则该任务仍然会以其创建者的许可权限运行，并且在其他用户退出登录时并不会终止运行（因为该任务有其创建者拥有，其他用户不具备权限终止其运行）。进一步地，使用快速用户切换时，登录型任务并不会在用户切换后运行，只有在某用户登录而其他用户都退出登录时才运行。）
        · 系统空闲。如果将计划任务设置为在系统空闲时运行，则任务计划程序会在某个时间间隔之内没有任何用户活动后执行该任务。比如，你可以创建一个任务，使其在系统空闲5分钟之后运行。要记住的是，后续的用户活动并不会终止该任务。该任务会一直运行，直至任务完成或被终止。
        · Windows事件。如果将计划任务设置为在特定Windows事件发生时运行，则任务计划程序会在Windows将带有指定标识符的事件写入到特定事件日志时运行该任务。在基本的配置中，可以指定一个单独的时间标识符、一个可选的事件源以及要进行监控的单一事件日志。在自定义配置中，可以定义一个事件过滤器，并像前面章节中讲述的那样对其进行操作，可以实现对多个日志、多个事件源以及两者相结合的多种事件类型的监控。
        · 用户会话。如果将计划任务设置为某用户建立了一个终端服务用户会话时运行，则任务计划程序会在用户从本地或远程系统建立连接、创建用户会话时运行该任务。你也可以将计划任务设置为在用户终止来自本地或远程系统额终端服务会话时运行。
        尽管可以为任务定义多个操作，但实际上也可以在任务启动时创建一个命令行脚本，使其运行多个命令、程序与工具，以便执行其他任务。你可能需要该脚本以特定用户或管理员的登录凭据运行，以便保证该脚本有必要的许可权限与访问权限。该脚本还应该配置其他必须的用户设置，以便确保所做的一切操作都在其可控范围之内。此外，域用户设置，比如驱动器映射，在必要的时候也是可用的。
        （真实场景  配置任务的运行方式时，可以指定该任务运行时使用的用户账号与登录口令。对于递归的任务，这种做法会导致问题，尤其是在许可权限与口令变更是更是如此，而这种变更通常是难以避免的，如果账号许可权限或口令发生变更，而某些任务又需要对远程资源进行操作，则至少需要对使用这些登录凭据的一个任务的属性进行编辑，并为该账号提供新的登录凭据。）
    9.1.2监控计划任务
        任务计划程序不会对用户提供的信息进行验证，也不会对程序、命令、工具的可用性进行验证。如果提供了错误的信息，则任务只是不能运行或者运行时出错。如果需要对任务进行检查，有一种方法是在任务计划程序中查看任务状态以及上次的运行结果，这些信息是任务上次运行生成的。如果上次运行结果为错误信息，就需要解决存在的问题，以便任务可以正常运行。通过单击任务在任务计划程序中国的入口，就可以对其属性进行查看与编辑。
        列为正在运行状态的任务实际上也可能并未运行，而是一个失去响应的或失控的进程。你可以使用上次运行时间来检查失去响应的或失控的进程，该值用于表明任务的启动时间。如果检查结果表明该任务已运行超过一天，则很可能存在需要纠正的问题。如果是脚本，则可能在等待输入信息，或者读写文件存在问题，也可能是一个需要终止的进程。要终止任务，可以在任务计划程序中右击该任务，之后选择“结束”。
        然而，上次运行结果并不能表明上一次运行该任务之前是否发生过问题。要深入挖掘并透彻理解任务的运行历史，你应该定期检查任务计划程序的运行日志。在事件查看器中，该日志存储于Applications And Services Logs\Microsoft\Windows\TaksScheduler\Operational。对任务计划程序日志进行检查时，会发现如下一些信息。
        · 记录了Task Scheduler服务启动与退出（终止）的时间。
        · 记录了任务启动、完成运行的时间，以及退出错误代码或结果代码。取值为0时意味着任务正常运行和终止，其他值都表示了发生了某种错误。
        · 记录了任务计划程序启动任务时产生的告警与错误消息。
        （提示  在命令行中，任务计划程序操作日志的引用名为\MicrosoftWindows-TaskScheduler/Operational。默认情况下，该日志存储在%SystemRoot%\System32\Winevt\Logs文件夹下，名为Microsoft-Windows-TaskScheduler/Operational.evtx。通过使用第6章、第8章中讨论的技术，可以像对其他日志一样操作这一日志。）
        任务计划程序中包含了操作日志的自定义过滤视图。选定了任务计划程序中的任务计划程序节点后，主面板分为几个子面板，包括任务状态子面板与活动任务子面板。通过任务状态面板中的选项，可以查看不同时间间隔内（最近1个小时、最近24个小时、最近7天、最近30天）所有计划任务的状态摘要。通过活动任务面板，可以查看运行中任务的摘要信息。通过双击一个运行中的任务，就可以访问任务计划程序库中的任务定义。
        选定了任务计划程序中的任务定义之后，单击“记录”选项卡，就可以查看任务计划程序操作日志的筛选后的视图，其中包含了与该任务相关的事件。如果选中其中一个特定的事件，就可以在下一级面板中看到该事件的详细信息。
        脚本运行时，如果需要对所发生的事件有更详尽的理解，可以将命令与工具的输出信息记录到单独的日志问价中，之后可以通过该日志文件分析那些命令与工具是否生成了预期中的结果。通过对标准输出与标准错误输出的重定向，可以将命令输出信息写入到指定的文件。下面的实例中，DEFRAG命令的输出信息以及错误信息被以添加模式写入到Stat-log.txt。
            defrag c: >> c:\logs\stat-log.txt 2>&1
            defrag d: >> c:\logs\stat-log.txt 2>&1
        （警告  像这些实例中那样操作目录时，目录本身必须是存在的。如果不存在，系统并不会自动创建该目录，由于目录不存在导致的错误也不会写入到日志文件。）
        （真实场景  将命令输出信息写入到日志文件并不能帮你解决可能发生的每一个问题，但对于了解任务是否按预期进行还是很有用的。如果需要对问题进行故障排除，要记住的是，导致任务失败的原因有很多，其中有些原因超出了可控范围。比如，如果在计划任务的执行时刻系统关机了，则任务自然无法运行。如果需要保证任务在错过了调度的开始时间后仍能运行，可以在任务的属性对话框的“设置”选项卡选择“如果过了计划开始操作，立即启动任务”，激活这一功能后，如果因为系统关机导致错误了计划任务的开始时间，则Windows会尽可能快地运行该任务。）
9.2使用任务计划程序计划任务
    你可以使用任务计划程序创建基本任务与高级任务。基本任务包括触发器与操作，用于快速设置常见的计划任务。高级任务包括触发器、操作、条件、设置，主要提供给高级用户或管理员使用。
    9.2.1创建基本任务
        基本任务包含很多默认的设置，易于创建。默认情况下，某用户创建的基本任务以该用户的登录账号运行，并且只有在该用户登录的情况下才运行。这些任务以标准用户权限运行，而不会以最高权限运行。处于对兼容性的考虑，这些任务在配置上同时兼容Windows Vista与Windows Server 2008.此外，这些任务只有在计算机处于AC电源模式下才会启动，当计算机切换到电池组模式时会终止运行。另外一种情况是，基本任务运行超过3天后会终止运行。
        通过完成如下步骤，可以创建一个基本任务。
        （1）依次单击“开始”、“管理工具”、“任务计划程序”，启动任务计划程序。如果需要查看远程计算机上的日志。在控制台树（左面板）上鼠标右击任务计划程序入口，选择“连接到另一台计算机”。之后，在“选择计算机”对话框中，输入想要访问的计算机的主机名或IP地址，单击“确定”。
        （2）在任务计划程序库中的任一层次，都可以创建基本任务。其方法是：右击需要存储待创建任务的节点，选择“创建基本任务”，之后将启动“创建基本任务”向导。
        （3）在图中所示的“创建基本任务向导”页面，为待创建任务键入任务名及其描述信息。任务名应该简短而富于描述性，以便根据名称确定其功能。可选的描述信息中可以对该任务的功能目标进行详尽的解释。完毕后，单击“下一步”。
        （4）在“任务触发器”页面，为该任务选择运行方式。你可以将该计划任务设置为只运行一次，周期性运行（每天、每星期，或每个月运行一次），计算机启动时发生特定事件后运行，该任务的创建者登录时运行。完毕后，单击“下一步”，之后的向导页面依赖于所选择的任务调度时间与方式。
        （5）如果步骤（4）中将计划任务设置为每天运行一次，则会出现“每日”页面。在该页面中，可以通过如下字段对该任务进行配置。
        · 开始。该选项用于设置任务的启动日期与时间。
        · 通用时间。该选项根据格林尼治平均时间（GMT）来对任务进行调度，而非根据本地时间。GMT是英国伦敦格林尼治时区，子午线时间。
        · 每隔。该选项用于将计划任务设置为每天运行、每隔一天运行或每隔n天运行，开始时间则根据具体设置。比如，如果希望该任务每隔一天运行一次，就可以将“每隔······天发生一次”文本框设置为2天。
        上述配置完成后，单击“下一步”。
        （6）如果步骤（4）中将计划任务设置为每周运行一次，则会出现“每周”页面。在该页面中，可以通过如下字段对该任务进行泪痣。
        · 开始。该选项用于设置任务的启动日期与时间。
        · 通用时间。该选项根据格林尼治时间（GMT）来对任务进行计划，而非根据本地时间。
        · 每隔。该选项用于将计划任务设置为每星期运行。每隔一星期运行或每隔n星期运行。
        · 每周的哪几天。设置该任务在每星期的具体运行时间，比如星期二，或星期二与星期五。
        （7）如果步骤（4）中将计划任务设置为每个月运行一次，则会出现“每月”页面。在该页面中，可以通过如下字段对该任务进行配置。
        · 开始。该选项用于设置任务的启动日期与时间。
        · 月。该选项列表中可以选择任务具体在哪个月份运行，可以选择所有月份，也可以一个或几个月份。
        · 天。设置该任务在每个月的具体运行时间。比如，如果选择2与8，则任务会在该月份的第2天与第8天运行。
        · 在。设置该任务在某个月份的第几天出现，比如，在该月份的第2个星期一，或该月份的第1个鱼第3个星期二运行。
        （8）如果步骤（4）中将计划任务设置为只运行一次，则会出现“一次”页面。在该页面中，使用开始选项设置该任务的开始日期与时间，之后单击“下一步”。
        （9）如果在步骤（4）中将计划任务设置为登录特定事件时运行，则会出现“登录特定事件时”页面。在该页面中，需要选择要监控的事件日志与特定事件源、事件ID等，选择完毕后，单击“下一步”。
        （10）如果在步骤（4）中将计划任务设置为“当前用户登录时”或“计算机启动时”，单击“下一步”，之后会出现“操作”页面。
        （11）在“操作”页面，指定要执行的任务。其形式有多种，包括启动程序、发送电子邮件、显示消息等。单击“下一步”后，出现的页面依赖于本步骤中选择的操作。
        （12）如果在步骤（11）中选择了“发送电子邮件”，则该向导会显示“启动程序”页面。单击“浏览”显示“打开”对话框，之后选择要运行的程序或脚本，单击“下一步”。
        （13）如果在步骤（11）中选择了“发送电子邮件”，则该向导会显示“发送电子邮件”页面。在电子邮件表单中，填充电子邮件消息的发件人、收件人、主题、正文等字段，就可以实现对电子邮件自动发送的配置。在SMTP服务器文本对话框中，输入用于传输电子邮件的邮件服务器的完全限定域名，单击“下一步”。
        （14）如果在步骤（11）中选择了“显示消息”，则该向导会显示“显示消息”页面。在其中更可以对消息进行配置，使其在任务启动时显示于桌面。在文本框中，输入消息标题与内容，单击“下一步”。
        （15）在摘要页面，查看任务相关的详细资料，确认后单击“完成”按钮。任务创建后，通过其属性对话框，可以修改基本任务的默认设置。
    9.2.2创建高级任务
        对高级任务，可以直接在与任务的标准属性对话框类似的对话框中进行设置。高级任务有一些与基本任务类似的默认的初始设置。
        通过完成如下步骤，可以创建一个高级任务。
        （1）依次单击“开始”、“管理工具”、“任务计划程序”，启动任务计划程序。如果需要查看远程计算机上的日志，在控制台树（左面板）上鼠标右击任务计划程序入口，选择“链接到另一台计算机”。之后，在“选择计算机”对话框中，输入想要访问的计算机的主机名或IP地址，单击“确定”。
        （2）在任务计划程序库中的任一层次，都可以创建任务。其方法是：右击需要存储待创建任务的节点，选择“创建任务”，之后将启动“创建任务”向导。
        （3）在图中所示的“常规”选项卡中，为待创建任务键入任务名及其描述信息。任务名应该简短而富有描述性，以便根据名称确定其功能。可选的描述信息中可以对该任务的功能目标进行详尽的解释。完毕后，单击“下一步”。
        （4）默认情况下，高级任务也以其创建者的用户账号运行。如果需要以其他用户账号运行该任务，单击“更改用户或组”，之后在弹出的对话框中选择用户或组，使得任务以该用户或组运行。
        （5）默认情况下，任务只有在创建者或指定的用户登录时才运行。如果需要将其配置为不考虑具体的登录用户，可以选择“不管用户是否登录都要运行”通过这一设置，任务计划程序会存储创建者或指定用户的登录凭据。
        （注解  如果不希望任务计划程序存储于这些登录凭据相关联的口令，可以选择“不存储口令”这一复选框。然而，要记住的是，这样进行设置时，最燃不影响任务访问本地计算机的资源，但会组织任务访问远程计算机的资源。）
        （6）默认情况下，任务以创建者帐号或指定用户账号的标准权限运行，而非最高可能权限。如果任务需要管理员权限才能运行，则需要选中“使用最高权限运行”复选框。
        （7）默认情况下，任务总会在任务计划程序中显示。如果需要将任务隐藏，可以选中“隐藏”复选框，这将使得默认的任务计划程序视图中不会显示该任务。如果用户需要查看隐含的任务，就需要选择显示隐含任务选项。
        （8）默认情况下，高级任务是为Windows Vista与Windows Server 2008创建与使用的。如果需要创建高级任务并将其导出，之后再导入到此前版本的Windows系统中，可以在配置列表中选择Windows Server 2003、Windows XP或Windows 2000。
        （9）在“触发器”选项卡上，可以使用其上提供的选项开创建与管理触发器。通过触发器，可以将计划任务设置为只运行一次，周期性运行（每天、每星期，或每个月运行一次）。计算机启动时发生特定事件后运行，该任务的创建者登录时运行。要创建触发器，单击“新建”，之后使用可用的选项来对触发器进行配置，完毕后单击“确定”。根据实际需要，可以定义多个互不冲突的触发器。
        （10）在“操作”选项卡上，可以使用其上提供的选项来创建与管理操作。这里，操作可以是启动一个程序、发送一封电子邮件或显示一条消息。要创建一个操作，单击“新建”，之后使用可用的选项来对触发器进行配置，完毕后单击“确定”。根据实际需要，可以定义多个互不冲突的操作。
        （11）在“条件”选项卡上，可以指定启动或终止任务的限定条件。
        （12）在“设置”选项卡上，可以为任务选择任意附加的可选设置。
        （13）单击“确定”，完成任务的创建。创建任务后，可以通过其属性对话框对其设置进行修改。
    9.2.3管理任务属性
        通过任务计划程序，可以对本地计算机上配置好的任务进行访问与操作。选定一个任务后，通过主面板底部的选项卡可以查看其属性，包括任务状态、上一次运行时间、上一次运行结果等信息。在任务的“记录”选项卡上，可以查看该任务运行的详细的记录信息。通过记录信息，可以了解并有助于解决任务运行中存在的问题。如果需要修改任务的属性，可以双击该任务，之后通过属性对话框进行必要的修改。
    9.2.4激活与禁用任务
        根据实际需要，可以对任务进行激活与禁用。如果临时性地不使用某任务，可以对其进行禁用。如果需要使用该任务，就可以对其进行激活。通过对任务的激活与禁用，而不是删除，可以节省下重新配置任务设置所需的时间。要禁用某任务，可以右击该任务，之后选择“禁用”；要激活某任务，可以右击该任务，之后选择“激活”。
    9.2.5将任务复制到其他计算机
        任务计划程序中的导入、导出选项使得任务在不同计算机之间的复制变得非常容易。通过如下步骤，可以将任务复制到其他计算机。
        （1）依次单击“开始”、“管理工具”、“任务计划程序”，启动任务计划程序。
        （2）如果需要复制的任务不在当前登录的计算机上，右击任务计划程序节点，选择“连接到其他计算机”，使用该对话框连接到待复制任务所在的源计算机。
        （3）右击待复制的任务，选择“导出”。在“另存为”对话框中，为该任务的XML配置文件选择一个存储位置与文件名，之后单击“保存”。
        （4）右击任务计划程序节点，选择“连接到其他计算机”，使用该对话框连接到任务将要复制到目标计算机。
        （5）右击任务计划程序节点，选择“导入”。在“打开”对话框中，浏览到该任务的XML的XML配置文件所在存储位置，选中并打开该文件。
        （6）任务计划程序读取配置文件中该任务的原始设置，并打开“创建任务”对话框。通过该对话框，可以修改原始设置，使其满足目标计算机上的需要。完毕后，单击“确定”。
    9.2.6立即运行任务
        并不是必须等待任务计划运行的时间到达才能运行任务，实际上，你可以在任意时间运行任务。其方法是：打开任务计划程序，右击要运行的任务，之后选项“运行”。
    9.2.7移除不需要的任务
        如果不再需要某个任务，可以将其永久性地删除。其方法是：打开任务计划程序文件夹，右击要删除的任务，选择“删除”。
9.3使用Schtasks设置任务计划
    通过Schtasks，可以像使用任务计划程序一样设置计划任务。实际上，命令行形式的Schtasks与图形用户界面（GUI）形式的任务计划程序是等价的，二者可以互相处理对方的计划任务。
    Schtasks是命令行中可用的复杂命令之一，包含几种不同的子命令集，下面几节将对如下的一些子命令分别进行讨论。
    · Schtasks /Create。用于创建计划任务。
    · Schtasks /Change。用于改变现有任务的属性。
    · Schtasks /Query。用于在本地计算机或其他指定的计算机上显示计划任务。
    · Schtasks /Run。用于立即启动计划任务。
    · Schtasks /End。用于终止运行中的任务。
    · Schtasks /Delete。用于删除不再需要的任务。
    9.3.1使用Schtasks /Create创建计划任务
        通过Schtasks /Create，可以创建只运行一次的任务、可重现的任务，以及基于特定系统事件的任务，比如登录事件与启动事件等。使用该命令创建任务的基本语法格式如下：
            schtasks /create /tn TaskName /tr TaskToRun /sc ScheduleType [/mo Modifier]
        其中，TaskName为字符串形式的任务名，TaskToRun指定了要运行的程序、命令行工具、脚本所在位置的文件路径，ScheduleType指定了运行计划，Modifier是一个可选的值，用于对运行计划进行修改（根据计划类型）。通过上面的命令语法格式，可以izai本地计算机上创建任务，并为其赋予创建者的许可权限。如果未提供账号口令，则创建任务时会弹出信息要求输出口令。
        表中列出了ScheduleType的有效值，要注意不同计划类型可以接受的modifiers以及使用方法，在本章后面部分，将详细讨论每一种调度类型以及modifier。此外，要注意如下几点。
        · 你可以以逗号分隔的列表形式输入某星期的具体几天，比如Mon，Wed，Fri。也可以使用连字符（-）指定连续的几天，比如Mon-Fri，代表周一到周五。
        · 你可以以逗号分隔的列表形式输入某年的具体几个月份，比如Jan，Mar，Jun。也可以使用连字符（-）指定连续的几个月，比如Jan-Jun，代表1月份到6月份。
        · 对于某个月份的具体几个星期，只能输入一个值，比如FIRST或LAST。
            表  可用于Schtasks /Create的调度类型
                --------------------------------------------------------------------------------------
                调度类型|描述                                                        |Modifier值
                -------|-----------------------------------------------------------------------------
                minute |任务在指定的时间间隔（以分钟为计数单位）运行，默认情况下是1分钟运行一次|/mo 1~1439，任务两次运行之间间隔的分钟数，默认值为1
                hourly |任务在指定的时间间隔（以小时为计数单位）运行，默认情况下是1小时运行一次|/mo 1~23，任务两次运行之间间隔的小时数，默认值为1
                daily  |每天运行任务，或每隔n天运行任务，默认情况下是1天运行一次              |/mo 1~365，任务两次运行之间间隔的图案书，默认值为1
                weekly |每星期或每隔n个星期的某天运行任务，默认情况下是每星期的周一运行一次    |/mo 1-52，任务两次运行之间间隔的星期数。可选地，还可以使用/d指定在某个星期的具体哪几天运行。mon、tue、wed、thu、fri、sat、sun分别指代周一到周日，*指代某星期中的每一天
                monthly|1.每个月或每隔n个月的某天运行任务，默认情况下是每个月的第一天运行任务。。2.另一种月份变量，用于指定某个月的特定日期，包括/mo与/m，或/m与/d。。2.第三种月份变量，用于指定某个月的特定星期|1./mo 1~12，任务两次运行之间间隔的星期数。可选地，还可以使用/d mon-sun指定在某个月的星期几运行，*指代某月中的每一天。。2./mo lastday，代表某个月的最后一天。/m jav,feb,...,dec,设置具体哪一个月份。/d 1~31，设定某月的哪一天。。3./mo first|second|third|fourth|last,设置某月中的哪个星期。/d mon-sun，设置某星期的星期几。/m jan,feb,...,dec，设置具体哪一个月份
                once   |任务在指定的日期与时间运行一次                                      |
                onevent|指定的事件发生或指定的事件日志中有事件发生时运行任务                  |/mo XPathString，其中，XPathString为XPath时间查询字符串，用于标识触发任务的事件|
                onstart|系统启动时运行任务                                                 |
                onlogon|有用户登录时运行任务                                                |
                onidle |系统空闲了指定的时间间隔后运行任务                                   |/i 1~999，任务启动前系统空闲的分钟数。
                --------------------------------------------------------------------------------------------------------------------------------------------------
        要进一步了解如何使用Schtasks /Create，参考下面给出的一些实例。
        创建一个任务，该任务立即运行一次，之后不再运行：
            schtasks /create /tn "SysChecks" /tr c:\scripts\sch.bat /sc once
        创建一个任务，该任务在系统启动时运行：
            schtasks /create /tn "SysChecks" /tr c:\scripts\sch.bat /sc onstart
        创建一个任务，该任务在系统空闲时间超过10分钟后运行：
            schtasks /create /tn "SysChecks" /tr c:\scripts\sch.bat /sc onidle /i 10
        创建一个任务，该任务在本地计算机上每隔15分钟运行：
            schtasks /create /tn "SysChecks" /tr c:\scripts\sch.bat /sc minute /mo 15
        创建一个任务，该任务在本地计算机上每隔5小时运行：
            schtasks /create /tn "SysChecks" /tr c:\scripts\sch.bat /sc hourly /mo 5
        创建一个任务，该任务在本地计算机上每隔2天运行：
            schtasks /create /tn "SysChecks" /tr c:\scripts\sch.bat /sc daily /mo 2
        创建一个任务，该任务在每隔两个星期的星期一（默认的运行日期）运行：
            schtasks /create /tn "SysChecks" /tr c:\scripts\sch.bat /sc weekly /mo 2
        创建一个任务，该任务在每个星期的周一与周五运行：
            schtasks /create /tn "SysChecks" /tr c:\scripts\sch.bat /sc weekly /d mon,fri 
        创建一个任务，该任务在每个月的第1天运行：
            schtasks /create /tn "SysChecks" /tr c:\scripts\sch.bat /sc monthly 
        创建一个任务，该任务在每隔一个月的第5天运行：
            schtasks /create /tn "SysChecks" /tr c:\scripts\sch.bat /sc monthly /mo 3 /d 5
        创建一个任务，该任务在每个月的最后一天运行：
            schtasks /create /tn "SysChecks" /tr c:\scripts\sysch.bat /sc monthly /mo lastday 
        创建一个任务，该任务在4月、8月、12月的第一个星期一运行：
            schtasks /create /tn "SysChecks" /tr c:\scripts\sysch.bat /sc monthly /mo first /d mon /m apr,aug,dec 
        如果指定任务的文件路径中包含空格，要注意使用双引号对其进行封装，如下面实例所示：
            schtasks /create /tn "SysChecks" /tr "c:\My Scripts\sch.bat" /sc onstart 
        如果没有使用双引号进行封装，则Schtasks尝试运行该任务时会出错。进一步地，如果需要向任务指定的程序、工具、脚本传递参数，可以将其附加在指定该任务的文件路径之后。如果参数中包含空格，也应该使用双引号对其进行封装，以便该参数被正确解释为单一的参数，而非多个参数。下面给出了几个实例：
            schtasks /create /tn "SysChecks" /tr c:\scripts\sch.bat 1 Y LAST /sc onstart 
            schtasks /create /tn "SysChecks" /tr "c:\My Scripts\sch.bat" Y N /sc onstart 
            schtasks /create /tn "SysChecks" /tr "c:\My Scripts\sch.bat" "Full Checks"
        你可以对远程计算机上的任务进行调度，也可以调度那些需要不同用户许可权限的任务。对远程计算机上的任务进行调度时，要记住的关键一点是当前使用的计算机必须与远程计算机在同一个域内，或者在远程计算机所信任的域内。为此，必须使用扩展的语法格式，包含如下的一些参数：
            /s Computer /u [Domain\]User [/p Password]
        其中，Computer为远程计算机或IP地址，Domain为可选的域名，用户账号就存在于该域内，User为用户账号名（要使用的就是该用户账号的许可权限），Password为该用户账号的口令（可选）。如果没有指定域，则系统会假定当前域作为默认的域名。如果没有指定口令，则会弹出提示信息要求输入口令。
        要了解如何添加计算机与用户信息，参考如下的实例。
        在本地计算机上创建任务时，使用账号adatum\wrstanek：
            schtasks /create /tn "SysChecks" /tr c:\scripts\sch.bat /sc onstart /u adatum\wrstanek /p RoverSays
        创建任务时，将远程计算机设置为mailer01，使用的账号为adatum\wrtanek： 
            schtasks /create /tn "SysChecks" /tr c:\scripts\sch.bat /sc onstart /s mailer01 /u adatum\wrstanek /p RoverSays
        通过/Ru参数与/Rp参数，可以指定该任务运行时使用的用户账号的登录凭据。如果希望任务只有在特定用户登录时才运行，可以使用可选的/It参数，该参数规定任务应该以非交互方式运行，并且只有在该任务的创建者登录时才运行。对于只需要操作本地资源的任务，可以使用/Np参数，从而不需要为用户账号的登录凭据保存口令。要注意的是，没有保存口令的情况下，任务只能访问本地资源，并以非交互方式由指定的用户运行。
        默认情况下，任务以标准用户权限运行。如果希望任务以指定用户的最高权限运行（比如要执行管理性任务），可以将/Rl参数设置为Highest，而不是默认的值Limited。
        要了解如何添加可替换的登录凭据与特权，参考如下实例。
        将任务配置为使用adatum\thomasv的登录凭据：
            schtasks /create /tn "Cleanup" /tr c:\scripts\cleanup.bat /sc onlogon /ru adatum\thomasv /rp DingoE
        将远程计算机设置为server18，用于创建该任务的账号为adatum\wrstanek，任务使用adatum\thomasv的登录凭据运行：
            schtasks /create /tn "Cleanup" /tr c:\scripts\cleanup.bat /sc onlogon /s server18 /u adatum\wrstanek /p RoverSays /ru adatum\thomasv /rp DingoE 
        使用账号adatum\wrstanek在server18上运行任务，不保存口令：
            schtasks /create /tn "Cleanup" /tr c:\scripts\cleanup.bat /sc onlogon /s server18 /u adatum\wrstanek /np
            以最高权限运行任务：
            schtasks /create /tn "SysChecks" /tr c:\scripts\sch.bat /sc onlogon /rl highest 
        最后，如果需要，可以为任务添加特定的启动时间与日期，以及结束时间与日期，如下所示。
        · /st StartTime。其中StartTime为24小时制格式（HH：MM），比如，15：00代表下午3点。使用/sc once时，这一参数是需要的。
        · /et EndTime。其中，EndTime为24小时制格式（HH：MM），比如，15：00代表下午3点。调度类型为onstart、onlogon、onidle、onevent时，这一参数是不适用的。
        · /du Duration。其中，Duration为任务运行持续的小时数与分钟数，其格式为HHHH：MM。调度类型为ONSTART、ONLOGON、ONIDLE、ONEVENT时，这一参数是不适用的。
        · /sd StartDate。其中，StartDate为任务的开始日期，采用默认的日志格式，比如MM/DD/YYYY。调度类型为ONCE、ONSTART、ONLOGON、ONIDLE、ONEVENT时，这一参数是不适用的。
        · /ed EndDate。其中，EndDate为任务的结束日期，采用默认的系统日期格式，比如MM/DD/YYYY。调度类型为ONCE、ONSTART、ONLOGON、ONIDLE、ONEVENT时，这一参数是不适用的。
        （提示  如果指定了终止日期或时间，你也可以指定/Z参数，该参数的作用是完成任务的计划运行后删除该任务。）
        要了解如何指定特定的开始时间与日期，以及终止时间与日期，可以参考如下实例。
        在午夜启动每小时执行一次的任务：
            schtasks /create /tn "SysChecks" /tr c:\scripts\sch.bat /sc hourly /st 00:00
        在上午三点启动每小时执行一次的任务，在上午七点结束：
            schtasks /create /tn "SysChecks" /tr c:\scripts\sch.bat /sc hourly /st 03:00 /et 07:00
        在2009年2月20日上午三点启动每星期执行一次的任务：
            schtasks /create /tn "SysChecks" /tr c:\scripts\sch.bat /sc weekly /st 03:00 /sd 02/20/2009
        在2009年2月20日上午三点启动每星期执行一次的任务，在2009年3月15日上午2：59终止该任务：
            schtasks /create /tn "SysChecks" /tr c:\scripts\sch.bat /sc weekly /st 03:00 /sd 02/20/2009 /et 02:59 /ed 03/15/2009
        （注解  日期与时间格式是由区域与语言选项的设置决定的。在上面的这些实例中，时区设置为English（United States）。）
    9.3.2创建由Windows事件触发的计划任务
        通过Schtasks /Create，可以创建操作系统或Windows组件向某个事件日志写入特定事件或特定类型事件时启动的任务。创建这种事件触及型任务的基本语法格式如下：
            schtasks /create /tn TaskName /tr TaskToRun /sc ONEVENT /ec LogName /mo EventString 
        其中，TaskName为字符串形式的任务名，TaskToRun指定了要运行的程序、命令行工具、脚本所在位置的文件路径，LogName设置了要监控的事件日志名，EventString设置了XPath事件查询字符串，该字符串用于识别触发任务的时间或事件集。
        /sc ONEVENT的作用是将计划任务设置为由事件触发，/Ec参数则指定了在命令行中可以使用的待监控事件日志名。如第8章8.1.2节所讲述，你可以使用Wevtutil el命令列出计算机上所有可用的事件日志。/Mo参数用于指定XPath事件查询字符串，第8章中对XPath查询进行了深入讨论。
        创建查询字符串时，并不是一定要完全重新创建。实际上，通过事件查看器创建过滤器，并由其识别待监控的事件或事件集是一个有效的方法。创建之后，参考第8章8.1.4节讲述的方法，将相关的XPath查询复制到记事本或其他文本编辑器中。复制到记事本中之后，保存该查询以便保留原始设置，之后从中提取必要的事件查询字符串。一般来说，需要的事件查询字符串存在于Query元素中的<Select>标签与</Select>标签之间。参考如下实例：
            <QueryList>
                <Query Id="0" Path="Application">
                    <Select Path="Application">*[System[(Level=1 or Level=2 or Level=3)]]</Select>
                </Query>
            </QueryList>
        在这一实例中，事件查询字符串为：
            *[System[(Level=1 or Level=2 or Level=3)]]
        这一查询字符串创建了一个过滤器，其作用是在可用的事件日志中搜索关键性事件、警告事件与错误事件。下面的实例中，使用这一查询创建了一个名为Track Application Issues的计划任务，该任务的作用是有关键性事件、警告事件与错误事件写入到可用的事件日志时运行事件查看器：
            schtasks /create /tn "Track Application Issues" /tr wevtvwr.msc /sc /ONEVENT /ec Application /mo "*[System[(Level=1 or Level=2 or Level=3)]]"
        要注意的是，由于任务名与查询字符串中包含空格，因此使用双引号对其进行封装。尽管这一查询字符串可能过于宽泛，但仍不失为一个了解查询字符串的参考实例。更有效的查询字符串用于识别特定事件（根据事件标识符），用于指定单独的事件标识符的事件查询字符串的语法格式如下：
            *[System [ (EventID=EventNumber)]]
        齐总，EventNumber为待监控事件的标识符。下面的实例中，创建了一个计划任务，使其在事件ID为3210的事件写入到系统日志时运行：
            schtasks /create /tn "Computer Authentication Issues" /tr wevtvwe.msc /sc ONEVENT /ec System /mo "*[System[(EventID=3210)]]"
        （真实场景  计算机无法在域内进行认证时，事件ID为3210的时间就会写入到系统日志。在计算机口令需要重置时，就会产生这一事件，第14章14.3.4节对此进行了讨论，此外，如果计算机名与网络中另一台计算机重名，也会产生这一错误。）
        通过使用or语句对查询字符串进行扩展，可以输入多个事件标识符，扩展的语法格式如下：
            *[System[(EventID=EventNumber or EventID=EventNumber or ...)]]
        下面的实例中，创建了一个计划任务，使其在事件ID为3210或5722的时间写入到系统日志时运行：
            schtasks /create /tn "Computer Authentication Issues" /tr wevtvwr.msc /sc ONEVENT /ec System /mo "*[System[(EventID=3210 or EventID=5722)]]"
        （真实场景  计算机被拒绝访问某资源时，事件ID为5722的事件就会写入到系统日志，在计算机帐号被禁用或删除时就会产生这一错误。在第14章14.2.1与14.3.3两节中有关于这一主题更多的信息。）
    9.3.3使用SchTasks /Change改变计划任务
        你可以使用Schtasks /Change来改变与计划任务相关联的关键参数，其基本语法格式如下：
            schtasks /change /tn TaskName ParametersToChange
        其中，TaskName为想要改变参数的任务名，ParametersToChange为需要修改的参数，可以使用该命令操作的参数如下所示。
        · /ru Domain\User。用于修改运行该任务的用户，比如，/ru adatum\wrstanek。对系统账号有效值包括“”、“NT AUTHORITY\SYSTEM”、“SYSTEM”。对配置为用于操作Windows Vista与Windows Server 2008的任务，也可以使用“NT AUTHORITY\LOCAL-SERVICE”、“NT AUTHORITY\NETWORKSERVICE”等账号。
        · /rp Password。用于为以前指定的或新指定的用户账号设置口令。如果希望弹出输入口令的提示信息，此处可以使用“*”或空口令。对于系统账号，此处的口令是忽略的。只有在指定用户账号的同时，才可以为其设置口令。
        · /tr TaskToRun。用于改变指定任务下运行的程序、命令行工具或脚本。
        · /st StartTime。为每N分钟或每N小时运行的任务设置开始时间。其中，StartTime为24小时制格式（HH：MM），比如，15：00代表下午3点。在创建计划任务指定了/sc ONCE时，这一参数是需要的。
        · /ri Interval。设置了以分钟为计数单位的循环时间间隔，有效取值范围为1~5999940.计划类型为MINUTE、HOURLY、ONSTART、ONLOGON、ONIDLE、ONEVENT时，这一参数是不适用的。如果指定了/Et参数或/Du参数，则本参数默认为10分钟。
        · /et EndTime。为每N分钟或每N小时运行的任务设置结束时间。其中，EndTime为24小时制格式（HH：MM），比如，15：00代表下午3点。调度类型为ONSTART、ONLOGON、ONIDLE、ONEVENT时，这一参数是不适用的。
        · /du Duration。设置了运行任务持续的小时数与分钟数，其格式为HHHH：MM。调度类型为ONSTART、ONLOGON、ONIDLE、ONEVENT时，或设置了/Et参数时，这一参数是不适用的。
        · /sd StartDate。设置了任务的开始日期，采用默认的系统日期格式，比如MM/DD/YYYY。调度类型为ONCE、ONSTAART、ONLOGON、ONIDLE、ONEVENT时，这一参数是不适用的。
        · /ed EndDate。设置了任务的结束日期，采用默认的系统日期格式，比如MM/DD/YYYY。调度类型为ONCE、ONSTAART、ONLOGON、ONIDLE、ONEVENT时，这一参数是不适用的。
        · /k。当任务的结束时间或持续时间已到后，不应该再启动该任务。但如果任务已经在运行中，也不会强行终止该任务，而是等本次运行结束后不再启动。本参数生效的先决条件是必须已经指定了/Et参数或/Du参数。调度类型为ONSTART、ONLOGON、ONIDLE、ONEVENT时，这一参数是不适用的。
        · /it。只有在任务所有者登录时才应该运行该任务。
        · /rl Level。对标准用户权限，将任务运行界别设置为Limited。对runas用户的最高可能权限，将任务运行级别设置为Highest。
        · /delay DelayTime。设置了任务出发到运行的时间延迟。DelayTime以mmmm:ss的形式进行设置，本参数只适用于ONSTART、ONLOGON、ONEVENT等调度类型。
        · /enable。激活计划任务，使其可以根据调度计划运行。
        · /disable。禁用计划任务，禁止其运行。
        · /z。在任务最后一次调度运行后将其删除。
        要了解如何改变任务，参考如下实例：
        改变要运行的脚本：
            schtasks /change /tn "SysChecks" /tr c:\scripts\systemchecks.bat 
        改变用户账号与口令：
            schtasks /change /tn "SysChecks" /ru adatum\hthomas .rp gophers
        将任务改变为在2009年3月1日上午七点开始每星期运行一次，在2009年3月30日上午6：59结束：
            schtasks /change /tn "SysChecks" /st 07:00 /sd 03/01/2009 /et 06:59 /ed 03/30/2009
        （注解  与前面类似，日期与时间格式是由区域与语言的设置决定的，在上面的这些实例中，时区设置为English（United States）。）
        对任务进行修改时，Schtasks会显示一条消息，并声明修改成功或失败，比如：
            SUCCESS: The parameters of the scheduled task "SysChecks" have been changed.
        如果操作的是远程计算机，或者当前登录的用户账号不具备修改任务的许可权限，则可以根据需要指定计算机与帐号信息。其语法格式为：
            schtasks /change /tn TaskName /s Computer /u [Domain\]User [/p Password]
        其中，Computer为远程计算机名或IP地址，Domain为可选的域名，用户账号就存在于该域内，User为用户账号名（要使用的就是该用户账号的许可权限），Password为该用户账号的口令（可选）。如果没有指定域，则系统会假定当前域作为默认的域名。如果没有指定口令，则会弹出提示信息要求输入口令。
        下面的实例中，远程计算机为mailer01，有权限修改任务SysChecks的用户账号为adatum\wrstanek:
            schtasks /change /tn "SysChecks" /tr c:\scripts\systemchecks.bat /s mailer01 /u adatum\wrstanek 
        由于上面命令中没有指定口令，因此，执行时Schtasks会要求输入口令。
        你可以根据任务名快速地对其进行激活或禁用，激活任务的语法格式如下：
            schtasks /change /tn TaskName /enable 
            禁用任务的语法格式如下：
            schtasks /change /tn TaskName /disable 
        其中，TaskName为要激活或禁用的任务名，比如：
            schtasks /change /tn "Syschecks" /disable 
    9.3.4使用Schtasks /Query查询已配置的任务
        通过在命令提示符中键入schtasks /query命令，可以快速地确定计算机上配置了哪些任务。对远程计算机，可以指定必要的计算机与帐号信息，使用如下的语法格式：
            schtasks /query /s Computer /u [Domain\]User [/p Password]
        其中，Computer为远程计算机名或IP地址，Domain为可选的域名，用户账号就存在于该域内，User为用户账号名，该账号具备远程计算机上适当的访问许可权限，Password为该用户账号的口令（可选）。
        下面的实例中，远程计算机为mailer01，用户账号为adatum\wrstanek：
            schtasks /query /s mailer01 /u adatum\wrstanek
        由于上面命令中没有指定口令，因此，执行时Schtasks会要求输入口令。
        Schtasks /Query命令的基本输出信息以表格形式呈现，包括TaskName、Next Run Time、Status等列。通过分别使用/Fo List或/Fo Csv参数，也可以使得输出信息分别呈现为列表形式与逗号分隔的多行形式。使用列表格式输出时，最好同时使用/V（verbose）参数，该参数提供了所有任务属性的完整的详细资料，如下面的实例所示：
            schtasks /query /s mailer01 /u adatum\wrstanek /fo list /v 
        另一个有用的参数是/Nh，该参数规定表格形式或CSV格式的输出中不带头信息。
        （提示  你可能会疑惑为什么要使用不同的输出格式，实际上不同的输出格式可以满足不同的需求，如果需要查看系统中已配置所有任务的详细资料，或者正在进行故障排除，建议使用详细列表格式（/Fo List /v）。如果需要将输出信息存储到一个文件中，并且日后可能会将其导出到电子表格或非关系型数据库，建议使用逗号分隔的形式。另外，也可以使用输出重定向符号（>或>>）将Schtasks的输出信息进行重定向。）
    9.3.5使用XML配置文件创建任务
        
